{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst networks_1 = require('../networks');\n\nconst bscript = require('../script');\n\nconst lazy = require('./lazy');\n\nconst OPS = bscript.OPS;\n\nconst typef = require('typeforce');\n\nconst ecc = require('tiny-secp256k1');\n\nconst OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\n\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n} // input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\n\n\nfunction p2ms(a, opts) {\n  if (!a.input && !a.output && !(a.pubkeys && a.m !== undefined) && !a.signatures) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n\n  function isAcceptableSignature(x) {\n    return bscript.isCanonicalScriptSignature(x) || (opts.allowIncomplete && x === OPS.OP_0) !== undefined;\n  }\n\n  typef({\n    network: typef.maybe(typef.Object),\n    m: typef.maybe(typef.Number),\n    n: typef.maybe(typef.Number),\n    output: typef.maybe(typef.Buffer),\n    pubkeys: typef.maybe(typef.arrayOf(ecc.isPoint)),\n    signatures: typef.maybe(typef.arrayOf(isAcceptableSignature)),\n    input: typef.maybe(typef.Buffer)\n  }, a);\n  const network = a.network || networks_1.bitcoin;\n  const o = {\n    network\n  };\n  let chunks = [];\n  let decoded = false;\n\n  function decode(output) {\n    if (decoded) return;\n    decoded = true;\n    chunks = bscript.decompile(output);\n    o.m = chunks[0] - OP_INT_BASE;\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE;\n    o.pubkeys = chunks.slice(1, -2);\n  }\n\n  lazy.prop(o, 'output', () => {\n    if (!a.m) return;\n    if (!o.n) return;\n    if (!a.pubkeys) return;\n    return bscript.compile([].concat(OP_INT_BASE + a.m, a.pubkeys, OP_INT_BASE + o.n, OPS.OP_CHECKMULTISIG));\n  });\n  lazy.prop(o, 'm', () => {\n    if (!o.output) return;\n    decode(o.output);\n    return o.m;\n  });\n  lazy.prop(o, 'n', () => {\n    if (!o.pubkeys) return;\n    return o.pubkeys.length;\n  });\n  lazy.prop(o, 'pubkeys', () => {\n    if (!a.output) return;\n    decode(a.output);\n    return o.pubkeys;\n  });\n  lazy.prop(o, 'signatures', () => {\n    if (!a.input) return;\n    return bscript.decompile(a.input).slice(1);\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signatures) return;\n    return bscript.compile([OPS.OP_0].concat(a.signatures));\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  lazy.prop(o, 'name', () => {\n    if (!o.m || !o.n) return;\n    return `p2ms(${o.m} of ${o.n})`;\n  }); // extended validation\n\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output);\n      if (!typef.Number(chunks[0])) throw new TypeError('Output is invalid');\n      if (!typef.Number(chunks[chunks.length - 2])) throw new TypeError('Output is invalid');\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG) throw new TypeError('Output is invalid');\n      if (o.m <= 0 || o.n > 16 || o.m > o.n || o.n !== chunks.length - 3) throw new TypeError('Output is invalid');\n      if (!o.pubkeys.every(x => ecc.isPoint(x))) throw new TypeError('Output is invalid');\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch');\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch');\n      if (a.pubkeys && !stacksEqual(a.pubkeys, o.pubkeys)) throw new TypeError('Pubkeys mismatch');\n    }\n\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length) throw new TypeError('Pubkey count mismatch');\n      o.n = a.pubkeys.length;\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m');\n    }\n\n    if (a.signatures) {\n      if (a.signatures.length < o.m) throw new TypeError('Not enough signatures provided');\n      if (a.signatures.length > o.m) throw new TypeError('Too many signatures provided');\n    }\n\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid');\n      if (o.signatures.length === 0 || !o.signatures.every(isAcceptableSignature)) throw new TypeError('Input has invalid signature(s)');\n      if (a.signatures && !stacksEqual(a.signatures, o.signatures)) throw new TypeError('Signature mismatch');\n      if (a.m !== undefined && a.m !== a.signatures.length) throw new TypeError('Signature count mismatch');\n    }\n  }\n\n  return Object.assign(o, a);\n}\n\nexports.p2ms = p2ms;","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/node_modules/bitcoinjs-lib/src/payments/p2ms.js"],"names":["Object","defineProperty","exports","value","networks_1","require","bscript","lazy","OPS","typef","ecc","OP_INT_BASE","OP_RESERVED","stacksEqual","a","b","length","every","x","i","equals","p2ms","opts","input","output","pubkeys","m","undefined","signatures","TypeError","assign","validate","isAcceptableSignature","isCanonicalScriptSignature","allowIncomplete","OP_0","network","maybe","Number","n","Buffer","arrayOf","isPoint","bitcoin","o","chunks","decoded","decode","decompile","slice","prop","compile","concat","OP_CHECKMULTISIG"],"mappings":"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","sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\nconst typef = require('typeforce');\nconst ecc = require('tiny-secp256k1');\nconst OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\nfunction p2ms(a, opts) {\n  if (\n    !a.input &&\n    !a.output &&\n    !(a.pubkeys && a.m !== undefined) &&\n    !a.signatures\n  )\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  function isAcceptableSignature(x) {\n    return (\n      bscript.isCanonicalScriptSignature(x) ||\n      (opts.allowIncomplete && x === OPS.OP_0) !== undefined\n    );\n  }\n  typef(\n    {\n      network: typef.maybe(typef.Object),\n      m: typef.maybe(typef.Number),\n      n: typef.maybe(typef.Number),\n      output: typef.maybe(typef.Buffer),\n      pubkeys: typef.maybe(typef.arrayOf(ecc.isPoint)),\n      signatures: typef.maybe(typef.arrayOf(isAcceptableSignature)),\n      input: typef.maybe(typef.Buffer),\n    },\n    a,\n  );\n  const network = a.network || networks_1.bitcoin;\n  const o = { network };\n  let chunks = [];\n  let decoded = false;\n  function decode(output) {\n    if (decoded) return;\n    decoded = true;\n    chunks = bscript.decompile(output);\n    o.m = chunks[0] - OP_INT_BASE;\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE;\n    o.pubkeys = chunks.slice(1, -2);\n  }\n  lazy.prop(o, 'output', () => {\n    if (!a.m) return;\n    if (!o.n) return;\n    if (!a.pubkeys) return;\n    return bscript.compile(\n      [].concat(\n        OP_INT_BASE + a.m,\n        a.pubkeys,\n        OP_INT_BASE + o.n,\n        OPS.OP_CHECKMULTISIG,\n      ),\n    );\n  });\n  lazy.prop(o, 'm', () => {\n    if (!o.output) return;\n    decode(o.output);\n    return o.m;\n  });\n  lazy.prop(o, 'n', () => {\n    if (!o.pubkeys) return;\n    return o.pubkeys.length;\n  });\n  lazy.prop(o, 'pubkeys', () => {\n    if (!a.output) return;\n    decode(a.output);\n    return o.pubkeys;\n  });\n  lazy.prop(o, 'signatures', () => {\n    if (!a.input) return;\n    return bscript.decompile(a.input).slice(1);\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signatures) return;\n    return bscript.compile([OPS.OP_0].concat(a.signatures));\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  lazy.prop(o, 'name', () => {\n    if (!o.m || !o.n) return;\n    return `p2ms(${o.m} of ${o.n})`;\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output);\n      if (!typef.Number(chunks[0])) throw new TypeError('Output is invalid');\n      if (!typef.Number(chunks[chunks.length - 2]))\n        throw new TypeError('Output is invalid');\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG)\n        throw new TypeError('Output is invalid');\n      if (o.m <= 0 || o.n > 16 || o.m > o.n || o.n !== chunks.length - 3)\n        throw new TypeError('Output is invalid');\n      if (!o.pubkeys.every(x => ecc.isPoint(x)))\n        throw new TypeError('Output is invalid');\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch');\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch');\n      if (a.pubkeys && !stacksEqual(a.pubkeys, o.pubkeys))\n        throw new TypeError('Pubkeys mismatch');\n    }\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length)\n        throw new TypeError('Pubkey count mismatch');\n      o.n = a.pubkeys.length;\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m');\n    }\n    if (a.signatures) {\n      if (a.signatures.length < o.m)\n        throw new TypeError('Not enough signatures provided');\n      if (a.signatures.length > o.m)\n        throw new TypeError('Too many signatures provided');\n    }\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid');\n      if (\n        o.signatures.length === 0 ||\n        !o.signatures.every(isAcceptableSignature)\n      )\n        throw new TypeError('Input has invalid signature(s)');\n      if (a.signatures && !stacksEqual(a.signatures, o.signatures))\n        throw new TypeError('Signature mismatch');\n      if (a.m !== undefined && a.m !== a.signatures.length)\n        throw new TypeError('Signature count mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2ms = p2ms;\n"]},"metadata":{},"sourceType":"script"}