{"ast":null,"code":"import * as bip39 from \"bip39\";\nimport { pbkdf2Sync } from \"crypto\";\nimport { PrivateKey } from '@textile/hub';\n/**\n * 创建助词器\n */\n\nexport function createMnemonic() {\n  var bip39Mnemonic = bip39.generateMnemonic();\n  console.log(\"mnemonic:\" + bip39Mnemonic);\n  return bip39Mnemonic;\n}\nexport function createSeedByMnemonic(mnemonic) {\n  const seed = pbkdf2Sync(mnemonic, 'salt', 1024, 32, 'sha512');\n  return seed;\n}\nexport function userIdentityFromSeed(seed) {\n  // @ts-ignore\n  return PrivateKey(seed, 'ed25519');\n}\nexport async function getLocalUserIdentity() {\n  const localUserIdentity = localStorage.getItem(\"private.user.identity\");\n\n  if (localUserIdentity == null) {\n    // @ts-ignore\n    return null;\n  }\n\n  const restored = PrivateKey.fromString(localUserIdentity);\n  return restored;\n}\nexport function saveLocalUserIdentity(userIdentity) {\n  localStorage.setItem(\"private.user.identity\", userIdentity);\n}","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/common/user.ts"],"names":["bip39","pbkdf2Sync","PrivateKey","createMnemonic","bip39Mnemonic","generateMnemonic","console","log","createSeedByMnemonic","mnemonic","seed","userIdentityFromSeed","getLocalUserIdentity","localUserIdentity","localStorage","getItem","restored","fromString","saveLocalUserIdentity","userIdentity","setItem"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,UAAR,QAAyB,QAAzB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AAEA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,GAA0B;AAC7B,MAAIC,aAAa,GAAGJ,KAAK,CAACK,gBAAN,EAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAYH,aAAxB;AACA,SAAOA,aAAP;AACH;AAED,OAAO,SAASI,oBAAT,CAA8BC,QAA9B,EAA+C;AAClD,QAAMC,IAAI,GAAET,UAAU,CAACQ,QAAD,EAAW,MAAX,EAAmB,IAAnB,EAAyB,EAAzB,EAA6B,QAA7B,CAAtB;AACA,SAAOC,IAAP;AACH;AAED,OAAQ,SAASC,oBAAT,CAA8BD,IAA9B,EAAqE;AACzE;AACA,SAAQR,UAAU,CAACQ,IAAD,EAAO,SAAP,CAAlB;AACH;AAED,OAAO,eAAgBE,oBAAhB,GAA6D;AAChE,QAAMC,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,uBAArB,CAA1B;;AACA,MAAIF,iBAAiB,IAAE,IAAvB,EAA4B;AACxB;AACA,WAAO,IAAP;AACH;;AACD,QAAMG,QAAQ,GAAGd,UAAU,CAACe,UAAX,CAAsBJ,iBAAtB,CAAjB;AACA,SAAOG,QAAP;AACH;AAED,OAAO,SAASE,qBAAT,CAA+BC,YAA/B,EAAqD;AACxDL,EAAAA,YAAY,CAACM,OAAb,CAAqB,uBAArB,EAA8CD,YAA9C;AACH","sourcesContent":["import * as bip39 from \"bip39\";\nimport {pbkdf2Sync} from \"crypto\";\nimport {PrivateKey} from '@textile/hub'\n\n/**\n * 创建助词器\n */\nexport function createMnemonic() {\n    var bip39Mnemonic = bip39.generateMnemonic();\n    console.log(\"mnemonic:\"+bip39Mnemonic)\n    return bip39Mnemonic\n}\n\nexport function createSeedByMnemonic(mnemonic:string) {\n    const seed= pbkdf2Sync(mnemonic, 'salt', 1024, 32, 'sha512');\n    return seed\n}\n\nexport  function userIdentityFromSeed(seed:Uint8Array) : Promise<PrivateKey> {\n    // @ts-ignore\n    return  PrivateKey(seed, 'ed25519');\n}\n\nexport async  function getLocalUserIdentity() : Promise<PrivateKey> {\n    const localUserIdentity = localStorage.getItem(\"private.user.identity\");\n    if( localUserIdentity==null){\n        // @ts-ignore\n        return null;\n    }\n    const restored = PrivateKey.fromString(localUserIdentity);\n    return restored\n}\n\nexport function saveLocalUserIdentity(userIdentity : string){\n    localStorage.setItem(\"private.user.identity\", userIdentity);\n}\n\n"]},"metadata":{},"sourceType":"module"}