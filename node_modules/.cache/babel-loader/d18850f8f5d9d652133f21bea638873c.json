{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/apiece/src/views/mnemonic/ImportMnemonic.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../assets/jss/material-kit-react/views/landingPage.js\";\nimport Parallax from \"../../components/Parallax/Parallax\";\nimport GridContainer from \"../../components/Grid/GridContainer\";\nimport GridItem from \"../../components/Grid/GridItem\";\nimport Card from \"@material-ui/core/Card\";\nimport { createMnemonic } from \"../../common/user\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState } from \"react\";\nimport Header from \"../../components/comps/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\nexport default function ImportMnemonicPage(props) {\n  _s();\n\n  let loading = document.getElementById('loader');\n  loading.style.display = 'none';\n  const mnemonic = createMnemonic();\n  const classes = useStyles();\n  const [input, setInput] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-64 inline-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container relative \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" flex flex-col \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full lg:w-6/12 px-4 ml-auto mr-auto \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-white font-semibold text-5xl \",\n                children: \"Enter the account mnemonic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-4 text-lg text-gray-300\",\n                children: \"Warning: Each word of the account word aid needs to be separated by a space. Do not disclose your account word to others. Once anyone has the mnemonic phrase for the account, they can view the data you uploaded. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"p-4 mt-12 w-full lg:w-6/12 ml-auto mr-auto \",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: function (value) {\n                setInput(value.target.value);\n              },\n              className: classes.input,\n              multiline: true,\n              id: \"outlined-password-input\",\n              label: \"Enter mnemonic\",\n              type: \"text\",\n              InputLabelProps: {\n                shrink: true\n              },\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 mt-12 w-full lg:w-6/12 ml-auto mr-auto \",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: function () {\n                props.history.replace({\n                  pathname: \"/userIdentity\",\n                  state: {\n                    mnemonic: input,\n                    isEnter: true\n                  }\n                });\n              },\n              className: classes.navLinkRight,\n              variant: \"contained\",\n              color: \"secondary\",\n              children: \"\\u4E0B\\u4E00\\u6B65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImportMnemonicPage, \"42wsf7phHsW6tn2niEE5xNUw4us=\", false, function () {\n  return [useStyles];\n});\n\n_c = ImportMnemonicPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportMnemonicPage\");","map":{"version":3,"sources":["/Users/wiki/code/apiece/src/views/mnemonic/ImportMnemonic.js"],"names":["React","makeStyles","styles","Parallax","GridContainer","GridItem","Card","createMnemonic","TextField","List","ListItem","Button","useState","Header","useStyles","ImportMnemonicPage","props","loading","document","getElementById","style","display","mnemonic","classes","input","setInput","value","target","shrink","history","replace","pathname","state","isEnter","navLinkRight"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport styles from \"../../assets/jss/material-kit-react/views/landingPage.js\";\nimport Parallax from \"../../components/Parallax/Parallax\";\nimport GridContainer from \"../../components/Grid/GridContainer\";\nimport GridItem from \"../../components/Grid/GridItem\";\nimport Card from \"@material-ui/core/Card\";\nimport {createMnemonic} from \"../../common/user\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Button from \"@material-ui/core/Button\";\nimport {useState} from \"react\";\nimport Header from \"../../components/comps/Header\";\n\nconst useStyles = makeStyles(styles);\nexport default function ImportMnemonicPage(props) {\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n    const mnemonic = createMnemonic();\n    const classes = useStyles();\n    const [input,setInput] = useState();\n    return (\n        <div>\n            <div>\n                <Header/>\n                <div className=\"mt-64 inline-block\"/>\n\n                <div className=\"container relative \">\n                    <div className=\" flex flex-col \">\n                        <div className=\"w-full lg:w-6/12 px-4 ml-auto mr-auto \">\n                            <div >\n                                <h1 className=\"text-white font-semibold text-5xl \">\n                                    Enter the account mnemonic\n                                </h1>\n                                <p className=\"mt-4 text-lg text-gray-300\">\n                                    Warning: Each word of the account word aid needs to be separated by a space.\n                                    Do not disclose your account word to others. Once anyone has the mnemonic phrase for\n                                    the\n                                    account, they can view the data you uploaded. </p>\n                            </div>\n                        </div>\n\n                        <Card className=\"p-4 mt-12 w-full lg:w-6/12 ml-auto mr-auto \">\n                            <TextField\n                                onChange={function (value) {\n                                    setInput(value.target.value);\n                                }}\n                                className={classes.input}\n                                multiline\n                                id=\"outlined-password-input\"\n                                label=\"Enter mnemonic\"\n                                type=\"text\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                variant=\"outlined\"\n                            />\n                        </Card>\n                        <div className=\"p-4 mt-12 w-full lg:w-6/12 ml-auto mr-auto \">\n                            <Button\n                                onClick={function () {\n                                    props.history.replace({\n                                        pathname: \"/userIdentity\",\n                                        state:{\n                                            mnemonic:input,\n                                            isEnter: true\n                                        }\n                                    })\n                                }}\n                                className={classes.navLinkRight}\n                                variant=\"contained\" color={\"secondary\"}>\n                                下一步\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}