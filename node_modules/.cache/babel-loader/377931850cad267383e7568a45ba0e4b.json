{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/components/CustomizedDropZone/CustomizedDropZone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Button from \"@material-ui/core/Button\";\nimport Dropzone from \"react-dropzone\";\nimport { onDropToUpload } from \"../../common/upload\";\nimport { CreateNewFolder, ExpandMore } from \"@material-ui/icons\";\nimport Box from \"@material-ui/core/Box\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: '16px',\n    marginTop: '92px',\n    marginLeft: '64px',\n    marginRight: '64px',\n    padding: '2px 4px',\n    paddingRight: '16px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 800\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n    width: 400\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    marginLeft: 16,\n    marginRight: 16,\n    marginTop: 4,\n    marginBottom: 4\n  },\n  box: {\n    width: 16\n  },\n  button: {\n    textTransform: 'none'\n  },\n  actionbutton: {\n    color: 'white',\n    textTransform: 'none',\n    backgroundColor: \"#93F\",\n    \"&:hover,&:focus\": {\n      color: \"white\",\n      background: \"rgba(153, 51, 255,255)\"\n    }\n  },\n  dropzone: {}\n}));\nexport default function CustomizedDropZone(props) {\n  _s();\n\n  const classes = useStyles();\n  const bucketKey = props.bucketKey;\n  const buckets = props.buckets;\n  const callback = props.callback;\n  const checked = props.checked;\n  const newFolder = props.newFolder;\n  const selectAll = checked == null ? 0 : checked.length > 0;\n  let menus = [];\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  if (checked != null) {\n    if (checked.length === 1) {\n      menus.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClose,\n        children: 'Rename'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 26\n      }, this));\n      menus.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClose,\n        children: 'Delete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 26\n      }, this));\n    } else {\n      menus.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClose,\n        children: 'Delete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 26\n      }, this));\n    }\n  }\n\n  const onDrop = useCallback(acceptedFiles => {\n    onDropToUpload(acceptedFiles, buckets, bucketKey, async function (data) {\n      callback(data);\n    });\n  }, []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    component: \"form\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: classes.iconButton,\n      \"aria-label\": \"menu\",\n      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n      className: classes.input,\n      placeholder: \"Search files\",\n      inputProps: {\n        'aria-label': 'search google maps'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      className: classes.divider,\n      orientation: \"vertical\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n      className: classes.dropzone,\n      onDrop: onDrop,\n      multiple: true,\n      children: ({\n        getRootProps,\n        getInputProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropzone\",\n        ...getRootProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          size: 'medium',\n          className: classes.button,\n          startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 40\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: newFolder,\n      variant: \"contained\",\n      color: \"primary\",\n      size: 'medium',\n      className: classes.button,\n      startIcon: /*#__PURE__*/_jsxDEV(CreateNewFolder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 28\n      }, this),\n      children: \"New Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleClick,\n      className: classes.actionbutton,\n      variant: \"contained\",\n      disabled: !selectAll,\n      size: 'medium',\n      endIcon: /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 26\n      }, this),\n      children: \"Action\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"simple-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: menus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomizedDropZone, \"tRFMLE5bXfdxPK5cFoEeIipvxco=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomizedDropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedDropZone\");","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/components/CustomizedDropZone/CustomizedDropZone.js"],"names":["React","useCallback","makeStyles","Paper","InputBase","Divider","IconButton","SearchIcon","CloudUploadIcon","Button","Dropzone","onDropToUpload","CreateNewFolder","ExpandMore","Box","Menu","MenuItem","useStyles","theme","root","marginBottom","marginTop","marginLeft","marginRight","padding","paddingRight","display","alignItems","width","input","spacing","flex","iconButton","divider","height","box","button","textTransform","actionbutton","color","backgroundColor","background","dropzone","CustomizedDropZone","props","classes","bucketKey","buckets","callback","checked","newFolder","selectAll","length","menus","handleClose","setAnchorEl","push","onDrop","acceptedFiles","data","anchorEl","useState","handleClick","event","currentTarget","getRootProps","getInputProps","Boolean"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\nimport Button from \"@material-ui/core/Button\";\nimport Dropzone from \"react-dropzone\";\nimport {onDropToUpload} from \"../../common/upload\";\nimport {CreateNewFolder, ExpandMore} from \"@material-ui/icons\";\nimport Box from \"@material-ui/core/Box\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom:'16px',\n        marginTop:'92px',\n        marginLeft:'64px',\n        marginRight:'64px',\n        padding: '2px 4px',\n        paddingRight:'16px',\n        display: 'flex',\n        alignItems: 'center',\n        width:800\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n        width: 400,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        marginLeft: 16,\n        marginRight:16,\n        marginTop:4,\n        marginBottom:4\n    },\n    box:{\n      width:16\n    },\n    button:{\n        textTransform:'none',\n    },\n    actionbutton:{\n        color:'white',\n        textTransform:'none',\n        backgroundColor:\"#93F\",\n        \"&:hover,&:focus\": {\n            color: \"white\",\n            background: \"rgba(153, 51, 255,255)\",\n        },\n    },\n    dropzone:{\n    }\n}));\n\nexport default function CustomizedDropZone(props) {\n    const classes = useStyles();\n    const bucketKey = props.bucketKey;\n    const buckets = props.buckets;\n    const callback = props.callback;\n    const checked = props.checked;\n    const newFolder = props.newFolder;\n    const selectAll= checked==null?0:checked.length>0;\n    let menus = [];\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    if(checked!=null){\n        if(checked.length===1){\n            menus.push( (<MenuItem onClick={handleClose}>{'Rename'}</MenuItem>))\n            menus.push( (<MenuItem onClick={handleClose}>{'Delete'}</MenuItem>))\n        }else{\n            menus.push( (<MenuItem onClick={handleClose}>{'Delete'}</MenuItem>))\n        }\n    }\n\n\n    const onDrop = useCallback(acceptedFiles => {\n        onDropToUpload(acceptedFiles,buckets,bucketKey, async function (data) {\n            callback(data);\n        });\n    }, [])\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\n                <SearchIcon />\n            </IconButton>\n            <InputBase\n                className={classes.input}\n                placeholder=\"Search files\"\n                inputProps={{ 'aria-label': 'search google maps' }}\n            />\n            {/*<IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">*/}\n                {/*<SearchIcon />*/}\n            {/*</IconButton>*/}\n            <Divider className={classes.divider} orientation=\"vertical\" />\n            {/*<IconButton color=\"primary\" className={classes.iconButton} aria-label=\"directions\">*/}\n                {/*<DirectionsIcon />*/}\n            {/*</IconButton>*/}\n\n            <Dropzone\n                className={classes.dropzone}\n                onDrop={onDrop}\n                multiple={true}\n            >\n                {({getRootProps, getInputProps}) => (\n                    <div className=\"dropzone\" {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <Button\n                            variant=\"contained\"\n                            color={\"secondary\"}\n                            size={'medium'}\n                            className={classes.button}\n                            startIcon={<CloudUploadIcon/>}>\n                            <span>Upload</span>\n                        </Button>\n                    </div>\n                )}\n            </Dropzone>\n            <Box className={classes.box}/>\n            <Button\n                onClick={newFolder}\n                variant=\"contained\"\n                color={\"primary\"}\n                size={'medium'}\n                className={classes.button}\n                startIcon={<CreateNewFolder/>}>\n                New Folder\n                </Button>\n            <Box className={classes.box}/>\n            <Button\n                aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}\n                className={classes.actionbutton}\n                variant=\"contained\"\n                disabled={!selectAll}\n                size={'medium'}\n                endIcon={<ExpandMore/>}>\n                Action\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}>\n                {\n                    menus\n                }\n            </Menu>\n        </Paper>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}