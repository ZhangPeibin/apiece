{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // browserify by default only pulls in files that are hard coded in requires\n// In order of last to first in this file, the default wordlist will be chosen\n// based on what is present. (Bundles may remove wordlists they don't need)\n\nconst wordlists = {};\nexports.wordlists = wordlists;\n\nlet _default;\n\nexports._default = _default;\n\ntry {\n  exports._default = _default = require('./wordlists/czech.json');\n  wordlists.czech = _default;\n} catch (err) {}\n\ntry {\n  exports._default = _default = require('./wordlists/chinese_simplified.json');\n  wordlists.chinese_simplified = _default;\n} catch (err) {}\n\ntry {\n  exports._default = _default = require('./wordlists/chinese_traditional.json');\n  wordlists.chinese_traditional = _default;\n} catch (err) {}\n\ntry {\n  exports._default = _default = require('./wordlists/korean.json');\n  wordlists.korean = _default;\n} catch (err) {}\n\ntry {\n  exports._default = _default = require('./wordlists/french.json');\n  wordlists.french = _default;\n} catch (err) {}\n\ntry {\n  exports._default = _default = require('./wordlists/italian.json');\n  wordlists.italian = _default;\n} catch (err) {}\n\ntry {\n  exports._default = _default = require('./wordlists/spanish.json');\n  wordlists.spanish = _default;\n} catch (err) {}\n\ntry {\n  exports._default = _default = require('./wordlists/japanese.json');\n  wordlists.japanese = _default;\n  wordlists.JA = _default;\n} catch (err) {}\n\ntry {\n  exports._default = _default = require('./wordlists/portuguese.json');\n  wordlists.portuguese = _default;\n} catch (err) {}\n\ntry {\n  exports._default = _default = require('./wordlists/english.json');\n  wordlists.english = _default;\n  wordlists.EN = _default;\n} catch (err) {}","map":{"version":3,"sources":["E:/anipfspace/node_modules/bip39/src/_wordlists.js"],"names":["Object","defineProperty","exports","value","wordlists","_default","require","czech","err","chinese_simplified","chinese_traditional","korean","french","italian","spanish","japanese","JA","portuguese","english","EN"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C,E,CACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,EAAlB;AACAF,OAAO,CAACE,SAAR,GAAoBA,SAApB;;AACA,IAAIC,QAAJ;;AACAH,OAAO,CAACG,QAAR,GAAmBA,QAAnB;;AACA,IAAI;AACAH,EAAAA,OAAO,CAACG,QAAR,GAAmBA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAArC;AACAF,EAAAA,SAAS,CAACG,KAAV,GAAkBF,QAAlB;AACH,CAHD,CAIA,OAAOG,GAAP,EAAY,CAAG;;AACf,IAAI;AACAN,EAAAA,OAAO,CAACG,QAAR,GAAmBA,QAAQ,GAAGC,OAAO,CAAC,qCAAD,CAArC;AACAF,EAAAA,SAAS,CAACK,kBAAV,GAA+BJ,QAA/B;AACH,CAHD,CAIA,OAAOG,GAAP,EAAY,CAAG;;AACf,IAAI;AACAN,EAAAA,OAAO,CAACG,QAAR,GAAmBA,QAAQ,GAAGC,OAAO,CAAC,sCAAD,CAArC;AACAF,EAAAA,SAAS,CAACM,mBAAV,GAAgCL,QAAhC;AACH,CAHD,CAIA,OAAOG,GAAP,EAAY,CAAG;;AACf,IAAI;AACAN,EAAAA,OAAO,CAACG,QAAR,GAAmBA,QAAQ,GAAGC,OAAO,CAAC,yBAAD,CAArC;AACAF,EAAAA,SAAS,CAACO,MAAV,GAAmBN,QAAnB;AACH,CAHD,CAIA,OAAOG,GAAP,EAAY,CAAG;;AACf,IAAI;AACAN,EAAAA,OAAO,CAACG,QAAR,GAAmBA,QAAQ,GAAGC,OAAO,CAAC,yBAAD,CAArC;AACAF,EAAAA,SAAS,CAACQ,MAAV,GAAmBP,QAAnB;AACH,CAHD,CAIA,OAAOG,GAAP,EAAY,CAAG;;AACf,IAAI;AACAN,EAAAA,OAAO,CAACG,QAAR,GAAmBA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAArC;AACAF,EAAAA,SAAS,CAACS,OAAV,GAAoBR,QAApB;AACH,CAHD,CAIA,OAAOG,GAAP,EAAY,CAAG;;AACf,IAAI;AACAN,EAAAA,OAAO,CAACG,QAAR,GAAmBA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAArC;AACAF,EAAAA,SAAS,CAACU,OAAV,GAAoBT,QAApB;AACH,CAHD,CAIA,OAAOG,GAAP,EAAY,CAAG;;AACf,IAAI;AACAN,EAAAA,OAAO,CAACG,QAAR,GAAmBA,QAAQ,GAAGC,OAAO,CAAC,2BAAD,CAArC;AACAF,EAAAA,SAAS,CAACW,QAAV,GAAqBV,QAArB;AACAD,EAAAA,SAAS,CAACY,EAAV,GAAeX,QAAf;AACH,CAJD,CAKA,OAAOG,GAAP,EAAY,CAAG;;AACf,IAAI;AACAN,EAAAA,OAAO,CAACG,QAAR,GAAmBA,QAAQ,GAAGC,OAAO,CAAC,6BAAD,CAArC;AACAF,EAAAA,SAAS,CAACa,UAAV,GAAuBZ,QAAvB;AACH,CAHD,CAIA,OAAOG,GAAP,EAAY,CAAG;;AACf,IAAI;AACAN,EAAAA,OAAO,CAACG,QAAR,GAAmBA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAArC;AACAF,EAAAA,SAAS,CAACc,OAAV,GAAoBb,QAApB;AACAD,EAAAA,SAAS,CAACe,EAAV,GAAed,QAAf;AACH,CAJD,CAKA,OAAOG,GAAP,EAAY,CAAG","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// browserify by default only pulls in files that are hard coded in requires\r\n// In order of last to first in this file, the default wordlist will be chosen\r\n// based on what is present. (Bundles may remove wordlists they don't need)\r\nconst wordlists = {};\r\nexports.wordlists = wordlists;\r\nlet _default;\r\nexports._default = _default;\r\ntry {\r\n    exports._default = _default = require('./wordlists/czech.json');\r\n    wordlists.czech = _default;\r\n}\r\ncatch (err) { }\r\ntry {\r\n    exports._default = _default = require('./wordlists/chinese_simplified.json');\r\n    wordlists.chinese_simplified = _default;\r\n}\r\ncatch (err) { }\r\ntry {\r\n    exports._default = _default = require('./wordlists/chinese_traditional.json');\r\n    wordlists.chinese_traditional = _default;\r\n}\r\ncatch (err) { }\r\ntry {\r\n    exports._default = _default = require('./wordlists/korean.json');\r\n    wordlists.korean = _default;\r\n}\r\ncatch (err) { }\r\ntry {\r\n    exports._default = _default = require('./wordlists/french.json');\r\n    wordlists.french = _default;\r\n}\r\ncatch (err) { }\r\ntry {\r\n    exports._default = _default = require('./wordlists/italian.json');\r\n    wordlists.italian = _default;\r\n}\r\ncatch (err) { }\r\ntry {\r\n    exports._default = _default = require('./wordlists/spanish.json');\r\n    wordlists.spanish = _default;\r\n}\r\ncatch (err) { }\r\ntry {\r\n    exports._default = _default = require('./wordlists/japanese.json');\r\n    wordlists.japanese = _default;\r\n    wordlists.JA = _default;\r\n}\r\ncatch (err) { }\r\ntry {\r\n    exports._default = _default = require('./wordlists/portuguese.json');\r\n    wordlists.portuguese = _default;\r\n}\r\ncatch (err) { }\r\ntry {\r\n    exports._default = _default = require('./wordlists/english.json');\r\n    wordlists.english = _default;\r\n    wordlists.EN = _default;\r\n}\r\ncatch (err) { }\r\n"]},"metadata":{},"sourceType":"script"}