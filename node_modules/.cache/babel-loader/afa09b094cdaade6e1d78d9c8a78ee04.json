{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/views/userIdentity/UserIdentity.js\";\nimport * as React from \"react\";\nimport '../../index.css';\nimport { createSeedByMnemonic, saveLocalUserIdentity, userIdentityFromSeed } from \"../../common/user\";\nimport { bucketLinks, getBucketKey } from \"../../common/bucket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class UserIdentityPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (this.props.location.query != null) {\n      this.state = {\n        isEnter: this.props.location.state.isEnter,\n        mnemonic: this.props.location.state.mnemonic,\n        seed: null\n      };\n    }\n  }\n\n  async componentWillMount() {\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n\n    if (this.state == null || this.state.mnemonic == null) {\n      this.props.history.push({\n        pathname: \"/mnemonic\"\n      });\n      return;\n    }\n\n    const seed = createSeedByMnemonic(this.state.mnemonic);\n    const userIdentity = userIdentityFromSeed(seed);\n    saveLocalUserIdentity(userIdentity.toString());\n    const {\n      bucketKey,\n      buckets\n    } = await getBucketKey(userIdentity);\n    const links = await bucketLinks(buckets, bucketKey);\n    const query = {\n      bucketKey: bucketKey,\n      buckets: buckets,\n      links: links\n    };\n    this.props.history.push({\n      pathname: \"/dashBoard\",\n      query: query\n    });\n  }\n\n  render() {\n    let tips = \"\";\n\n    if (this.state.isEnter) {\n      tips = \"登录您的空间中，可能需要等待一会...\";\n    } else {\n      tips = \"创建您的空间中，可能需要等待一会...\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        id: \"loader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loadingtext\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"loadingh5\",\n          children: tips\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/views/userIdentity/UserIdentity.js"],"names":["React","createSeedByMnemonic","saveLocalUserIdentity","userIdentityFromSeed","bucketLinks","getBucketKey","UserIdentityPage","Component","constructor","props","location","query","state","isEnter","mnemonic","seed","componentWillMount","loading","document","getElementById","style","display","history","push","pathname","userIdentity","toString","bucketKey","buckets","links","render","tips"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport '../../index.css'\nimport {\n    createSeedByMnemonic,\n    saveLocalUserIdentity,\n    userIdentityFromSeed\n} from \"../../common/user\";\nimport {bucketLinks, getBucketKey} from \"../../common/bucket\";\n\nexport class UserIdentityPage extends React.Component{\n    constructor(props){\n        super(props);\n        if(this.props.location.query!=null){\n            this.state = {\n                isEnter:this.props.location.state.isEnter,\n                mnemonic:this.props.location.state.mnemonic,\n                seed:null\n            };\n        }\n    }\n\n     async componentWillMount() {\n         let loading = document.getElementById('loader');\n         loading.style.display = 'none';\n\n         if (this.state == null || this.state.mnemonic == null) {\n             this.props.history.push({pathname: \"/mnemonic\"});\n             return;\n         }\n         const seed = createSeedByMnemonic(this.state.mnemonic);\n         const userIdentity = userIdentityFromSeed(seed);\n         saveLocalUserIdentity(userIdentity.toString());\n         const {bucketKey, buckets} = await getBucketKey(userIdentity);\n         const links = await bucketLinks(buckets,bucketKey);\n         const query = {\n             bucketKey:bucketKey,\n             buckets:buckets,\n             links:links,\n         };\n         this.props.history.push({pathname: \"/dashBoard\",query : query})\n     }\n\n    render() {\n        let tips = \"\";\n        if (this.state.isEnter){\n            tips = \"登录您的空间中，可能需要等待一会...\"\n        } else{\n            tips = \"创建您的空间中，可能需要等待一会...\"\n        }\n        return (\n            <div>\n                <div className=\"loader\" id=\"loader\">\n                    <div className=\"square\"/>\n                    <div className=\"square\"/>\n                    <div className=\"square\"/>\n                    <div className=\"square\"/>\n                    <div className=\"square\"/>\n                </div>\n                <div className=\"loadingtext\">\n                    <h6 className={\"loadingh5\"}>\n                        {tips}\n                    </h6>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}