{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst typeforce = require('typeforce');\n\nconst UINT31_MAX = Math.pow(2, 31) - 1;\n\nfunction UInt31(value) {\n  return typeforce.UInt32(value) && value <= UINT31_MAX;\n}\n\nexports.UInt31 = UInt31;\n\nfunction BIP32Path(value) {\n  return typeforce.String(value) && !!value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/);\n}\n\nexports.BIP32Path = BIP32Path;\n\nBIP32Path.toJSON = () => {\n  return 'BIP32 derivation path';\n};\n\nfunction Signer(obj) {\n  return (typeforce.Buffer(obj.publicKey) || typeof obj.getPublicKey === 'function') && typeof obj.sign === 'function';\n}\n\nexports.Signer = Signer;\nconst SATOSHI_MAX = 21 * 1e14;\n\nfunction Satoshi(value) {\n  return typeforce.UInt53(value) && value <= SATOSHI_MAX;\n}\n\nexports.Satoshi = Satoshi; // external dependent types\n\nexports.ECPoint = typeforce.quacksLike('Point'); // exposed, external API\n\nexports.Network = typeforce.compile({\n  messagePrefix: typeforce.oneOf(typeforce.Buffer, typeforce.String),\n  bip32: {\n    public: typeforce.UInt32,\n    private: typeforce.UInt32\n  },\n  pubKeyHash: typeforce.UInt8,\n  scriptHash: typeforce.UInt8,\n  wif: typeforce.UInt8\n});\nexports.Buffer256bit = typeforce.BufferN(32);\nexports.Hash160bit = typeforce.BufferN(20);\nexports.Hash256bit = typeforce.BufferN(32);\nexports.Number = typeforce.Number; // tslint:disable-line variable-name\n\nexports.Array = typeforce.Array;\nexports.Boolean = typeforce.Boolean; // tslint:disable-line variable-name\n\nexports.String = typeforce.String; // tslint:disable-line variable-name\n\nexports.Buffer = typeforce.Buffer;\nexports.Hex = typeforce.Hex;\nexports.maybe = typeforce.maybe;\nexports.tuple = typeforce.tuple;\nexports.UInt8 = typeforce.UInt8;\nexports.UInt32 = typeforce.UInt32;\nexports.Function = typeforce.Function;\nexports.BufferN = typeforce.BufferN;\nexports.Null = typeforce.Null;\nexports.oneOf = typeforce.oneOf;","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/node_modules/bitcoinjs-lib/src/types.js"],"names":["Object","defineProperty","exports","value","typeforce","require","UINT31_MAX","Math","pow","UInt31","UInt32","BIP32Path","String","match","toJSON","Signer","obj","Buffer","publicKey","getPublicKey","sign","SATOSHI_MAX","Satoshi","UInt53","ECPoint","quacksLike","Network","compile","messagePrefix","oneOf","bip32","public","private","pubKeyHash","UInt8","scriptHash","wif","Buffer256bit","BufferN","Hash160bit","Hash256bit","Number","Array","Boolean","Hex","maybe","tuple","Function","Null"],"mappings":"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","sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeforce = require('typeforce');\nconst UINT31_MAX = Math.pow(2, 31) - 1;\nfunction UInt31(value) {\n  return typeforce.UInt32(value) && value <= UINT31_MAX;\n}\nexports.UInt31 = UInt31;\nfunction BIP32Path(value) {\n  return typeforce.String(value) && !!value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/);\n}\nexports.BIP32Path = BIP32Path;\nBIP32Path.toJSON = () => {\n  return 'BIP32 derivation path';\n};\nfunction Signer(obj) {\n  return (\n    (typeforce.Buffer(obj.publicKey) ||\n      typeof obj.getPublicKey === 'function') &&\n    typeof obj.sign === 'function'\n  );\n}\nexports.Signer = Signer;\nconst SATOSHI_MAX = 21 * 1e14;\nfunction Satoshi(value) {\n  return typeforce.UInt53(value) && value <= SATOSHI_MAX;\n}\nexports.Satoshi = Satoshi;\n// external dependent types\nexports.ECPoint = typeforce.quacksLike('Point');\n// exposed, external API\nexports.Network = typeforce.compile({\n  messagePrefix: typeforce.oneOf(typeforce.Buffer, typeforce.String),\n  bip32: {\n    public: typeforce.UInt32,\n    private: typeforce.UInt32,\n  },\n  pubKeyHash: typeforce.UInt8,\n  scriptHash: typeforce.UInt8,\n  wif: typeforce.UInt8,\n});\nexports.Buffer256bit = typeforce.BufferN(32);\nexports.Hash160bit = typeforce.BufferN(20);\nexports.Hash256bit = typeforce.BufferN(32);\nexports.Number = typeforce.Number; // tslint:disable-line variable-name\nexports.Array = typeforce.Array;\nexports.Boolean = typeforce.Boolean; // tslint:disable-line variable-name\nexports.String = typeforce.String; // tslint:disable-line variable-name\nexports.Buffer = typeforce.Buffer;\nexports.Hex = typeforce.Hex;\nexports.maybe = typeforce.maybe;\nexports.tuple = typeforce.tuple;\nexports.UInt8 = typeforce.UInt8;\nexports.UInt32 = typeforce.UInt32;\nexports.Function = typeforce.Function;\nexports.BufferN = typeforce.BufferN;\nexports.Null = typeforce.Null;\nexports.oneOf = typeforce.oneOf;\n"]},"metadata":{},"sourceType":"script"}