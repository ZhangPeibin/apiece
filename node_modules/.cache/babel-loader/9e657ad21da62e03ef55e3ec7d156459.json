{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js\";\nimport * as React from \"react\";\nimport './Dashboard.css';\nimport { getLocalUserIdentity } from \"../../common/user\";\nimport { getBucketKey } from \"../../common/bucket\";\nimport CustomizedDropZone from \"../../components/CustomizedDropZone/CustomizedDropZone\";\nimport { getFileIndex, storeIndex } from \"../../common/FileIndex\";\nimport FileZone from \"../../components/FileZone/FileZone\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.state.setOpen(true);\n    };\n\n    this.handleClose = () => {};\n\n    this.newFolder = data => {};\n\n    this.fileSelectCallback = data => {\n      this.setState({\n        checked: data\n      });\n    };\n\n    this.fileUploadCallback = async data => {\n      let dataAlreadyInPaths = false;\n      this.state.index.paths.forEach(function (element) {\n        if (element['cid'] === data['cid']) {\n          dataAlreadyInPaths = true;\n        }\n      });\n\n      if (!dataAlreadyInPaths) {\n        this.setState({\n          index: { ...this.state.index,\n            paths: [...this.state.index.paths, data],\n            counts: this.state.index.counts + 1\n          }\n        });\n        await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n      }\n    };\n\n    const [open, setOpen] = React.useState(false);\n\n    if (props.location.query != null) {\n      this.state = {\n        bucketKey: props.location.query.bucketKey,\n        buckets: props.location.query.buckets,\n        links: props.location.query.links,\n        open: open,\n        setOpen: setOpen\n      };\n    }\n  }\n\n  async componentWillMount() {\n    if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\n      const userIdentity = await getLocalUserIdentity();\n\n      if (userIdentity != null) {\n        const {\n          bucketKey,\n          buckets\n        } = await getBucketKey(userIdentity);\n        this.setState({\n          bucketKey: bucketKey,\n          buckets: buckets\n        });\n      } else {\n        this.props.history.push({\n          pathname: \"/mnemonic\"\n        });\n      }\n    }\n\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n    const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n\n    if (index) {\n      this.setState({\n        index: index\n      });\n    }\n  }\n\n  render() {\n    if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.index == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CustomizedDropZone, {\n          bucketKey: this.state.bucketKey,\n          buckets: this.state.buckets,\n          callback: this.fileUploadCallback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CustomizedDropZone, {\n          bucketKey: this.state.bucketKey,\n          buckets: this.state.buckets,\n          callback: this.fileUploadCallback,\n          newFolder: this.newFolder,\n          checked: this.state.checked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FileZone, {\n          index: this.state.index,\n          callback: this.fileSelectCallback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Dialog, {\n            open: this.state.open,\n            onClose: this.handleClose,\n            \"aria-labelledby\": \"form-dialog-title\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              id: \"form-dialog-title\",\n              children: \"Subscribe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n                children: \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                autoFocus: true,\n                margin: \"dense\",\n                id: \"name\",\n                label: \"Email Address\",\n                type: \"email\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleClose,\n                color: \"primary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleClose,\n                color: \"primary\",\n                children: \"Subscribe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js"],"names":["React","getLocalUserIdentity","getBucketKey","CustomizedDropZone","getFileIndex","storeIndex","FileZone","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","DialogActions","Button","DashboardPage","Component","constructor","props","handleClickOpen","state","setOpen","handleClose","newFolder","data","fileSelectCallback","setState","checked","fileUploadCallback","dataAlreadyInPaths","index","paths","forEach","element","counts","buckets","bucketKey","open","useState","location","query","links","componentWillMount","userIdentity","history","push","pathname","loading","document","getElementById","style","display","render"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport './Dashboard.css'\nimport {getLocalUserIdentity,} from \"../../common/user\";\nimport {getBucketKey} from \"../../common/bucket\";\nimport CustomizedDropZone from \"../../components/CustomizedDropZone/CustomizedDropZone\";\nimport {getFileIndex, storeIndex} from \"../../common/FileIndex\";\nimport FileZone from \"../../components/FileZone/FileZone\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nexport class DashboardPage extends React.Component {\n    constructor(props) {\n        super(props);\n        const [open, setOpen] = React.useState(false);\n\n        if (props.location.query != null) {\n            this.state = {\n                bucketKey: props.location.query.bucketKey,\n                buckets: props.location.query.buckets,\n                links: props.location.query.links,\n                open:open,\n                setOpen:setOpen\n            }\n        }\n    }\n\n    async componentWillMount() {\n        if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\n            const userIdentity = await getLocalUserIdentity();\n            if (userIdentity != null) {\n                const {bucketKey, buckets} = await getBucketKey(userIdentity);\n                this.setState({\n                    bucketKey: bucketKey,\n                    buckets: buckets,\n                })\n            } else {\n                this.props.history.push({pathname: \"/mnemonic\"});\n            }\n        }\n        let loading = document.getElementById('loader');\n        loading.style.display = 'none';\n        const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n        if (index) {\n            this.setState({\n                index: index\n            })\n        }\n    }\n\n    render() {\n        if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\n            return <div/>\n        }\n\n        if(this.state.index==null){\n            return (\n                <div>\n                    <CustomizedDropZone bucketKey={this.state.bucketKey}\n                                        buckets={this.state.buckets}\n                                        callback={this.fileUploadCallback}/>\n                </div>\n            )\n        }else{\n            return (\n                <div>\n                    <CustomizedDropZone bucketKey={this.state.bucketKey}\n                                        buckets={this.state.buckets}\n                                        callback={this.fileUploadCallback}\n                                        newFolder={this.newFolder}\n                                        checked = {this.state.checked}/>\n                    <FileZone index={this.state.index} callback={this.fileSelectCallback}/>\n\n                    <div>\n                        <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                            <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    To subscribe to this website, please enter your email address here. We will send updates\n                                    occasionally.\n                                </DialogContentText>\n                                <TextField\n                                    autoFocus\n                                    margin=\"dense\"\n                                    id=\"name\"\n                                    label=\"Email Address\"\n                                    type=\"email\"\n                                    fullWidth\n                                />\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} color=\"primary\">\n                                    Cancel\n                                </Button>\n                                <Button onClick={this.handleClose} color=\"primary\">\n                                    Subscribe\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    handleClickOpen = ()=>{\n        this.state.setOpen(true);\n    };\n\n    handleClose =()=>{\n\n    };\n\n    newFolder  = (data) =>{\n\n    };\n\n    fileSelectCallback = (data) =>{\n        this.setState({\n            checked:data\n        });\n    }\n\n    fileUploadCallback = async (data) => {\n        let dataAlreadyInPaths = false;\n        this.state.index.paths.forEach(function (element) {\n            if(element['cid'] === data['cid']){\n                dataAlreadyInPaths = true;\n            }\n        });\n        if(!dataAlreadyInPaths){\n            this.setState({\n                index: {\n                    ...this.state.index,\n                    paths: [...this.state.index.paths, data],\n                    counts: this.state.index.counts + 1\n                },\n            });\n            await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}