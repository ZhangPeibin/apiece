{"ast":null,"code":"import { Buckets, PushPathResult, KeyInfo, PrivateKey, WithKeyInfoOptions } from '@textile/hub';\nexport async function onDropToUpload(acceptedFiles, buckets, bucketKey) {\n  for (const accepted of acceptedFiles) {\n    await handleNewFile(accepted, buckets, bucketKey);\n  }\n}\n\nasync function handleNewFile(file, buckets, bucketKey) {\n  const fileSchema = {};\n  const now = new Date().getTime();\n  fileSchema['date'] = now;\n  fileSchema['name'] = `${file.name}`;\n  const filename = `${now}_${file.name}`;\n  const location = `${'/'}${filename}`;\n\n  if (!buckets || !bucketKey) {\n    throw new Error('No bucket client or root key');\n  }\n\n  const raw = await buckets.pushPath(bucketKey, location, file.stream());\n  const metadata = {\n    cid: raw.path.cid.toString(),\n    name: name,\n    path: location\n  };\n  return metadata;\n}","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/common/upload.js"],"names":["Buckets","PushPathResult","KeyInfo","PrivateKey","WithKeyInfoOptions","onDropToUpload","acceptedFiles","buckets","bucketKey","accepted","handleNewFile","file","fileSchema","now","Date","getTime","name","filename","location","Error","raw","pushPath","stream","metadata","cid","path","toString"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,cAAlB,EAAkCC,OAAlC,EAA2CC,UAA3C,EAAuDC,kBAAvD,QAAiF,cAAjF;AAEA,OAAO,eAAeC,cAAf,CAA8BC,aAA9B,EAA4CC,OAA5C,EAAoDC,SAApD,EAA+D;AAClE,OAAK,MAAMC,QAAX,IAAuBH,aAAvB,EAAsC;AAClC,UAAMI,aAAa,CAACD,QAAD,EAAUF,OAAV,EAAkBC,SAAlB,CAAnB;AACH;AACJ;;AAED,eAAeE,aAAf,CAA6BC,IAA7B,EAAuCJ,OAAvC,EAAuDC,SAAvD,EAAiE;AAC7D,QAAMI,UAAgC,GAAG,EAAzC;AACA,QAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACAH,EAAAA,UAAU,CAAC,MAAD,CAAV,GAAqBC,GAArB;AACAD,EAAAA,UAAU,CAAC,MAAD,CAAV,GAAsB,GAAED,IAAI,CAACK,IAAK,EAAlC;AACA,QAAMC,QAAQ,GAAI,GAAEJ,GAAI,IAAGF,IAAI,CAACK,IAAK,EAArC;AACA,QAAME,QAAQ,GAAI,GAAE,GAAI,GAAED,QAAS,EAAnC;;AAEA,MAAI,CAACV,OAAD,IAAY,CAACC,SAAjB,EAA4B;AACxB,UAAM,IAAIW,KAAJ,CAAU,8BAAV,CAAN;AACH;;AACD,QAAMC,GAAG,GAAG,MAAMb,OAAO,CAACc,QAAR,CAAiBb,SAAjB,EAA4BU,QAA5B,EAAsCP,IAAI,CAACW,MAAL,EAAtC,CAAlB;AACA,QAAMC,QAAQ,GAAG;AACbC,IAAAA,GAAG,EAAEJ,GAAG,CAACK,IAAJ,CAASD,GAAT,CAAaE,QAAb,EADQ;AAEbV,IAAAA,IAAI,EAAEA,IAFO;AAGbS,IAAAA,IAAI,EAAEP;AAHO,GAAjB;AAKA,SAAOK,QAAP;AACH","sourcesContent":["import { Buckets, PushPathResult, KeyInfo, PrivateKey, WithKeyInfoOptions } from '@textile/hub'\n\nexport async function onDropToUpload(acceptedFiles,buckets,bucketKey) {\n    for (const accepted of acceptedFiles) {\n        await handleNewFile(accepted,buckets,bucketKey)\n    }\n}\n\nasync function handleNewFile(file:File,buckets:Buckets,bucketKey){\n    const fileSchema: {[key: string]: any} = {};\n    const now = new Date().getTime();\n    fileSchema['date'] = now;\n    fileSchema['name'] = `${file.name}`;\n    const filename = `${now}_${file.name}`;\n    const location = `${'/'}${filename}`;\n\n    if (!buckets || !bucketKey) {\n        throw new Error('No bucket client or root key')\n    }\n    const raw = await buckets.pushPath(bucketKey, location, file.stream())\n    const metadata = {\n        cid: raw.path.cid.toString(),\n        name: name,\n        path: location,\n    }\n    return metadata;\n}\n\n"]},"metadata":{},"sourceType":"module"}