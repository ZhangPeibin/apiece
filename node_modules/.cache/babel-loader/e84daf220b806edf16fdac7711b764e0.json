{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/App.js\";\nimport './App.css';\nimport * as React from \"react\";\nimport * as user from '././user/user';\nimport Header from \"./components/Header/Header\";\nimport HeaderLinks from \"./components/Header/HeaderLinks\";\nimport Button from \"@material-ui/core/Button\";\nimport Parallax from \"./components/Parallax/Parallax\";\nimport GridContainer from \"./components/Grid/GridContainer\";\nimport GridItem from \"./components/Grid/GridItem\";\nimport LandingPage from \"./LandingPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userIdentity: null,\n      loadingUserIdentity: false\n    };\n  }\n\n  async componentWillMount() {\n    const beginTime = new Date().getTime() / 1000;\n    const localUserIdentity = await user.getLocalUserIdentity();\n    this.setState({\n      userIdentity: localUserIdentity\n    });\n    let loading = document.getElementById('loader');\n\n    if (!loading) {\n      return;\n    }\n\n    const endTime = new Date().getTime() / 1000;\n    setTimeout(() => {\n      loading.style.display = 'none';\n      this.setState({\n        loadingUserIdentity: true\n      });\n    }, 2000 - (endTime - beginTime));\n  }\n\n  render() {\n    const classes = useStyles();\n\n    if (this.state.loadingUserIdentity) {\n      if (this.state.userIdentity == null) {\n        return LandingPage();\n      } else {}\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/App.js"],"names":["React","user","Header","HeaderLinks","Button","Parallax","GridContainer","GridItem","LandingPage","App","Component","constructor","props","state","userIdentity","loadingUserIdentity","componentWillMount","beginTime","Date","getTime","localUserIdentity","getLocalUserIdentity","setState","loading","document","getElementById","endTime","setTimeout","style","display","render","classes","useStyles"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAIA,MAAMC,GAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAG,IADN;AAETC,MAAAA,mBAAmB,EAAG;AAFb,KAAb;AAIH;;AAEuB,QAAlBC,kBAAkB,GAAG;AACvB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAqB,IAAvC;AACA,UAAMC,iBAAiB,GAAG,MAAMnB,IAAI,CAACoB,oBAAL,EAAhC;AACA,SAAKC,QAAL,CAAc;AACNR,MAAAA,YAAY,EAACM;AADP,KAAd;AAIA,QAAIG,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAd;;AACA,QAAI,CAACF,OAAL,EAAc;AACV;AACH;;AACD,UAAMG,OAAO,GAAG,IAAIR,IAAJ,GAAWC,OAAX,KAAqB,IAArC;AACAQ,IAAAA,UAAU,CAAC,MAAI;AACXJ,MAAAA,OAAO,CAACK,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACA,WAAKP,QAAL,CAAc;AACVP,QAAAA,mBAAmB,EAAC;AADV,OAAd;AAGH,KALS,EAKR,QAAMW,OAAO,GAACT,SAAd,CALQ,CAAV;AAMH;;AAEDa,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAGC,SAAS,EAAzB;;AACA,QAAI,KAAKnB,KAAL,CAAWE,mBAAf,EAAoC;AAChC,UAAI,KAAKF,KAAL,CAAWC,YAAX,IAA2B,IAA/B,EAAqC;AACjC,eAAON,WAAW,EAAlB;AACH,OAFD,MAEO,CAEN;AACJ,KAND,MAMO;AACH,0BACI;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ;;AA3C8B;;AA+CnC,eAAeC,GAAf","sourcesContent":["import './App.css';\nimport * as React from \"react\";\nimport * as user from '././user/user'\nimport Header from \"./components/Header/Header\";\nimport HeaderLinks from \"./components/Header/HeaderLinks\";\nimport Button from \"@material-ui/core/Button\";\nimport Parallax from \"./components/Parallax/Parallax\";\nimport GridContainer from \"./components/Grid/GridContainer\";\nimport GridItem from \"./components/Grid/GridItem\";\nimport LandingPage from \"./LandingPage\";\n\n\n\nclass App  extends  React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            userIdentity : null,\n            loadingUserIdentity : false\n        }\n    }\n\n    async componentWillMount() {\n        const beginTime = new Date().getTime()/1000;\n        const localUserIdentity = await user.getLocalUserIdentity();\n        this.setState({\n                userIdentity:localUserIdentity\n            }\n        );\n        let loading = document.getElementById('loader');\n        if (!loading) {\n            return;\n        }\n        const endTime = new Date().getTime()/1000;\n        setTimeout(()=>{\n            loading.style.display = 'none'\n            this.setState({\n                loadingUserIdentity:true\n            })\n        },2000-(endTime-beginTime));\n    }\n\n    render() {\n        const classes = useStyles();\n        if (this.state.loadingUserIdentity) {\n            if (this.state.userIdentity == null) {\n                return LandingPage()\n            } else {\n\n            }\n        } else {\n            return (\n                <div/>\n            );\n        }\n    }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}