{"ast":null,"code":"var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var a = Object.defineProperty({}, '__esModule', {\n    value: true\n  });\n  Object.keys(n).forEach(function (k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function () {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\n\nfunction createCommonjsModule(fn) {\n  var module = {\n    exports: {}\n  };\n  return fn(module, module.exports), module.exports;\n}\n\nlet node8 = false;\n\nif ('process' in commonjsGlobal) {\n  node8 = /^v8\\./.test(commonjsGlobal.process.version);\n}\n\nvar indexCrypto = function init(window) {\n  function execGlobal(name, value) {\n    return window[name](value);\n  }\n\n  const crypto = execGlobal('require', 'crypto');\n\n  function randomFillUint32(input, bytes) {\n    const len = input.length;\n\n    for (let i = 0, o = 0; i < len; i++) {\n      input[i] = bytes[o++] << 24 | bytes[o++] << 16 | bytes[o++] << 8 | bytes[o++];\n    }\n\n    return input;\n  }\n\n  function randomFillInt32(input, bytes) {\n    const len = input.length;\n\n    for (let i = 0, o = 0; i < len; i++) {\n      input[i] = (bytes[o++] << 24 | bytes[o++] << 16 | bytes[o++] << 8 | bytes[o++]) - 0x80000000;\n    }\n\n    return input;\n  }\n\n  function randomFillUint16(input, bytes) {\n    const len = input.length;\n\n    for (let i = 0, o = 0; i < len; i++) {\n      input[i] = bytes[o++] << 8 | bytes[o++];\n    }\n\n    return input;\n  }\n\n  function randomFillInt16(input, bytes) {\n    const len = input.length;\n\n    for (let i = 0, o = 0; i < len; i++) {\n      input[i] = (bytes[o++] << 8 | bytes[o++]) - 0x8000;\n    }\n\n    return input;\n  }\n\n  function randomFillUint8(input, bytes) {\n    const len = input.length;\n\n    for (let i = 0; i < len; i++) {\n      input[i] = bytes[i];\n    }\n\n    return input;\n  }\n\n  function randomFillInt8(input, bytes) {\n    const len = input.length;\n\n    for (let i = 0; i < len; i++) {\n      input[i] = bytes[i] - 0x80;\n    }\n\n    return input;\n  }\n\n  if (node8) {\n    return function randomFillNode8(input) {\n      if (input instanceof Uint8Array) {\n        return crypto.randomFillSync(input);\n      }\n\n      const bytes = crypto.randomBytes(input.byteLength);\n\n      if (input instanceof Uint32Array) {\n        return randomFillUint32(input, bytes);\n      }\n\n      if (input instanceof Uint16Array) {\n        return randomFillUint16(input, bytes);\n      }\n\n      if (input instanceof Int32Array) {\n        return randomFillInt32(input, bytes);\n      }\n\n      if (input instanceof Int16Array) {\n        return randomFillInt16(input, bytes);\n      }\n\n      if (input instanceof Int8Array) {\n        return randomFillInt8(input, bytes);\n      }\n\n      if (input instanceof Uint8ClampedArray) {\n        return randomFillUint8(input, bytes);\n      }\n\n      throw new Error('invalid type');\n    };\n  }\n\n  return crypto.randomFillSync || function randomFillClassic(input) {\n    const bytes = crypto.randomBytes(input.byteLength);\n\n    if (input instanceof Uint8Array) {\n      return randomFillUint8(input, bytes);\n    }\n\n    if (input instanceof Uint32Array) {\n      return randomFillUint32(input, bytes);\n    }\n\n    if (input instanceof Uint16Array) {\n      return randomFillUint16(input, bytes);\n    }\n\n    if (input instanceof Int32Array) {\n      return randomFillInt32(input, bytes);\n    }\n\n    if (input instanceof Int16Array) {\n      return randomFillInt16(input, bytes);\n    }\n\n    if (input instanceof Int8Array) {\n      return randomFillInt8(input, bytes);\n    }\n\n    if (input instanceof Uint8ClampedArray) {\n      return randomFillUint8(input, bytes);\n    }\n\n    throw new Error('invalid type');\n  };\n};\n\nvar _nodeResolve_empty = {};\n\nvar _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  'default': _nodeResolve_empty\n});\n\nvar require$$0 = /*@__PURE__*/getAugmentedNamespace(_nodeResolve_empty$1);\n/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nvar seedrandom = createCommonjsModule(function (module) {\n  (function (global, pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var width = 256,\n        // each RC4 output is 0 <= x < 256\n    chunks = 6,\n        // at least six RC4 outputs for each double\n    digits = 52,\n        // there are 52 significant digits in a double\n    rngname = 'random',\n        // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n        significance = math.pow(2, digits),\n        overflow = significance * 2,\n        mask = width - 1,\n        nodecrypto; // node.js crypto module, initialized at the bottom.\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n\n    function seedrandom(seed, options, callback) {\n      var key = [];\n      options = options == true ? {\n        entropy: true\n      } : options || {}; // Flatten the seed string or build one from local entropy if needed.\n\n      var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed == null ? autoseed() : seed, 3), key); // Use the seed to initialize an ARC4 generator.\n\n      var arc4 = new ARC4(key); // This function returns a random double in [0, 1) that contains\n      // randomness in every bit of the mantissa of the IEEE 754 value.\n\n      var prng = function () {\n        var n = arc4.g(chunks),\n            // Start with a numerator n < 2 ^ 48\n        d = startdenom,\n            //   and denominator d = 2 ^ 48.\n        x = 0; //   and no 'extra last byte'.\n\n        while (n < significance) {\n          // Fill up all significant digits by\n          n = (n + x) * width; //   shifting numerator and\n\n          d *= width; //   denominator and generating a\n\n          x = arc4.g(1); //   new least-significant-byte.\n        }\n\n        while (n >= overflow) {\n          // To avoid rounding up, before adding\n          n /= 2; //   last byte, shift everything\n\n          d /= 2; //   right using integer math until\n\n          x >>>= 1; //   we have exactly the desired bits.\n        }\n\n        return (n + x) / d; // Form the number within [0, 1).\n      };\n\n      prng.int32 = function () {\n        return arc4.g(4) | 0;\n      };\n\n      prng.quick = function () {\n        return arc4.g(4) / 0x100000000;\n      };\n\n      prng.double = prng; // Mix the randomness into accumulated entropy.\n\n      mixkey(tostring(arc4.S), pool); // Calling convention: what to return as a function of prng, seed, is_math.\n\n      return (options.pass || callback || function (prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) {\n            copy(state, arc4);\n          } // Only provide the .state method if requested via options.state.\n\n\n          prng.state = function () {\n            return copy(arc4, {});\n          };\n        } // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n\n\n        if (is_math_call) {\n          math[rngname] = prng;\n          return seed;\n        } // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);\n    } //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n\n\n    function ARC4(key) {\n      var t,\n          keylen = key.length,\n          me = this,\n          i = 0,\n          j = me.i = me.j = 0,\n          s = me.S = []; // The empty key [] is treated as [0].\n\n      if (!keylen) {\n        key = [keylen++];\n      } // Set up S using the standard key scheduling algorithm.\n\n\n      while (i < width) {\n        s[i] = i++;\n      }\n\n      for (i = 0; i < width; i++) {\n        s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n        s[j] = t;\n      } // The \"g\" method returns the next (count) outputs as one number.\n\n\n      (me.g = function (count) {\n        // Using instance members instead of closure state nearly doubles speed.\n        var t,\n            r = 0,\n            i = me.i,\n            j = me.j,\n            s = me.S;\n\n        while (count--) {\n          t = s[i = mask & i + 1];\n          r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n        }\n\n        me.i = i;\n        me.j = j;\n        return r; // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n      })(width);\n    } //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n\n\n    function copy(f, t) {\n      t.i = f.i;\n      t.j = f.j;\n      t.S = f.S.slice();\n      return t;\n    } //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n\n\n    function flatten(obj, depth) {\n      var result = [],\n          typ = typeof obj,\n          prop;\n\n      if (depth && typ == 'object') {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n\n      return result.length ? result : typ == 'string' ? obj : obj + '\\0';\n    } //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n\n\n    function mixkey(seed, key) {\n      var stringseed = seed + '',\n          smear,\n          j = 0;\n\n      while (j < stringseed.length) {\n        key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n      }\n\n      return tostring(key);\n    } //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n\n\n    function autoseed() {\n      try {\n        var out;\n\n        if (nodecrypto && (out = nodecrypto.randomBytes)) {\n          // The use of 'out' to remember randomBytes makes tight minified code.\n          out = out(width);\n        } else {\n          out = new Uint8Array(width);\n          (global.crypto || global.msCrypto).getRandomValues(out);\n        }\n\n        return tostring(out);\n      } catch (e) {\n        var browser = global.navigator,\n            plugins = browser && browser.plugins;\n        return [+new Date(), global, plugins, global.screen, tostring(pool)];\n      }\n    } //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n\n\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a);\n    } //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n\n\n    mixkey(math.random(), pool); //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n\n    if (module.exports) {\n      module.exports = seedrandom; // When in node.js, try using crypto package for autoseeding.\n\n      try {\n        nodecrypto = require$$0;\n      } catch (ex) {}\n    } else {\n      // When included as a plain script, set up Math.seedrandom global.\n      math['seed' + rngname] = seedrandom;\n    } // End anonymous scope, and pass initial values.\n\n  })( // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  typeof self !== 'undefined' ? self : commonjsGlobal, [], // pool: entropy pool starts empty\n  Math // math: package containing random, pow, and seedrandom\n  );\n});\n\nfunction strs2ab(strs) {\n  // Adapted from https://stackoverflow.com/posts/11058858\n  const len = strs.reduce(function (total, str) {\n    return total + str.length * 2;\n  }, 0);\n  const buf = new ArrayBuffer(len); // 2 bytes for each char\n\n  const bufView = new Uint16Array(buf);\n  let offset = 0;\n  strs.forEach(function (str) {\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[offset + i] = str.charCodeAt(i);\n    }\n\n    offset += str.length;\n  });\n  return bufView;\n}\n\nvar indexSeedrandom = function init(window) {\n  const seedrandom$1 = seedrandom;\n\n  function execGlobal(name, value) {\n    return window[name](value);\n  }\n\n  let SyncRandomBytes;\n  let seed;\n\n  try {\n    SyncRandomBytes = execGlobal('require', 'react-native').NativeModules.SyncRandomBytes;\n\n    if (SyncRandomBytes) {\n      seed = SyncRandomBytes.seed;\n    }\n  } catch (_) {}\n\n  if (!seed && window && 'Expo' in window) {\n    seed = strs2ab([window.Expo.Constants.installationId, window.Expo.Constants.sessionId, 'performance' in window ? window.performance.now().toString(32) : new Date().toISOString(), Math.random().toString(32)]);\n  }\n\n  let prng = seedrandom$1(seed);\n  let early = false;\n\n  if (!seed && SyncRandomBytes) {\n    early = true;\n    SyncRandomBytes.randomBytes().then(seed => {\n      early = false;\n      prng = seedrandom$1(seed);\n    }).catch(function (err) {\n      early = false;\n      console.log(`WARNING: can not collect seed data: ${err.message}`);\n    });\n  }\n\n  function randomFillUint32(input) {\n    const len = input.length;\n\n    if (len > 16384) {\n      // 65536 by 4\n      throw new Error('QuotaExceeded');\n    }\n\n    for (let i = len - 1; i >= 0; i--) {\n      input[i] = prng.int32();\n    }\n\n    return input;\n  }\n\n  function randomFillInt32(input) {\n    const len = input.length;\n\n    if (len > 16384) {\n      // 65536 by 4\n      throw new Error('QuotaExceeded');\n    }\n\n    for (let i = len - 1; i >= 0; i--) {\n      input[i] = prng.int32() - 0x80000000;\n    }\n\n    return input;\n  }\n\n  function randomFillUint8(input) {\n    if (input.length > 65536) {\n      throw new Error('QuotaExceeded');\n    }\n\n    const count = input.length * 0.25 + 1 | 0;\n\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32();\n      input[n++] = value & 0xff;\n      input[n++] = value >> 8 & 0xff;\n      input[n++] = value >> 16 & 0xff;\n      input[n++] = value >> 24 & 0xff;\n    }\n\n    return input;\n  }\n\n  function randomFillInt8(input) {\n    if (input.length > 65536) {\n      throw new Error('QuotaExceeded');\n    }\n\n    const count = input.length * 0.25 + 1 | 0;\n\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32();\n      input[n++] = (value & 0xff) - 0x80;\n      input[n++] = (value >> 8 & 0xff) - 0x80;\n      input[n++] = (value >> 16 & 0xff) - 0x80;\n      input[n++] = (value >> 24 & 0xff) - 0x80;\n    }\n\n    return input;\n  }\n\n  function randomFillUint16(input) {\n    if (input.length > 32767) {\n      throw new Error('QuotaExceeded');\n    }\n\n    const count = input.length * 0.5 + 1 | 0;\n\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32();\n      input[n++] = value & 0xffff;\n      input[n++] = value >> 16 & 0xffff;\n    }\n\n    return input;\n  }\n\n  function randomFillInt16(input) {\n    if (input.length > 32767) {\n      throw new Error('QuotaExceeded');\n    }\n\n    const count = input.length * 0.5 + 1 | 0;\n\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32();\n      input[n++] = (value & 0xffff) - 0x8000;\n      input[n++] = (value >> 16 & 0xffff) - 0x8000;\n    }\n\n    return input;\n  }\n\n  return function getSeedRandomValues(input) {\n    if (early) {\n      early = false;\n      console.log('WARNING: random data is requested before the seed is done');\n    }\n\n    if (input === null || input === undefined) {\n      throw new Error('invalid type');\n    }\n\n    if (input instanceof Uint8Array) {\n      return randomFillUint8(input);\n    }\n\n    if (input instanceof Uint32Array) {\n      return randomFillUint32(input);\n    }\n\n    if (input instanceof Uint16Array) {\n      return randomFillUint16(input);\n    }\n\n    if (input instanceof Int32Array) {\n      return randomFillInt32(input);\n    }\n\n    if (input instanceof Int16Array) {\n      return randomFillInt16(input);\n    }\n\n    if (input instanceof Int8Array) {\n      return randomFillInt8(input);\n    }\n\n    if (input instanceof Uint8ClampedArray) {\n      return randomFillUint8(input);\n    }\n\n    throw new Error('invalid type');\n  };\n};\n\nvar syncRandombytes = createCommonjsModule(function (module) {\n  module.exports = function (window) {\n    if (window && window.crypto && window.crypto.getRandomValues) {\n      return window.crypto.getRandomValues.bind(window.crypto);\n    }\n\n    try {\n      return indexCrypto(window);\n    } catch (_) {\n      return indexSeedrandom(window);\n    }\n  }(typeof window === 'object' ? window : module);\n}); // base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n\nfunction base(ALPHABET) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n\n  var BASE_MAP = new Uint8Array(256);\n\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n\n    BASE_MAP[xc] = i;\n  }\n\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n\n  function encode(source) {\n    if (source instanceof Uint8Array) ;else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n\n    if (source.length === 0) {\n      return '';\n    } // Skip & count leading zeroes.\n\n\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    } // Allocate enough space in big-endian base58 representation.\n\n\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size); // Process the bytes.\n\n    while (pbegin !== pend) {\n      var carry = source[pbegin]; // Apply \"b58 = b58 * 256 + ch\".\n\n      var i = 0;\n\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n\n      length = i;\n      pbegin++;\n    } // Skip leading zeroes in base58 result.\n\n\n    var it2 = size - length;\n\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    } // Translate the result into a string.\n\n\n    var str = LEADER.repeat(zeroes);\n\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n\n    return str;\n  }\n\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n\n    var psz = 0; // Skip leading spaces.\n\n    if (source[psz] === ' ') {\n      return;\n    } // Skip and count leading '1's.\n\n\n    var zeroes = 0;\n    var length = 0;\n\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    } // Allocate enough space in big-endian base256 representation.\n\n\n    var size = (source.length - psz) * FACTOR + 1 >>> 0; // log(58) / log(256), rounded up.\n\n    var b256 = new Uint8Array(size); // Process the characters.\n\n    while (source[psz]) {\n      // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]; // Invalid character\n\n      if (carry === 255) {\n        return;\n      }\n\n      var i = 0;\n\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n\n      length = i;\n      psz++;\n    } // Skip trailing spaces.\n\n\n    if (source[psz] === ' ') {\n      return;\n    } // Skip leading zeroes in b256.\n\n\n    var it4 = size - length;\n\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n\n    return vch;\n  }\n\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n\n    if (buffer) {\n      return buffer;\n    }\n\n    throw new Error('Non-base' + BASE + ' character');\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\n\nvar src = base;\n\nvar isBufferBrowser = function isBuffer(arg) {\n  return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n\n      var TempCtor = function () {};\n\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    };\n  }\n});\nvar util = createCommonjsModule(function (module, exports) {\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n  var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n\n    return descriptors;\n  };\n\n  var formatRegExp = /%[sdj%]/g;\n\n  exports.format = function (f) {\n    if (!isString(f)) {\n      var objects = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        objects.push(inspect(arguments[i]));\n      }\n\n      return objects.join(' ');\n    }\n\n    var i = 1;\n    var args = arguments;\n    var len = args.length;\n    var str = String(f).replace(formatRegExp, function (x) {\n      if (x === '%%') return '%';\n      if (i >= len) return x;\n\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n\n        case '%d':\n          return Number(args[i++]);\n\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n\n        default:\n          return x;\n      }\n    });\n\n    for (var x = args[i]; i < len; x = args[++i]) {\n      if (isNull(x) || !isObject(x)) {\n        str += ' ' + x;\n      } else {\n        str += ' ' + inspect(x);\n      }\n    }\n\n    return str;\n  }; // Mark that a method should not be used.\n  // Returns a modified function which warns once by default.\n  // If --no-deprecation is set, then it is a no-op.\n\n\n  exports.deprecate = function (fn, msg) {\n    if (typeof process !== 'undefined' && process.noDeprecation === true) {\n      return fn;\n    } // Allow for deprecating things in the process of starting up.\n\n\n    if (typeof process === 'undefined') {\n      return function () {\n        return exports.deprecate(fn, msg).apply(this, arguments);\n      };\n    }\n\n    var warned = false;\n\n    function deprecated() {\n      if (!warned) {\n        if (process.throwDeprecation) {\n          throw new Error(msg);\n        } else if (process.traceDeprecation) {\n          console.trace(msg);\n        } else {\n          console.error(msg);\n        }\n\n        warned = true;\n      }\n\n      return fn.apply(this, arguments);\n    }\n\n    return deprecated;\n  };\n\n  var debugs = {};\n  var debugEnviron;\n\n  exports.debuglog = function (set) {\n    if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';\n    set = set.toUpperCase();\n\n    if (!debugs[set]) {\n      if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n        var pid = process.pid;\n\n        debugs[set] = function () {\n          var msg = exports.format.apply(exports, arguments);\n          console.error('%s %d: %s', set, pid, msg);\n        };\n      } else {\n        debugs[set] = function () {};\n      }\n    }\n\n    return debugs[set];\n  };\n  /**\n   * Echos the value of a value. Trys to print the value out\n   * in the best way possible given the different types.\n   *\n   * @param {Object} obj The object to print out.\n   * @param {Object} opts Optional options object that alters the output.\n   */\n\n  /* legacy: obj, showHidden, depth, colors*/\n\n\n  function inspect(obj, opts) {\n    // default options\n    var ctx = {\n      seen: [],\n      stylize: stylizeNoColor\n    }; // legacy...\n\n    if (arguments.length >= 3) ctx.depth = arguments[2];\n    if (arguments.length >= 4) ctx.colors = arguments[3];\n\n    if (isBoolean(opts)) {\n      // legacy...\n      ctx.showHidden = opts;\n    } else if (opts) {\n      // got an \"options\" object\n      exports._extend(ctx, opts);\n    } // set default options\n\n\n    if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n    if (isUndefined(ctx.depth)) ctx.depth = 2;\n    if (isUndefined(ctx.colors)) ctx.colors = false;\n    if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n    if (ctx.colors) ctx.stylize = stylizeWithColor;\n    return formatValue(ctx, obj, ctx.depth);\n  }\n\n  exports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\n  inspect.colors = {\n    'bold': [1, 22],\n    'italic': [3, 23],\n    'underline': [4, 24],\n    'inverse': [7, 27],\n    'white': [37, 39],\n    'grey': [90, 39],\n    'black': [30, 39],\n    'blue': [34, 39],\n    'cyan': [36, 39],\n    'green': [32, 39],\n    'magenta': [35, 39],\n    'red': [31, 39],\n    'yellow': [33, 39]\n  }; // Don't use 'blue' not visible on cmd.exe\n\n  inspect.styles = {\n    'special': 'cyan',\n    'number': 'yellow',\n    'boolean': 'yellow',\n    'undefined': 'grey',\n    'null': 'bold',\n    'string': 'green',\n    'date': 'magenta',\n    // \"name\": intentionally not styling\n    'regexp': 'red'\n  };\n\n  function stylizeWithColor(str, styleType) {\n    var style = inspect.styles[styleType];\n\n    if (style) {\n      return '\\u001b[' + inspect.colors[style][0] + 'm' + str + '\\u001b[' + inspect.colors[style][1] + 'm';\n    } else {\n      return str;\n    }\n  }\n\n  function stylizeNoColor(str, styleType) {\n    return str;\n  }\n\n  function arrayToHash(array) {\n    var hash = {};\n    array.forEach(function (val, idx) {\n      hash[val] = true;\n    });\n    return hash;\n  }\n\n  function formatValue(ctx, value, recurseTimes) {\n    // Provide a hook for user-specified inspect functions.\n    // Check that value is an object with an inspect function on it\n    if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n    value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.\n    !(value.constructor && value.constructor.prototype === value)) {\n      var ret = value.inspect(recurseTimes, ctx);\n\n      if (!isString(ret)) {\n        ret = formatValue(ctx, ret, recurseTimes);\n      }\n\n      return ret;\n    } // Primitive types cannot have properties\n\n\n    var primitive = formatPrimitive(ctx, value);\n\n    if (primitive) {\n      return primitive;\n    } // Look up the keys of the object.\n\n\n    var keys = Object.keys(value);\n    var visibleKeys = arrayToHash(keys);\n\n    if (ctx.showHidden) {\n      keys = Object.getOwnPropertyNames(value);\n    } // IE doesn't make error fields non-enumerable\n    // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n    if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n      return formatError(value);\n    } // Some type of object without properties can be shortcutted.\n\n\n    if (keys.length === 0) {\n      if (isFunction(value)) {\n        var name = value.name ? ': ' + value.name : '';\n        return ctx.stylize('[Function' + name + ']', 'special');\n      }\n\n      if (isRegExp(value)) {\n        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n      }\n\n      if (isDate(value)) {\n        return ctx.stylize(Date.prototype.toString.call(value), 'date');\n      }\n\n      if (isError(value)) {\n        return formatError(value);\n      }\n    }\n\n    var base = '',\n        array = false,\n        braces = ['{', '}']; // Make Array say that they are Array\n\n    if (isArray(value)) {\n      array = true;\n      braces = ['[', ']'];\n    } // Make functions say that they are functions\n\n\n    if (isFunction(value)) {\n      var n = value.name ? ': ' + value.name : '';\n      base = ' [Function' + n + ']';\n    } // Make RegExps say that they are RegExps\n\n\n    if (isRegExp(value)) {\n      base = ' ' + RegExp.prototype.toString.call(value);\n    } // Make dates with properties first say the date\n\n\n    if (isDate(value)) {\n      base = ' ' + Date.prototype.toUTCString.call(value);\n    } // Make error with message first say the error\n\n\n    if (isError(value)) {\n      base = ' ' + formatError(value);\n    }\n\n    if (keys.length === 0 && (!array || value.length == 0)) {\n      return braces[0] + base + braces[1];\n    }\n\n    if (recurseTimes < 0) {\n      if (isRegExp(value)) {\n        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n      } else {\n        return ctx.stylize('[Object]', 'special');\n      }\n    }\n\n    ctx.seen.push(value);\n    var output;\n\n    if (array) {\n      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n    } else {\n      output = keys.map(function (key) {\n        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n      });\n    }\n\n    ctx.seen.pop();\n    return reduceToSingleString(output, base, braces);\n  }\n\n  function formatPrimitive(ctx, value) {\n    if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n    if (isString(value)) {\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n    }\n\n    if (isNumber(value)) return ctx.stylize('' + value, 'number');\n    if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n    if (isNull(value)) return ctx.stylize('null', 'null');\n  }\n\n  function formatError(value) {\n    return '[' + Error.prototype.toString.call(value) + ']';\n  }\n\n  function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n    var output = [];\n\n    for (var i = 0, l = value.length; i < l; ++i) {\n      if (hasOwnProperty(value, String(i))) {\n        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n      } else {\n        output.push('');\n      }\n    }\n\n    keys.forEach(function (key) {\n      if (!key.match(/^\\d+$/)) {\n        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n      }\n    });\n    return output;\n  }\n\n  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n    var name, str, desc;\n    desc = Object.getOwnPropertyDescriptor(value, key) || {\n      value: value[key]\n    };\n\n    if (desc.get) {\n      if (desc.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (desc.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n\n    if (!hasOwnProperty(visibleKeys, key)) {\n      name = '[' + key + ']';\n    }\n\n    if (!str) {\n      if (ctx.seen.indexOf(desc.value) < 0) {\n        if (isNull(recurseTimes)) {\n          str = formatValue(ctx, desc.value, null);\n        } else {\n          str = formatValue(ctx, desc.value, recurseTimes - 1);\n        }\n\n        if (str.indexOf('\\n') > -1) {\n          if (array) {\n            str = str.split('\\n').map(function (line) {\n              return '  ' + line;\n            }).join('\\n').substr(2);\n          } else {\n            str = '\\n' + str.split('\\n').map(function (line) {\n              return '   ' + line;\n            }).join('\\n');\n          }\n        }\n      } else {\n        str = ctx.stylize('[Circular]', 'special');\n      }\n    }\n\n    if (isUndefined(name)) {\n      if (array && key.match(/^\\d+$/)) {\n        return str;\n      }\n\n      name = JSON.stringify('' + key);\n\n      if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n        name = name.substr(1, name.length - 2);\n        name = ctx.stylize(name, 'name');\n      } else {\n        name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n        name = ctx.stylize(name, 'string');\n      }\n    }\n\n    return name + ': ' + str;\n  }\n\n  function reduceToSingleString(output, base, braces) {\n    var length = output.reduce(function (prev, cur) {\n      if (cur.indexOf('\\n') >= 0) ;\n      return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n    }, 0);\n\n    if (length > 60) {\n      return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n    }\n\n    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n  } // NOTE: These type checking functions intentionally don't use `instanceof`\n  // because it is fragile and can be easily faked with `Object.create()`.\n\n\n  function isArray(ar) {\n    return Array.isArray(ar);\n  }\n\n  exports.isArray = isArray;\n\n  function isBoolean(arg) {\n    return typeof arg === 'boolean';\n  }\n\n  exports.isBoolean = isBoolean;\n\n  function isNull(arg) {\n    return arg === null;\n  }\n\n  exports.isNull = isNull;\n\n  function isNullOrUndefined(arg) {\n    return arg == null;\n  }\n\n  exports.isNullOrUndefined = isNullOrUndefined;\n\n  function isNumber(arg) {\n    return typeof arg === 'number';\n  }\n\n  exports.isNumber = isNumber;\n\n  function isString(arg) {\n    return typeof arg === 'string';\n  }\n\n  exports.isString = isString;\n\n  function isSymbol(arg) {\n    return typeof arg === 'symbol';\n  }\n\n  exports.isSymbol = isSymbol;\n\n  function isUndefined(arg) {\n    return arg === void 0;\n  }\n\n  exports.isUndefined = isUndefined;\n\n  function isRegExp(re) {\n    return isObject(re) && objectToString(re) === '[object RegExp]';\n  }\n\n  exports.isRegExp = isRegExp;\n\n  function isObject(arg) {\n    return typeof arg === 'object' && arg !== null;\n  }\n\n  exports.isObject = isObject;\n\n  function isDate(d) {\n    return isObject(d) && objectToString(d) === '[object Date]';\n  }\n\n  exports.isDate = isDate;\n\n  function isError(e) {\n    return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n  }\n\n  exports.isError = isError;\n\n  function isFunction(arg) {\n    return typeof arg === 'function';\n  }\n\n  exports.isFunction = isFunction;\n\n  function isPrimitive(arg) {\n    return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol\n    typeof arg === 'undefined';\n  }\n\n  exports.isPrimitive = isPrimitive;\n  exports.isBuffer = isBufferBrowser;\n\n  function objectToString(o) {\n    return Object.prototype.toString.call(o);\n  }\n\n  function pad(n) {\n    return n < 10 ? '0' + n.toString(10) : n.toString(10);\n  }\n\n  var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\n  function timestamp() {\n    var d = new Date();\n    var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n    return [d.getDate(), months[d.getMonth()], time].join(' ');\n  } // log is just a thin wrapper to console.log that prepends a timestamp\n\n\n  exports.log = function () {\n    console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n  };\n  /**\n   * Inherit the prototype methods from one constructor into another.\n   *\n   * The Function.prototype.inherits from lang.js rewritten as a standalone\n   * function (not on Function.prototype). NOTE: If this file is to be loaded\n   * during bootstrapping this function needs to be rewritten using some native\n   * functions as prototype setup using normal JavaScript does not work as\n   * expected during bootstrapping (see mirror.js in r114903).\n   *\n   * @param {function} ctor Constructor function which needs to inherit the\n   *     prototype.\n   * @param {function} superCtor Constructor function to inherit prototype from.\n   */\n\n\n  exports.inherits = inherits_browser;\n\n  exports._extend = function (origin, add) {\n    // Don't do anything if add isn't an object\n    if (!add || !isObject(add)) return origin;\n    var keys = Object.keys(add);\n    var i = keys.length;\n\n    while (i--) {\n      origin[keys[i]] = add[keys[i]];\n    }\n\n    return origin;\n  };\n\n  function hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n  }\n\n  var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\n  exports.promisify = function promisify(original) {\n    if (typeof original !== 'function') throw new TypeError('The \"original\" argument must be of type Function');\n\n    if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n      var fn = original[kCustomPromisifiedSymbol];\n\n      if (typeof fn !== 'function') {\n        throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n      }\n\n      Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n        value: fn,\n        enumerable: false,\n        writable: false,\n        configurable: true\n      });\n      return fn;\n    }\n\n    function fn() {\n      var promiseResolve, promiseReject;\n      var promise = new Promise(function (resolve, reject) {\n        promiseResolve = resolve;\n        promiseReject = reject;\n      });\n      var args = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n\n      args.push(function (err, value) {\n        if (err) {\n          promiseReject(err);\n        } else {\n          promiseResolve(value);\n        }\n      });\n\n      try {\n        original.apply(this, args);\n      } catch (err) {\n        promiseReject(err);\n      }\n\n      return promise;\n    }\n\n    Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n    if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn,\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n    return Object.defineProperties(fn, getOwnPropertyDescriptors(original));\n  };\n\n  exports.promisify.custom = kCustomPromisifiedSymbol;\n\n  function callbackifyOnRejected(reason, cb) {\n    // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n    // Because `null` is a special error value in callbacks which means \"no error\n    // occurred\", we error-wrap so the callback consumer can distinguish between\n    // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n    if (!reason) {\n      var newReason = new Error('Promise was rejected with a falsy value');\n      newReason.reason = reason;\n      reason = newReason;\n    }\n\n    return cb(reason);\n  }\n\n  function callbackify(original) {\n    if (typeof original !== 'function') {\n      throw new TypeError('The \"original\" argument must be of type Function');\n    } // We DO NOT return the promise as it gives the user a false sense that\n    // the promise is actually somehow related to the callback's execution\n    // and that the callback throwing will reject the promise.\n\n\n    function callbackified() {\n      var args = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n\n      var maybeCb = args.pop();\n\n      if (typeof maybeCb !== 'function') {\n        throw new TypeError('The last argument must be of type Function');\n      }\n\n      var self = this;\n\n      var cb = function () {\n        return maybeCb.apply(self, arguments);\n      }; // In true node style we process the callback on `nextTick` with all the\n      // implications (stack, `uncaughtException`, `async_hooks`)\n\n\n      original.apply(this, args).then(function (ret) {\n        process.nextTick(cb, null, ret);\n      }, function (rej) {\n        process.nextTick(callbackifyOnRejected, rej, cb);\n      });\n    }\n\n    Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n    Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));\n    return callbackified;\n  }\n\n  exports.callbackify = callbackify;\n});\nvar TextEncoder_1 = typeof TextEncoder !== \"undefined\" ? TextEncoder : util.TextEncoder;\nvar TextDecoder_1 = typeof TextDecoder !== \"undefined\" ? TextDecoder : util.TextDecoder;\nvar lib = {\n  TextEncoder: TextEncoder_1,\n  TextDecoder: TextDecoder_1\n}; // @ts-ignore\n\nconst {\n  TextEncoder: TextEncoder$1,\n  TextDecoder: TextDecoder$1\n} = lib;\nconst textDecoder = new TextDecoder$1();\n/**\n * @param {ArrayBufferView|ArrayBuffer} bytes\n * @returns {string}\n */\n\nconst decodeText = bytes => textDecoder.decode(bytes);\n\nconst textEncoder = new TextEncoder$1();\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\n\nconst encodeText = text => textEncoder.encode(text);\n/**\n * Returns a new Uint8Array created by concatenating the passed Arrays\n *\n * @param {Array<ArrayLike<number>>} arrs\n * @param {number} length\n * @returns {Uint8Array}\n */\n\n\nfunction concat(arrs, length) {\n  const output = new Uint8Array(length);\n  let offset = 0;\n\n  for (const arr of arrs) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n\n  return output;\n}\n\nvar util$1 = {\n  decodeText,\n  encodeText,\n  concat\n};\nconst {\n  encodeText: encodeText$1\n} = util$1;\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/** @typedef {import(\"./types\").BaseName} BaseName */\n\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n/**\n * Class to encode/decode in the supported Bases\n *\n */\n\nclass Base {\n  /**\n   * @param {BaseName} name\n   * @param {BaseCode} code\n   * @param {CodecFactory} factory\n   * @param {string} alphabet\n   */\n  constructor(name, code, factory, alphabet) {\n    this.name = name;\n    this.code = code;\n    this.codeBuf = encodeText$1(this.code);\n    this.alphabet = alphabet;\n    this.codec = factory(alphabet);\n  }\n  /**\n   * @param {Uint8Array} buf\n   * @returns {string}\n   */\n\n\n  encode(buf) {\n    return this.codec.encode(buf);\n  }\n  /**\n   * @param {string} string\n   * @returns {Uint8Array}\n   */\n\n\n  decode(string) {\n    for (const char of string) {\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\n        throw new Error(`invalid character '${char}' in '${string}'`);\n      }\n    }\n\n    return this.codec.decode(string);\n  }\n\n}\n\nvar base$1 = Base;\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {Uint8Array}\n */\n\nconst decode = (string, alphabet, bitsPerChar) => {\n  // Build the character lookup table:\n\n  /** @type {Record<string, number>} */\n  const codes = {};\n\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  } // Count the padding bytes:\n\n\n  let end = string.length;\n\n  while (string[end - 1] === '=') {\n    --end;\n  } // Allocate the output:\n\n\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0); // Parse the data:\n\n  let bits = 0; // Number of bits currently in the buffer\n\n  let buffer = 0; // Bits waiting to be written out, MSB first\n\n  let written = 0; // Next byte to write\n\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]];\n\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[i]);\n    } // Append the bits to the buffer:\n\n\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar; // Write out some bits if the buffer has a byte's worth:\n\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 0xff & buffer >> bits;\n    }\n  } // Verify that we have received just enough bits:\n\n\n  if (bits >= bitsPerChar || 0xff & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n\n  return out;\n};\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\n\n\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0; // Number of bits currently in the buffer\n\n  let buffer = 0; // Bits waiting to be written out, MSB first\n\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = buffer << 8 | data[i];\n    bits += 8; // Write out as much as we can:\n\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  } // Partial character:\n\n\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  } // Add padding characters until we hit a byte boundary:\n\n\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n\n  return out;\n};\n/**\n * RFC4648 Factory\n *\n * @param {number} bitsPerChar\n * @returns {CodecFactory}\n */\n\n\nconst rfc4648 = bitsPerChar => alphabet => {\n  return {\n    /**\n     * @param {Uint8Array} input\n     * @returns {string}\n     */\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n\n    /**\n     * @param {string} input\n     * @returns {Uint8Array}\n     */\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar);\n    }\n\n  };\n};\n\nvar rfc4648_1 = {\n  rfc4648\n};\nconst {\n  rfc4648: rfc4648$1\n} = rfc4648_1;\nconst {\n  decodeText: decodeText$1,\n  encodeText: encodeText$2\n} = util$1;\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/** @typedef {import('./types').Codec} Codec */\n\n/** @typedef {import('./types').BaseName} BaseName */\n\n/** @typedef {import('./types').BaseCode} BaseCode */\n\n/** @type {CodecFactory} */\n\nconst identity = () => {\n  return {\n    encode: decodeText$1,\n    decode: encodeText$2\n  };\n};\n/**\n *\n * name, code, implementation, alphabet\n *\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\n */\n\n\nconst constants = [['identity', '\\x00', identity, ''], ['base2', '0', rfc4648$1(1), '01'], ['base8', '7', rfc4648$1(3), '01234567'], ['base10', '9', src, '0123456789'], ['base16', 'f', rfc4648$1(4), '0123456789abcdef'], ['base16upper', 'F', rfc4648$1(4), '0123456789ABCDEF'], ['base32hex', 'v', rfc4648$1(5), '0123456789abcdefghijklmnopqrstuv'], ['base32hexupper', 'V', rfc4648$1(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'], ['base32hexpad', 't', rfc4648$1(5), '0123456789abcdefghijklmnopqrstuv='], ['base32hexpadupper', 'T', rfc4648$1(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='], ['base32', 'b', rfc4648$1(5), 'abcdefghijklmnopqrstuvwxyz234567'], ['base32upper', 'B', rfc4648$1(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'], ['base32pad', 'c', rfc4648$1(5), 'abcdefghijklmnopqrstuvwxyz234567='], ['base32padupper', 'C', rfc4648$1(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='], ['base32z', 'h', rfc4648$1(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'], ['base36', 'k', src, '0123456789abcdefghijklmnopqrstuvwxyz'], ['base36upper', 'K', src, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'], ['base58btc', 'z', src, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'], ['base58flickr', 'Z', src, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'], ['base64', 'm', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'], ['base64pad', 'M', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='], ['base64url', 'u', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'], ['base64urlpad', 'U', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']];\n/** @type {Record<BaseName,Base>} */\n\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new base$1(tupple[0], tupple[1], tupple[2], tupple[3]);\n  return prev;\n},\n/** @type {Record<BaseName,Base>} */\n{});\n/** @type {Record<BaseCode,Base>} */\n\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]];\n  return prev;\n},\n/** @type {Record<BaseCode,Base>} */\n{});\nvar constants_1 = {\n  names,\n  codes\n};\n/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n *\n */\n\nvar src$1 = createCommonjsModule(function (module, exports) {\n  const {\n    encodeText,\n    decodeText,\n    concat\n  } = util$1;\n  /** @typedef {import('./base')} Base */\n\n  /** @typedef {import(\"./types\").BaseNameOrCode} BaseNameOrCode */\n\n  /** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n  /** @typedef {import(\"./types\").BaseName} BaseName */\n\n  /**\n   * Create a new Uint8Array with the multibase varint+code.\n   *\n   * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n   * @param {Uint8Array} buf - The data to be prefixed with multibase.\n   * @returns {Uint8Array}\n   * @throws {Error} Will throw if the encoding is not supported\n   */\n\n  function multibase(nameOrCode, buf) {\n    if (!buf) {\n      throw new Error('requires an encoded Uint8Array');\n    }\n\n    const {\n      name,\n      codeBuf\n    } = encoding(nameOrCode);\n    validEncode(name, buf);\n    return concat([codeBuf, buf], codeBuf.length + buf.length);\n  }\n  /**\n   * Encode data with the specified base and add the multibase prefix.\n   *\n   * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n   * @param {Uint8Array} buf - The data to be encoded.\n   * @returns {Uint8Array}\n   * @throws {Error} Will throw if the encoding is not supported\n   *\n   */\n\n\n  function encode(nameOrCode, buf) {\n    const enc = encoding(nameOrCode);\n    const data = encodeText(enc.encode(buf));\n    return concat([enc.codeBuf, data], enc.codeBuf.length + data.length);\n  }\n  /**\n   * Takes a Uint8Array or string encoded with multibase header, decodes it and\n   * returns the decoded buffer\n   *\n   * @param {Uint8Array|string} data\n   * @returns {Uint8Array}\n   * @throws {Error} Will throw if the encoding is not supported\n   *\n   */\n\n\n  function decode(data) {\n    if (data instanceof Uint8Array) {\n      data = decodeText(data);\n    }\n\n    const prefix = data[0]; // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\n\n    if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\n      data = data.toLowerCase();\n    }\n\n    const enc = encoding(\n    /** @type {BaseCode} */\n    data[0]);\n    return enc.decode(data.substring(1));\n  }\n  /**\n   * Is the given data multibase encoded?\n   *\n   * @param {Uint8Array|string} data\n   * @returns {false | string}\n   */\n\n\n  function isEncoded(data) {\n    if (data instanceof Uint8Array) {\n      data = decodeText(data);\n    } // Ensure bufOrString is a string\n\n\n    if (Object.prototype.toString.call(data) !== '[object String]') {\n      return false;\n    }\n\n    try {\n      const enc = encoding(\n      /** @type {BaseCode} */\n      data[0]);\n      return enc.name;\n    } catch (err) {\n      return false;\n    }\n  }\n  /**\n   * Validate encoded data\n   *\n   * @param {BaseNameOrCode} name\n   * @param {Uint8Array} buf\n   * @returns {void}\n   * @throws {Error} Will throw if the encoding is not supported\n   */\n\n\n  function validEncode(name, buf) {\n    const enc = encoding(name);\n    enc.decode(decodeText(buf));\n  }\n  /**\n   * Get the encoding by name or code\n   *\n   * @param {BaseNameOrCode} nameOrCode\n   * @returns {Base}\n   * @throws {Error} Will throw if the encoding is not supported\n   */\n\n\n  function encoding(nameOrCode) {\n    if (constants_1.names[\n    /** @type {BaseName} */\n    nameOrCode]) {\n      return constants_1.names[\n      /** @type {BaseName} */\n      nameOrCode];\n    } else if (constants_1.codes[\n    /** @type {BaseCode} */\n    nameOrCode]) {\n      return constants_1.codes[\n      /** @type {BaseCode} */\n      nameOrCode];\n    } else {\n      throw new Error(`Unsupported encoding: ${nameOrCode}`);\n    }\n  }\n  /**\n   * Get encoding from data\n   *\n   * @param {string|Uint8Array} data\n   * @returns {Base}\n   * @throws {Error} Will throw if the encoding is not supported\n   */\n\n\n  function encodingFromData(data) {\n    if (data instanceof Uint8Array) {\n      data = decodeText(data);\n    }\n\n    return encoding(\n    /** @type {BaseCode} */\n    data[0]);\n  }\n\n  exports = module.exports = multibase;\n  exports.encode = encode;\n  exports.decode = decode;\n  exports.isEncoded = isEncoded;\n  exports.encoding = encoding;\n  exports.encodingFromData = encodingFromData;\n  exports.names = Object.freeze(constants_1.names);\n  exports.codes = Object.freeze(constants_1.codes);\n});\nvar encode_1 = encode$1;\nvar MSB = 0x80,\n    REST = 0x7F,\n    MSBALL = ~REST,\n    INT = Math.pow(2, 31);\n\nfunction encode$1(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode$1.bytes = 0;\n    throw new RangeError('Could not encode varint');\n  }\n\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while (num >= INT) {\n    out[offset++] = num & 0xFF | MSB;\n    num /= 128;\n  }\n\n  while (num & MSBALL) {\n    out[offset++] = num & 0xFF | MSB;\n    num >>>= 7;\n  }\n\n  out[offset] = num | 0;\n  encode$1.bytes = offset - oldOffset + 1;\n  return out;\n}\n\nvar decode$1 = read;\nvar MSB$1 = 0x80,\n    REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res = 0,\n      offset = offset || 0,\n      shift = 0,\n      counter = offset,\n      b,\n      l = buf.length;\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n\n  read.bytes = counter - offset;\n  return res;\n}\n\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\n\nvar varint = {\n  encode: encode_1,\n  decode: decode$1,\n  encodingLength: length\n};\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n * @see {@link https://github.com/achingbrain/uint8arrays/blob/master/equals.js}\n */\n\nfunction equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Variant denotes Thread variant. Currently only two variants are supported.\n * @public\n */\n\n\nvar Variant;\n\n(function (Variant) {\n  Variant[Variant[\"Raw\"] = 85] = \"Raw\";\n  Variant[Variant[\"AccessControlled\"] = 112] = \"AccessControlled\";\n})(Variant || (Variant = {}));\n/**\n * ThreadID represents a self-describing Thread identifier.\n *\n * It is formed by a Version, a Variant, and a random number of a given length.\n * @public\n *\n * @example\n * Create a new random ThreadID\n * ```typescript\n * import { ThreadID } from '@textile/threads'\n *\n * const id = ThreadID.fromRandom()\n *\n * console.log(id)\n * ```\n *\n * @example\n * Convert a ThreadID to/from a Base32 string\n * ```typescript\n * import { ThreadID } from '@textile/threads'\n *\n * const id = ThreadID.fromRandom()\n * const str = id.toString()\n * const restored = ThreadID.fromString(str)\n * ```\n */\n\n\nclass ThreadID {\n  constructor(buf) {\n    this.buf = buf;\n  }\n  /**\n   * fromRandom creates a new random ID object.\n   * @param variant The Thread variant to use. @see Variant\n   * @param size The size of the random component to use. Defaults to 32 bytes.\n   */\n\n\n  static fromRandom(variant = ThreadID.Variant.Raw, size = 32) {\n    // two 8 bytes (max) numbers plus random bytes\n    const bytes = Uint8Array.from([...varint.encode(ThreadID.V1), ...varint.encode(variant), ...syncRandombytes(new Uint8Array(size))]);\n    return new ThreadID(bytes);\n  }\n  /**\n   * fromString parses an ID-encoded string and returns an ID object.\n   * For IDV1, an ID-encoded string is primarily a multibase string:\n   *    <multibase-type-code><base-encoded-string>\n   * The base-encoded string represents a:\n   *    <version><variant><random-number>\n   * @param v The input encoded Thread ID.\n   */\n\n\n  static fromString(v) {\n    if (v.length < 2) {\n      throw new Error('id too short');\n    }\n\n    const data = src$1.decode(v);\n    return ThreadID.fromBytes(data);\n  }\n  /**\n   * fromBytes takes an ID data slice, parses it and returns an ID.\n   * For IDV1, the data bytes are arranged as:\n   *    <version><variant><random-number>\n   * Please use fromEncoded when parsing a regular ID string, as fromBytes does not\n   * expect multibase-encoded data. fromBytes accepts the output of ID.bytes().\n   * @param data The input Thread ID bytes.\n   */\n\n\n  static fromBytes(data) {\n    let copy = new Uint8Array(data);\n    const version = varint.decode(copy);\n\n    if (version != 1) {\n      throw new Error(`expected 1 as the id version number, got: ${version}.`);\n    }\n\n    copy = copy.slice(varint.decode.bytes, copy.length);\n    const variant = varint.decode(copy);\n\n    if (!(variant in ThreadID.Variant)) {\n      throw new Error('invalid variant.');\n    }\n\n    const id = copy.slice(varint.decode.bytes, copy.length);\n\n    if (id.length < 16) {\n      throw new Error('random component too small.');\n    }\n\n    return new ThreadID(data);\n  }\n  /**\n   * getEncoding returns the multibase encoding for a multibase encoded string.\n   * Returns the name of the encoding if it is encoded, and throws an error otherwise.\n   * @param v The Thread ID to check.\n   */\n\n\n  static getEncoding(v) {\n    if (v.length < 2) {\n      throw new Error('Too Short');\n    }\n\n    const encoding = src$1.isEncoded(v); // check encoding is valid\n\n    if (encoding === false) {\n      throw new Error('Invalid Encoding');\n    }\n\n    return encoding;\n  }\n  /**\n   * isDefined returns true if an ID is defined.\n   * Calling any other methods on an undefined ID will result in undefined behavior.\n   */\n\n\n  isDefined() {\n    return this.buf.length > 0;\n  }\n  /**\n   * toBytes returns the byte representation of an ID.\n   * The output of bytes can be parsed back into an ID with fromBytes.\n   */\n\n\n  toBytes() {\n    return this.buf; // These should not be mutated directly!\n  }\n  /**\n   * equals checks that two IDs are the same.\n   * @param o The other Thread ID.\n   */\n\n\n  equals(o) {\n    return equals(this.buf, o.buf);\n  }\n  /**\n   * version returns the ID version.\n   */\n\n\n  version() {\n    return varint.decode(this.buf);\n  }\n  /**\n   * variant returns the variant of an ID.\n   */\n\n\n  variant() {\n    let copy = new Uint8Array(this.buf);\n    varint.decode(copy);\n    copy = copy.slice(varint.decode.bytes);\n    return varint.decode(copy);\n  }\n  /**\n   * toString returns the (multibase encoded) string representation of an ID.\n   * @param base Name of the base to use for encoding. Defaults to 'base32'.\n   */\n\n\n  toString(base = 'base32') {\n    const decoder = new TextDecoder();\n\n    switch (this.version()) {\n      case ThreadID.V1:\n        return decoder.decode(src$1.encode(base, this.buf));\n\n      default:\n        throw new Error('unknown ID version.');\n    }\n  }\n\n}\n/**\n * Versions. Currently only V1 is supported.\n */\n\n\nThreadID.V1 = 0x01;\nThreadID.Variant = Variant;\nexport default ThreadID;\nexport { ThreadID, Variant };","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/node_modules/@textile/threads-id/dist/esm/index.js"],"names":["commonjsGlobal","globalThis","window","global","self","getAugmentedNamespace","n","__esModule","a","Object","defineProperty","value","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","createCommonjsModule","fn","module","exports","node8","test","process","version","indexCrypto","init","execGlobal","name","crypto","randomFillUint32","input","bytes","len","length","i","o","randomFillInt32","randomFillUint16","randomFillInt16","randomFillUint8","randomFillInt8","randomFillNode8","Uint8Array","randomFillSync","randomBytes","byteLength","Uint32Array","Uint16Array","Int32Array","Int16Array","Int8Array","Uint8ClampedArray","Error","randomFillClassic","_nodeResolve_empty","_nodeResolve_empty$1","freeze","__proto__","require$$0","seedrandom","pool","math","width","chunks","digits","rngname","startdenom","pow","significance","overflow","mask","nodecrypto","seed","options","callback","key","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","g","x","int32","quick","double","S","pass","is_math_call","state","copy","t","keylen","me","j","s","count","r","f","slice","obj","depth","result","typ","prop","push","e","stringseed","smear","charCodeAt","out","msCrypto","getRandomValues","browser","navigator","plugins","Date","screen","String","fromCharCode","apply","random","ex","Math","strs2ab","strs","reduce","total","str","buf","ArrayBuffer","bufView","offset","strLen","indexSeedrandom","seedrandom$1","SyncRandomBytes","NativeModules","_","Expo","Constants","installationId","sessionId","performance","now","toString","toISOString","early","then","catch","err","console","log","message","getSeedRandomValues","undefined","syncRandombytes","bind","base","ALPHABET","TypeError","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","encode","source","isView","buffer","byteOffset","Array","isArray","from","zeroes","pbegin","pend","size","b58","carry","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","string","src","isBufferBrowser","isBuffer","arg","fill","readUInt8","inherits_browser","create","inherits","ctor","superCtor","super_","prototype","constructor","writable","configurable","TempCtor","util","getOwnPropertyDescriptors","descriptors","formatRegExp","format","isString","objects","arguments","inspect","join","args","replace","Number","JSON","stringify","isNull","isObject","deprecate","msg","noDeprecation","warned","deprecated","throwDeprecation","traceDeprecation","trace","error","debugs","debugEnviron","debuglog","set","isUndefined","env","NODE_DEBUG","toUpperCase","RegExp","pid","opts","ctx","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styles","styleType","style","arrayToHash","array","hash","val","idx","recurseTimes","isFunction","ret","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","indexOf","formatError","isRegExp","call","isDate","braces","toUTCString","output","formatArray","map","formatProperty","pop","reduceToSingleString","simple","isNumber","l","hasOwnProperty","match","desc","split","line","substr","prev","cur","ar","isNullOrUndefined","isSymbol","re","objectToString","isPrimitive","pad","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","origin","add","kCustomPromisifiedSymbol","Symbol","promisify","original","promiseResolve","promiseReject","promise","Promise","resolve","reject","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackifyOnRejected","reason","cb","newReason","callbackify","callbackified","maybeCb","nextTick","rej","TextEncoder_1","TextEncoder","TextDecoder_1","TextDecoder","lib","TextEncoder$1","TextDecoder$1","textDecoder","decodeText","textEncoder","encodeText","text","concat","arrs","arr","util$1","encodeText$1","Base","code","factory","alphabet","codeBuf","codec","char","base$1","bitsPerChar","codes","end","bits","written","SyntaxError","data","rfc4648","rfc4648_1","rfc4648$1","decodeText$1","encodeText$2","identity","constants","names","tupple","constants_1","src$1","multibase","nameOrCode","encoding","validEncode","enc","prefix","includes","toLowerCase","substring","isEncoded","encodingFromData","encode_1","encode$1","MSB","REST","MSBALL","INT","num","MAX_SAFE_INTEGER","RangeError","oldOffset","decode$1","read","MSB$1","REST$1","res","shift","counter","b","N1","N2","N3","N4","N5","N6","N7","N8","N9","varint","encodingLength","equals","Variant","ThreadID","fromRandom","variant","Raw","V1","fromString","v","fromBytes","id","getEncoding","isDefined","toBytes","decoder"],"mappings":"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","sourcesContent":["var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getAugmentedNamespace(n) {\n\tif (n.__esModule) return n;\n\tvar a = Object.defineProperty({}, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nfunction createCommonjsModule(fn) {\n  var module = { exports: {} };\n\treturn fn(module, module.exports), module.exports;\n}\n\nlet node8 = false;\n\nif ('process' in commonjsGlobal) {\n  node8 = /^v8\\./.test(commonjsGlobal.process.version);\n}\n\nvar indexCrypto = function init (window) {\n  function execGlobal (name, value) {\n    return window[name](value)\n  }\n  const crypto = execGlobal('require', 'crypto');\n\n  function randomFillUint32 (input, bytes) {\n    const len = input.length;\n    for (let i = 0, o = 0; i < len; i++) {\n      input[i] = (\n        (bytes[o++] << 24) |\n        (bytes[o++] << 16) |\n        (bytes[o++] << 8) |\n        bytes[o++]\n      );\n    }\n    return input\n  }\n\n  function randomFillInt32 (input, bytes) {\n    const len = input.length;\n    for (let i = 0, o = 0; i < len; i++) {\n      input[i] = (\n        (bytes[o++] << 24) |\n        (bytes[o++] << 16) |\n        (bytes[o++] << 8) |\n        bytes[o++]\n      ) - 0x80000000;\n    }\n    return input\n  }\n\n  function randomFillUint16 (input, bytes) {\n    const len = input.length;\n    for (let i = 0, o = 0; i < len; i++) {\n      input[i] = (bytes[o++] << 8) | bytes[o++];\n    }\n    return input\n  }\n\n  function randomFillInt16 (input, bytes) {\n    const len = input.length;\n    for (let i = 0, o = 0; i < len; i++) {\n      input[i] = ((bytes[o++] << 8) | bytes[o++]) - 0x8000;\n    }\n    return input\n  }\n\n  function randomFillUint8 (input, bytes) {\n    const len = input.length;\n    for (let i = 0; i < len; i++) {\n      input[i] = bytes[i];\n    }\n    return input\n  }\n\n  function randomFillInt8 (input, bytes) {\n    const len = input.length;\n    for (let i = 0; i < len; i++) {\n      input[i] = bytes[i] - 0x80;\n    }\n    return input\n  }\n\n  if (node8) {\n    return function randomFillNode8 (input) {\n      if (input instanceof Uint8Array) {\n        return crypto.randomFillSync(input)\n      }\n      const bytes = crypto.randomBytes(input.byteLength);\n      if (input instanceof Uint32Array) {\n        return randomFillUint32(input, bytes)\n      }\n      if (input instanceof Uint16Array) {\n        return randomFillUint16(input, bytes)\n      }\n      if (input instanceof Int32Array) {\n        return randomFillInt32(input, bytes)\n      }\n      if (input instanceof Int16Array) {\n        return randomFillInt16(input, bytes)\n      }\n      if (input instanceof Int8Array) {\n        return randomFillInt8(input, bytes)\n      }\n      if (input instanceof Uint8ClampedArray) {\n        return randomFillUint8(input, bytes)\n      }\n      throw new Error('invalid type')\n    }\n  }\n\n  return crypto.randomFillSync || function randomFillClassic (input) {\n    const bytes = crypto.randomBytes(input.byteLength);\n    if (input instanceof Uint8Array) {\n      return randomFillUint8(input, bytes)\n    }\n    if (input instanceof Uint32Array) {\n      return randomFillUint32(input, bytes)\n    }\n    if (input instanceof Uint16Array) {\n      return randomFillUint16(input, bytes)\n    }\n    if (input instanceof Int32Array) {\n      return randomFillInt32(input, bytes)\n    }\n    if (input instanceof Int16Array) {\n      return randomFillInt16(input, bytes)\n    }\n    if (input instanceof Int8Array) {\n      return randomFillInt8(input, bytes)\n    }\n    if (input instanceof Uint8ClampedArray) {\n      return randomFillUint8(input, bytes)\n    }\n    throw new Error('invalid type')\n  }\n};\n\nvar _nodeResolve_empty = {};\n\nvar _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\t'default': _nodeResolve_empty\n});\n\nvar require$$0 = /*@__PURE__*/getAugmentedNamespace(_nodeResolve_empty$1);\n\n/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nvar seedrandom = createCommonjsModule(function (module) {\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; };\n  prng.quick = function() { return arc4.g(4) / 0x100000000; };\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); };\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n}\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ( module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require$$0;\n  } catch (ex) {}\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : commonjsGlobal,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n});\n\nfunction strs2ab (strs) {\n  // Adapted from https://stackoverflow.com/posts/11058858\n  const len = strs.reduce(function (total, str) {\n    return total + (str.length * 2)\n  }, 0);\n  const buf = new ArrayBuffer(len); // 2 bytes for each char\n  const bufView = new Uint16Array(buf);\n  let offset = 0;\n  strs.forEach(function (str) {\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[offset + i] = str.charCodeAt(i);\n    }\n    offset += str.length;\n  });\n  return bufView\n}\n\nvar indexSeedrandom = function init (window) {\n  const seedrandom$1 = seedrandom;\n  function execGlobal (name, value) {\n    return window[name](value)\n  }\n\n  let SyncRandomBytes;\n  let seed;\n  try {\n    SyncRandomBytes = execGlobal('require', 'react-native').NativeModules.SyncRandomBytes;\n    if (SyncRandomBytes) {\n      seed = SyncRandomBytes.seed;\n    }\n  } catch (_) {}\n\n  if (!seed && window && 'Expo' in window) {\n    seed = strs2ab([\n      window.Expo.Constants.installationId,\n      window.Expo.Constants.sessionId,\n      'performance' in window ? window.performance.now().toString(32) : (new Date()).toISOString(),\n      Math.random().toString(32)\n    ]);\n  }\n\n  let prng = seedrandom$1(seed);\n  let early = false;\n\n  if (!seed && SyncRandomBytes) {\n    early = true;\n    SyncRandomBytes.randomBytes()\n      .then(seed => {\n        early = false;\n        prng = seedrandom$1(seed);\n      })\n      .catch(function (err) {\n        early = false;\n        console.log(`WARNING: can not collect seed data: ${err.message}`);\n      });\n  }\n\n  function randomFillUint32 (input) {\n    const len = input.length;\n    if (len > 16384) { // 65536 by 4\n      throw new Error('QuotaExceeded')\n    }\n    for (let i = len - 1; i >= 0; i--) {\n      input[i] = prng.int32();\n    }\n    return input\n  }\n\n  function randomFillInt32 (input) {\n    const len = input.length;\n    if (len > 16384) { // 65536 by 4\n      throw new Error('QuotaExceeded')\n    }\n    for (let i = len - 1; i >= 0; i--) {\n      input[i] = prng.int32() - 0x80000000;\n    }\n    return input\n  }\n\n  function randomFillUint8 (input) {\n    if (input.length > 65536) {\n      throw new Error('QuotaExceeded')\n    }\n    const count = (input.length * 0.25 + 1) | 0;\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32();\n      input[n++] = value & 0xff;\n      input[n++] = (value >> 8) & 0xff;\n      input[n++] = (value >> 16) & 0xff;\n      input[n++] = (value >> 24) & 0xff;\n    }\n    return input\n  }\n\n  function randomFillInt8 (input) {\n    if (input.length > 65536) {\n      throw new Error('QuotaExceeded')\n    }\n    const count = (input.length * 0.25 + 1) | 0;\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32();\n      input[n++] = (value & 0xff) - 0x80;\n      input[n++] = ((value >> 8) & 0xff) - 0x80;\n      input[n++] = ((value >> 16) & 0xff) - 0x80;\n      input[n++] = ((value >> 24) & 0xff) - 0x80;\n    }\n    return input\n  }\n\n  function randomFillUint16 (input) {\n    if (input.length > 32767) {\n      throw new Error('QuotaExceeded')\n    }\n    const count = (input.length * 0.5 + 1) | 0;\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32();\n      input[n++] = value & 0xffff;\n      input[n++] = (value >> 16) & 0xffff;\n    }\n    return input\n  }\n\n  function randomFillInt16 (input) {\n    if (input.length > 32767) {\n      throw new Error('QuotaExceeded')\n    }\n    const count = (input.length * 0.5 + 1) | 0;\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32();\n      input[n++] = (value & 0xffff) - 0x8000;\n      input[n++] = ((value >> 16) & 0xffff) - 0x8000;\n    }\n    return input\n  }\n\n  return function getSeedRandomValues (input) {\n    if (early) {\n      early = false;\n      console.log('WARNING: random data is requested before the seed is done');\n    }\n    if (input === null || input === undefined) {\n      throw new Error('invalid type')\n    }\n    if (input instanceof Uint8Array) {\n      return randomFillUint8(input)\n    }\n    if (input instanceof Uint32Array) {\n      return randomFillUint32(input)\n    }\n    if (input instanceof Uint16Array) {\n      return randomFillUint16(input)\n    }\n    if (input instanceof Int32Array) {\n      return randomFillInt32(input)\n    }\n    if (input instanceof Int16Array) {\n      return randomFillInt16(input)\n    }\n    if (input instanceof Int8Array) {\n      return randomFillInt8(input)\n    }\n    if (input instanceof Uint8ClampedArray) {\n      return randomFillUint8(input)\n    }\n    throw new Error('invalid type')\n  }\n};\n\nvar syncRandombytes = createCommonjsModule(function (module) {\nmodule.exports = (function (window) {\n  if (window && window.crypto && window.crypto.getRandomValues) {\n    return window.crypto.getRandomValues.bind(window.crypto)\n  }\n  try {\n    return indexCrypto(window)\n  } catch (_) {\n    return indexSeedrandom(window)\n  }\n})(typeof window === 'object' ? window : module);\n});\n\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar isBufferBrowser = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\n});\n\nvar util = createCommonjsModule(function (module, exports) {\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = isBufferBrowser;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = inherits_browser;\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n};\n\nexports.promisify.custom = kCustomPromisifiedSymbol;\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret); },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb); });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n});\n\nvar TextEncoder_1 =\n  typeof TextEncoder !== \"undefined\" ? TextEncoder : util.TextEncoder;\n\nvar TextDecoder_1 =\n  typeof TextDecoder !== \"undefined\" ? TextDecoder : util.TextDecoder;\n\nvar lib = {\n\tTextEncoder: TextEncoder_1,\n\tTextDecoder: TextDecoder_1\n};\n\n// @ts-ignore\nconst { TextEncoder: TextEncoder$1, TextDecoder: TextDecoder$1 } = lib;\n\nconst textDecoder = new TextDecoder$1();\n/**\n * @param {ArrayBufferView|ArrayBuffer} bytes\n * @returns {string}\n */\nconst decodeText = (bytes) => textDecoder.decode(bytes);\n\nconst textEncoder = new TextEncoder$1();\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nconst encodeText = (text) => textEncoder.encode(text);\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Arrays\n *\n * @param {Array<ArrayLike<number>>} arrs\n * @param {number} length\n * @returns {Uint8Array}\n */\nfunction concat (arrs, length) {\n  const output = new Uint8Array(length);\n  let offset = 0;\n\n  for (const arr of arrs) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n\n  return output\n}\n\nvar util$1 = { decodeText, encodeText, concat };\n\nconst { encodeText: encodeText$1 } = util$1;\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n/**\n * Class to encode/decode in the supported Bases\n *\n */\nclass Base {\n  /**\n   * @param {BaseName} name\n   * @param {BaseCode} code\n   * @param {CodecFactory} factory\n   * @param {string} alphabet\n   */\n  constructor (name, code, factory, alphabet) {\n    this.name = name;\n    this.code = code;\n    this.codeBuf = encodeText$1(this.code);\n    this.alphabet = alphabet;\n    this.codec = factory(alphabet);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   * @returns {string}\n   */\n  encode (buf) {\n    return this.codec.encode(buf)\n  }\n\n  /**\n   * @param {string} string\n   * @returns {Uint8Array}\n   */\n  decode (string) {\n    for (const char of string) {\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\n        throw new Error(`invalid character '${char}' in '${string}'`)\n      }\n    }\n    return this.codec.decode(string)\n  }\n}\n\nvar base$1 = Base;\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n\n  // Count the padding bytes:\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n\n  // Parse the data:\n  let bits = 0; // Number of bits currently in the buffer\n  let buffer = 0; // Bits waiting to be written out, MSB first\n  let written = 0; // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[i])\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value;\n    bits += bitsPerChar;\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 0xff & (buffer >> bits);\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n};\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n\n  let bits = 0; // Number of bits currently in the buffer\n  let buffer = 0; // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i];\n    bits += 8;\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & (buffer >> bits)];\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '=';\n    }\n  }\n\n  return out\n};\n\n/**\n * RFC4648 Factory\n *\n * @param {number} bitsPerChar\n * @returns {CodecFactory}\n */\nconst rfc4648 = (bitsPerChar) => (alphabet) => {\n  return {\n    /**\n     * @param {Uint8Array} input\n     * @returns {string}\n     */\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    /**\n     * @param {string} input\n     * @returns {Uint8Array}\n     */\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar)\n    }\n  }\n};\n\nvar rfc4648_1 = { rfc4648 };\n\nconst { rfc4648: rfc4648$1 } = rfc4648_1;\nconst { decodeText: decodeText$1, encodeText: encodeText$2 } = util$1;\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import('./types').Codec} Codec */\n/** @typedef {import('./types').BaseName} BaseName */\n/** @typedef {import('./types').BaseCode} BaseCode */\n\n/** @type {CodecFactory} */\nconst identity = () => {\n  return {\n    encode: decodeText$1,\n    decode: encodeText$2\n  }\n};\n\n/**\n *\n * name, code, implementation, alphabet\n *\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\n */\nconst constants = [\n  ['identity', '\\x00', identity, ''],\n  ['base2', '0', rfc4648$1(1), '01'],\n  ['base8', '7', rfc4648$1(3), '01234567'],\n  ['base10', '9', src, '0123456789'],\n  ['base16', 'f', rfc4648$1(4), '0123456789abcdef'],\n  ['base16upper', 'F', rfc4648$1(4), '0123456789ABCDEF'],\n  ['base32hex', 'v', rfc4648$1(5), '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexupper', 'V', rfc4648$1(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'],\n  ['base32hexpad', 't', rfc4648$1(5), '0123456789abcdefghijklmnopqrstuv='],\n  ['base32hexpadupper', 'T', rfc4648$1(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='],\n  ['base32', 'b', rfc4648$1(5), 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32upper', 'B', rfc4648$1(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'],\n  ['base32pad', 'c', rfc4648$1(5), 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32padupper', 'C', rfc4648$1(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='],\n  ['base32z', 'h', rfc4648$1(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base36', 'k', src, '0123456789abcdefghijklmnopqrstuvwxyz'],\n  ['base36upper', 'K', src, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\n  ['base58btc', 'z', src, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base58flickr', 'Z', src, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base64', 'm', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n];\n\n/** @type {Record<BaseName,Base>} */\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new base$1(tupple[0], tupple[1], tupple[2], tupple[3]);\n  return prev\n}, /** @type {Record<BaseName,Base>} */({}));\n\n/** @type {Record<BaseCode,Base>} */\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]];\n  return prev\n}, /** @type {Record<BaseCode,Base>} */({}));\n\nvar constants_1 = {\n  names,\n  codes\n};\n\n/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n *\n */\n\nvar src$1 = createCommonjsModule(function (module, exports) {\n\n\nconst { encodeText, decodeText, concat } = util$1;\n\n/** @typedef {import('./base')} Base */\n/** @typedef {import(\"./types\").BaseNameOrCode} BaseNameOrCode */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n\n/**\n * Create a new Uint8Array with the multibase varint+code.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be prefixed with multibase.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded Uint8Array')\n  }\n  const { name, codeBuf } = encoding(nameOrCode);\n  validEncode(name, buf);\n\n  return concat([codeBuf, buf], codeBuf.length + buf.length)\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be encoded.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction encode (nameOrCode, buf) {\n  const enc = encoding(nameOrCode);\n  const data = encodeText(enc.encode(buf));\n\n  return concat([enc.codeBuf, data], enc.codeBuf.length + data.length)\n}\n\n/**\n * Takes a Uint8Array or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Uint8Array|string} data\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction decode (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data);\n  }\n  const prefix = data[0];\n\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\n    data = data.toLowerCase();\n  }\n  const enc = encoding(/** @type {BaseCode} */(data[0]));\n  return enc.decode(data.substring(1))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Uint8Array|string} data\n * @returns {false | string}\n */\nfunction isEncoded (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data);\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(data) !== '[object String]') {\n    return false\n  }\n\n  try {\n    const enc = encoding(/** @type {BaseCode} */(data[0]));\n    return enc.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * Validate encoded data\n *\n * @param {BaseNameOrCode} name\n * @param {Uint8Array} buf\n * @returns {void}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction validEncode (name, buf) {\n  const enc = encoding(name);\n  enc.decode(decodeText(buf));\n}\n\n/**\n * Get the encoding by name or code\n *\n * @param {BaseNameOrCode} nameOrCode\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encoding (nameOrCode) {\n  if (constants_1.names[/** @type {BaseName} */(nameOrCode)]) {\n    return constants_1.names[/** @type {BaseName} */(nameOrCode)]\n  } else if (constants_1.codes[/** @type {BaseCode} */(nameOrCode)]) {\n    return constants_1.codes[/** @type {BaseCode} */(nameOrCode)]\n  } else {\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\n  }\n}\n\n/**\n * Get encoding from data\n *\n * @param {string|Uint8Array} data\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encodingFromData (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data);\n  }\n\n  return encoding(/** @type {BaseCode} */(data[0]))\n}\n\nexports = module.exports = multibase;\nexports.encode = encode;\nexports.decode = decode;\nexports.isEncoded = isEncoded;\nexports.encoding = encoding;\nexports.encodingFromData = encodingFromData;\nexports.names = Object.freeze(constants_1.names);\nexports.codes = Object.freeze(constants_1.codes);\n});\n\nvar encode_1 = encode$1;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode$1(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode$1.bytes = 0;\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode$1.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode$1 = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode$1\n  , encodingLength: length\n};\n\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n * @see {@link https://github.com/achingbrain/uint8arrays/blob/master/equals.js}\n */\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Variant denotes Thread variant. Currently only two variants are supported.\n * @public\n */\nvar Variant;\n(function (Variant) {\n    Variant[Variant[\"Raw\"] = 85] = \"Raw\";\n    Variant[Variant[\"AccessControlled\"] = 112] = \"AccessControlled\";\n})(Variant || (Variant = {}));\n/**\n * ThreadID represents a self-describing Thread identifier.\n *\n * It is formed by a Version, a Variant, and a random number of a given length.\n * @public\n *\n * @example\n * Create a new random ThreadID\n * ```typescript\n * import { ThreadID } from '@textile/threads'\n *\n * const id = ThreadID.fromRandom()\n *\n * console.log(id)\n * ```\n *\n * @example\n * Convert a ThreadID to/from a Base32 string\n * ```typescript\n * import { ThreadID } from '@textile/threads'\n *\n * const id = ThreadID.fromRandom()\n * const str = id.toString()\n * const restored = ThreadID.fromString(str)\n * ```\n */\nclass ThreadID {\n    constructor(buf) {\n        this.buf = buf;\n    }\n    /**\n     * fromRandom creates a new random ID object.\n     * @param variant The Thread variant to use. @see Variant\n     * @param size The size of the random component to use. Defaults to 32 bytes.\n     */\n    static fromRandom(variant = ThreadID.Variant.Raw, size = 32) {\n        // two 8 bytes (max) numbers plus random bytes\n        const bytes = Uint8Array.from([\n            ...varint.encode(ThreadID.V1),\n            ...varint.encode(variant),\n            ...syncRandombytes(new Uint8Array(size)),\n        ]);\n        return new ThreadID(bytes);\n    }\n    /**\n     * fromString parses an ID-encoded string and returns an ID object.\n     * For IDV1, an ID-encoded string is primarily a multibase string:\n     *    <multibase-type-code><base-encoded-string>\n     * The base-encoded string represents a:\n     *    <version><variant><random-number>\n     * @param v The input encoded Thread ID.\n     */\n    static fromString(v) {\n        if (v.length < 2) {\n            throw new Error('id too short');\n        }\n        const data = src$1.decode(v);\n        return ThreadID.fromBytes(data);\n    }\n    /**\n     * fromBytes takes an ID data slice, parses it and returns an ID.\n     * For IDV1, the data bytes are arranged as:\n     *    <version><variant><random-number>\n     * Please use fromEncoded when parsing a regular ID string, as fromBytes does not\n     * expect multibase-encoded data. fromBytes accepts the output of ID.bytes().\n     * @param data The input Thread ID bytes.\n     */\n    static fromBytes(data) {\n        let copy = new Uint8Array(data);\n        const version = varint.decode(copy);\n        if (version != 1) {\n            throw new Error(`expected 1 as the id version number, got: ${version}.`);\n        }\n        copy = copy.slice(varint.decode.bytes, copy.length);\n        const variant = varint.decode(copy);\n        if (!(variant in ThreadID.Variant)) {\n            throw new Error('invalid variant.');\n        }\n        const id = copy.slice(varint.decode.bytes, copy.length);\n        if (id.length < 16) {\n            throw new Error('random component too small.');\n        }\n        return new ThreadID(data);\n    }\n    /**\n     * getEncoding returns the multibase encoding for a multibase encoded string.\n     * Returns the name of the encoding if it is encoded, and throws an error otherwise.\n     * @param v The Thread ID to check.\n     */\n    static getEncoding(v) {\n        if (v.length < 2) {\n            throw new Error('Too Short');\n        }\n        const encoding = src$1.isEncoded(v);\n        // check encoding is valid\n        if (encoding === false) {\n            throw new Error('Invalid Encoding');\n        }\n        return encoding;\n    }\n    /**\n     * isDefined returns true if an ID is defined.\n     * Calling any other methods on an undefined ID will result in undefined behavior.\n     */\n    isDefined() {\n        return this.buf.length > 0;\n    }\n    /**\n     * toBytes returns the byte representation of an ID.\n     * The output of bytes can be parsed back into an ID with fromBytes.\n     */\n    toBytes() {\n        return this.buf; // These should not be mutated directly!\n    }\n    /**\n     * equals checks that two IDs are the same.\n     * @param o The other Thread ID.\n     */\n    equals(o) {\n        return equals(this.buf, o.buf);\n    }\n    /**\n     * version returns the ID version.\n     */\n    version() {\n        return varint.decode(this.buf);\n    }\n    /**\n     * variant returns the variant of an ID.\n     */\n    variant() {\n        let copy = new Uint8Array(this.buf);\n        varint.decode(copy);\n        copy = copy.slice(varint.decode.bytes);\n        return varint.decode(copy);\n    }\n    /**\n     * toString returns the (multibase encoded) string representation of an ID.\n     * @param base Name of the base to use for encoding. Defaults to 'base32'.\n     */\n    toString(base = 'base32') {\n        const decoder = new TextDecoder();\n        switch (this.version()) {\n            case ThreadID.V1:\n                return decoder.decode(src$1.encode(base, this.buf));\n            default:\n                throw new Error('unknown ID version.');\n        }\n    }\n}\n/**\n * Versions. Currently only V1 is supported.\n */\nThreadID.V1 = 0x01;\nThreadID.Variant = Variant;\n\nexport default ThreadID;\nexport { ThreadID, Variant };\n"]},"metadata":{},"sourceType":"module"}