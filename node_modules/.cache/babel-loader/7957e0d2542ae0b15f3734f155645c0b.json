{"ast":null,"code":"'use strict'; // {signature} {pubKey}\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst bscript = require('../../script');\n\nfunction isCompressedCanonicalPubKey(pubKey) {\n  return bscript.isCanonicalPubKey(pubKey) && pubKey.length === 33;\n}\n\nfunction check(script) {\n  const chunks = bscript.decompile(script);\n  return chunks.length === 2 && bscript.isCanonicalScriptSignature(chunks[0]) && isCompressedCanonicalPubKey(chunks[1]);\n}\n\nexports.check = check;\n\ncheck.toJSON = () => {\n  return 'witnessPubKeyHash input';\n};","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/node_modules/bitcoinjs-lib/src/templates/witnesspubkeyhash/input.js"],"names":["Object","defineProperty","exports","value","bscript","require","isCompressedCanonicalPubKey","pubKey","isCanonicalPubKey","length","check","script","chunks","decompile","isCanonicalScriptSignature","toJSON"],"mappings":"AAAA,a,CACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,SAASC,2BAAT,CAAqCC,MAArC,EAA6C;AAC3C,SAAOH,OAAO,CAACI,iBAAR,CAA0BD,MAA1B,KAAqCA,MAAM,CAACE,MAAP,KAAkB,EAA9D;AACD;;AACD,SAASC,KAAT,CAAeC,MAAf,EAAuB;AACrB,QAAMC,MAAM,GAAGR,OAAO,CAACS,SAAR,CAAkBF,MAAlB,CAAf;AACA,SACEC,MAAM,CAACH,MAAP,KAAkB,CAAlB,IACAL,OAAO,CAACU,0BAAR,CAAmCF,MAAM,CAAC,CAAD,CAAzC,CADA,IAEAN,2BAA2B,CAACM,MAAM,CAAC,CAAD,CAAP,CAH7B;AAKD;;AACDV,OAAO,CAACQ,KAAR,GAAgBA,KAAhB;;AACAA,KAAK,CAACK,MAAN,GAAe,MAAM;AACnB,SAAO,yBAAP;AACD,CAFD","sourcesContent":["'use strict';\n// {signature} {pubKey}\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nfunction isCompressedCanonicalPubKey(pubKey) {\n  return bscript.isCanonicalPubKey(pubKey) && pubKey.length === 33;\n}\nfunction check(script) {\n  const chunks = bscript.decompile(script);\n  return (\n    chunks.length === 2 &&\n    bscript.isCanonicalScriptSignature(chunks[0]) &&\n    isCompressedCanonicalPubKey(chunks[1])\n  );\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'witnessPubKeyHash input';\n};\n"]},"metadata":{},"sourceType":"script"}