{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/components/FileZone/FileZone.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '32px 32px',\n    padding: '2px 4px',\n    paddingRight: '16px',\n    width: 600,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function FileZone() {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(value),\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          edge: \"start\",\n          checked: checked.indexOf(value) !== -1,\n          tabIndex: -1,\n          disableRipple: true,\n          inputProps: {\n            'aria-labelledby': 'all_check'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        id: 'checkbox-list-label-name',\n        primary: `Name`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        id: 'checkbox-list-label-modified',\n        primary: `Last Modified`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        id: 'checkbox-list-label-size',\n        primary: `Size`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"comments\",\n          children: /*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, value, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), [0, 1, 2, 3].map(value => {\n      const labelId = `checkbox-list-label-${value}`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        role: undefined,\n        dense: true,\n        button: true,\n        onClick: handleToggle(value),\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            edge: \"start\",\n            checked: checked.indexOf(value) !== -1,\n            tabIndex: -1,\n            disableRipple: true,\n            inputProps: {\n              'aria-labelledby': labelId\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          id: labelId,\n          primary: `Line item ${value + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"comments\",\n            children: /*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileZone, \"0o+c9wVIlrEVOlS08q2btRlaiSQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = FileZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileZone\");","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/components/FileZone/FileZone.js"],"names":["React","makeStyles","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","useStyles","theme","root","margin","padding","paddingRight","width","backgroundColor","palette","background","paper","FileZone","classes","checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","undefined","map","labelId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin:'32px 32px',\n        padding: '2px 4px',\n        paddingRight:'16px',\n        width:600,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function FileZone() {\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState([0]);\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    return (\n        <List className={classes.root}>\n            <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\n                <ListItemIcon>\n                    <Checkbox\n                        edge=\"start\"\n                        checked={checked.indexOf(value) !== -1}\n                        tabIndex={-1}\n                        disableRipple\n                        inputProps={{ 'aria-labelledby': 'all_check' }}\n                    />\n                </ListItemIcon>\n                <ListItemText id={'checkbox-list-label-name'} primary={`Name`} />\n                <ListItemText id={'checkbox-list-label-modified'} primary={`Last Modified`} />\n                <ListItemText id={'checkbox-list-label-size'} primary={`Size`} />\n\n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"comments\">\n                        <CommentIcon />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n\n            {[0, 1, 2, 3].map((value) => {\n                const labelId = `checkbox-list-label-${value}`;\n\n                return (\n                    <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={checked.indexOf(value) !== -1}\n                                tabIndex={-1}\n                                disableRipple\n                                inputProps={{ 'aria-labelledby': labelId }}\n                            />\n                        </ListItemIcon>\n                        <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n                        <ListItemSecondaryAction>\n                            <IconButton edge=\"end\" aria-label=\"comments\">\n                                <CommentIcon />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n}"]},"metadata":{},"sourceType":"module"}