{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { onDropToUpload } from \"../../common/upload\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport './Dashboard.css';\nimport { createSeedByMnemonic, getLocalUserIdentity, saveLocalUserIdentity, userIdentityFromSeed } from \"../../common/user\";\nimport { getBucketKey } from \"../../common/bucket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props.location.query != null) {\n      this.state = {\n        bucketKey: props.location.query.bucketKey,\n        buckets: props.location.query.buckets,\n        links: props.location.query.links\n      };\n    }\n  }\n\n  async componentWillMount() {\n    if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\n      const userIdentity = getLocalUserIdentity();\n\n      if (userIdentity != null) {\n        const seed = createSeedByMnemonic(this.state.userIdentity);\n        const userIdentity = userIdentityFromSeed(seed);\n        saveLocalUserIdentity(userIdentity.toString());\n        const {\n          bucketKey,\n          buckets\n        } = await getBucketKey(userIdentity);\n        this.setState({\n          bucketKey: bucketKey,\n          buckets: buckets\n        });\n      } else {\n        this.props.history.push({\n          pathname: \"/mnemonic/page\"\n        });\n      }\n    }\n\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n  }\n\n  render() {\n    if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"paper\",\n      children: /*#__PURE__*/_jsxDEV(MyDropZone, {\n        bucketKey: this.state.bucketKey,\n        buckets: this.state.buckets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction MyDropZone(props) {\n  _s();\n\n  const bucketKey = props.bucketKey;\n  const buckets = props.buckets;\n  const onDrop = useCallback(acceptedFiles => {\n    onDropToUpload(acceptedFiles, buckets, bucketKey);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"\\u4E0A\\u4F20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyDropZone, \"G+iBbt33sf7OqOHflSjhXFbwx/Q=\", false, function () {\n  return [useDropzone];\n});\n\n_c = MyDropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyDropZone\");","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js"],"names":["React","useCallback","useDropzone","onDropToUpload","Button","Paper","createSeedByMnemonic","getLocalUserIdentity","saveLocalUserIdentity","userIdentityFromSeed","getBucketKey","DashboardPage","Component","constructor","props","location","query","state","bucketKey","buckets","links","componentWillMount","userIdentity","seed","toString","setState","history","push","pathname","loading","document","getElementById","style","display","render","MyDropZone","onDrop","acceptedFiles","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {useCallback} from \"react\";\nimport {useDropzone} from \"react-dropzone\";\nimport {onDropToUpload} from \"../../common/upload\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport './Dashboard.css'\nimport {\n    createSeedByMnemonic,\n    getLocalUserIdentity,\n    saveLocalUserIdentity,\n    userIdentityFromSeed\n} from \"../../common/user\";\nimport {getBucketKey} from \"../../common/bucket\";\n\nexport class DashboardPage extends React.Component {\n    constructor(props) {\n        super(props);\n        if(props.location.query!=null){\n            this.state = {\n                bucketKey: props.location.query.bucketKey,\n                buckets: props.location.query.buckets,\n                links: props.location.query.links,\n            }\n        }\n    }\n\n    async componentWillMount() {\n        if (this.state==null || this.state.bucketKey == null || this.state.buckets == null) {\n            const userIdentity = getLocalUserIdentity();\n            if (userIdentity != null) {\n                const seed = createSeedByMnemonic(this.state.userIdentity);\n                const userIdentity = userIdentityFromSeed(seed);\n                saveLocalUserIdentity(userIdentity.toString());\n                const {bucketKey, buckets} = await getBucketKey(userIdentity);\n                this.setState({\n                    bucketKey:bucketKey,\n                    buckets:buckets,\n                })\n            } else {\n                this.props.history.push({pathname: \"/mnemonic/page\"});\n            }\n        }\n        let loading = document.getElementById('loader');\n        loading.style.display = 'none';\n    }\n\n    render() {\n        if(this.state==null || this.state.buckets == null || this.state.bucketKey ==null){\n            return <div/>\n        }\n        return (\n            <Paper className='paper'>\n            <MyDropZone bucketKey={this.state.bucketKey} buckets={this.state.buckets}/>\n            </Paper>\n        );\n    }\n}\n\nfunction MyDropZone(props) {\n     const bucketKey = props.bucketKey;\n     const buckets = props.buckets;\n\n    const onDrop = useCallback(acceptedFiles => {\n        onDropToUpload(acceptedFiles,buckets,bucketKey);\n    }, [])\n    const {getRootProps, getInputProps} = useDropzone({onDrop})\n\n    return (\n        <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            <div>\n                <Button variant=\"contained\" color={\"secondary\"}>\n                    上传\n                </Button>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}