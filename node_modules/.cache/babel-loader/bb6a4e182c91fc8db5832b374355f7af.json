{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/apiece/src/components/CustomizedDropZone/CustomizedDropZone.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Button from \"@material-ui/core/Button\";\nimport Dropzone from \"react-dropzone\";\nimport { CreateNewFolder, Delete, ExpandMore } from \"@material-ui/icons\";\nimport Box from \"@material-ui/core/Box\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    marginLeft: \"32px\"\n  },\n  selected: {\n    width: \"100 %\",\n    height: \"100 %\",\n    backgroundColor: \"#fff\",\n    color: \"black\",\n    appearance: \"none\",\n    border: 0,\n    display: \"block\",\n    position: \"relative\",\n    mozAppearance: \"none\",\n    webkitAppearance: \"none\",\n    boxShadow: \"none\",\n    outline: \"none\",\n    \"&:hover,&:focus\": {\n      color: \"black\",\n      mozAppearance: \"none\",\n      webkitAppearance: \"none\",\n      outline: \"none\",\n      boxShadow: \"none\",\n      border: 0\n    }\n  },\n  box: {\n    width: 16\n  },\n  button: {\n    textTransform: 'none',\n    zIndex: 0\n  },\n  actionbutton: {\n    textTransform: 'none'\n  },\n  dropzone: {}\n}));\nexport default function CustomizedDropZone(props) {\n  _s();\n\n  const classes = useStyles();\n  const checked = props.checked;\n  const deleteBucket = props.deleteBucket;\n  const deleteFiles = props.deleteFiles;\n  const selectAll = checked == null ? 0 : checked.length > 0;\n  let menus = [];\n\n  const handleDelete = () => {\n    setAnchorEl(null);\n    deleteFiles(checked);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  if (checked != null) {\n    if (checked.length === 1) {\n      // menus.push( (<MenuItem onClick={handleClose}>{'Rename'}</MenuItem>))\n      menus.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDelete,\n        children: 'Delete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 26\n      }, this));\n    } else {\n      menus.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDelete,\n        children: 'Delete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 26\n      }, this));\n    }\n  }\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomizedDropZone, \"vXA32r6EXukv831dcFOknrOnVCE=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomizedDropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedDropZone\");","map":{"version":3,"sources":["/Users/wiki/code/apiece/src/components/CustomizedDropZone/CustomizedDropZone.js"],"names":["React","makeStyles","CloudUploadIcon","Button","Dropzone","CreateNewFolder","Delete","ExpandMore","Box","Menu","MenuItem","useStyles","theme","root","display","marginLeft","selected","width","height","backgroundColor","color","appearance","border","position","mozAppearance","webkitAppearance","boxShadow","outline","box","button","textTransform","zIndex","actionbutton","dropzone","CustomizedDropZone","props","classes","checked","deleteBucket","deleteFiles","selectAll","length","menus","handleDelete","setAnchorEl","handleClose","push","anchorEl","useState","handleClick","event","currentTarget"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\nimport Button from \"@material-ui/core/Button\";\nimport Dropzone from \"react-dropzone\";\nimport {CreateNewFolder, Delete, ExpandMore} from \"@material-ui/icons\";\nimport Box from \"@material-ui/core/Box\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        marginLeft:\"32px\"\n    },\n    selected: {\n        width: \"100 %\",\n        height: \"100 %\",\n        backgroundColor: \"#fff\",\n        color: \"black\",\n        appearance: \"none\",\n        border: 0,\n        display: \"block\",\n        position: \"relative\",\n        mozAppearance:\"none\",\n        webkitAppearance:\"none\",\n        boxShadow:\"none\",\n        outline:\"none\",\n        \"&:hover,&:focus\": {\n            color: \"black\",\n            mozAppearance:\"none\",\n            webkitAppearance:\"none\",\n            outline:\"none\",\n            boxShadow:\"none\",\n            border: 0,\n        },\n    },\n    box:{\n      width:16\n    },\n    button:{\n        textTransform:'none',\n        zIndex:0,\n    },\n    actionbutton:{\n        textTransform:'none',\n    },\n    dropzone:{\n    }\n}));\n\nexport default function CustomizedDropZone(props) {\n    const classes = useStyles();\n    const checked = props.checked;\n    const deleteBucket = props.deleteBucket;\n    const deleteFiles = props.deleteFiles;\n\n    const selectAll= checked==null?0:checked.length>0;\n    let menus = [];\n\n    const handleDelete = () => {\n        setAnchorEl(null);\n        deleteFiles(checked);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    if(checked!=null){\n        if(checked.length===1){\n            // menus.push( (<MenuItem onClick={handleClose}>{'Rename'}</MenuItem>))\n            menus.push( (<MenuItem onClick={handleDelete}>{'Delete'}</MenuItem>))\n        }else{\n            menus.push( (<MenuItem onClick={handleDelete}>{'Delete'}</MenuItem>))\n        }\n    }\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    return (\n        <div className={classes.root}>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}