{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/views/mnemonic/ImportMnemonic.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../assets/jss/material-kit-react/views/landingPage.js\";\nimport Parallax from \"../../components/Parallax/Parallax\";\nimport GridContainer from \"../../components/Grid/GridContainer\";\nimport GridItem from \"../../components/Grid/GridItem\";\nimport Card from \"@material-ui/core/Card\";\nimport { createMnemonic } from \"../../common/user\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\nlet input = \"\";\nexport default function ImportMnemonicPage(props) {\n  _s();\n\n  let loading = document.getElementById('loader');\n  loading.style.display = 'none';\n  const mnemonic = createMnemonic();\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        color: \"transparent\",\n        brand: \"Store Data \\xB7 Reshape Privacy\",\n        fixed: true,\n        changeColorOnScroll: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Parallax, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.container,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              sm: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: classes.title,\n                children: \"Please enter the account mnemonic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Warning: Each word of the account word aid needs to be separated by a space. Do not disclose your account word to others. Once anyone has the mnemonic phrase for the account, they can view the data you uploaded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card, {\n                className: classes.inputCard,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  onChange: inputValueChange,\n                  className: classes.input,\n                  multiline: true,\n                  id: \"outlined-password-input\",\n                  label: \"Enter mnemonic\",\n                  type: \"text\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                className: classes.list,\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  className: classes.listItem,\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: {\n                      pathname: \"/userIdentity\",\n                      query: {\n                        mnemonic: input,\n                        isEnter: true\n                      }\n                    },\n                    className: classes.link,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: classes.navLinkRight,\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      children: \"\\u4E0B\\u4E00\\u6B65\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImportMnemonicPage, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ImportMnemonicPage;\n\nfunction inputValueChange(data) {\n  input = data.target.value;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportMnemonicPage\");","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/views/mnemonic/ImportMnemonic.js"],"names":["React","Header","makeStyles","styles","Parallax","GridContainer","GridItem","Card","createMnemonic","TextField","Link","List","ListItem","Button","useStyles","input","ImportMnemonicPage","props","loading","document","getElementById","style","display","mnemonic","classes","color","container","title","inputCard","inputValueChange","shrink","list","listItem","pathname","query","isEnter","link","navLinkRight","data","target","value"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport styles from \"../../assets/jss/material-kit-react/views/landingPage.js\";\nimport Parallax from \"../../components/Parallax/Parallax\";\nimport GridContainer from \"../../components/Grid/GridContainer\";\nimport GridItem from \"../../components/Grid/GridItem\";\nimport Card from \"@material-ui/core/Card\";\nimport {createMnemonic} from \"../../common/user\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {Link} from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(styles);\nlet input = \"\";\nexport default function ImportMnemonicPage(props) {\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n    const mnemonic = createMnemonic();\n    const classes = useStyles();\n    return (\n        <div>\n            <div>\n                <Header\n                    color=\"transparent\"\n                    brand=\"Store Data · Reshape Privacy\"\n                    fixed\n                    changeColorOnScroll={{\n                        color: \"white\",\n                    }}\n                />\n                <Parallax>\n                    <div className={classes.container}>\n                        <GridContainer>\n                            <GridItem xs={12} sm={12} md={6}>\n                                <h1 className={classes.title}>Please enter the account mnemonic</h1>\n                                <h4>\n                                    Warning: Each word of the account word aid needs to be separated by a space.\n                                    Do not disclose your account word to others. Once anyone has the mnemonic phrase for\n                                    the\n                                    account, they can view the data you uploaded\n                                </h4>\n                                <Card className={classes.inputCard}>\n                                    <TextField\n                                        onChange={inputValueChange}\n                                        className={classes.input}\n                                        multiline\n                                        id=\"outlined-password-input\"\n                                        label=\"Enter mnemonic\"\n                                        type=\"text\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                    />\n                                </Card>\n                                <List className={classes.list}>\n                                    <ListItem className={classes.listItem}>\n                                        <Link to={{pathname: \"/userIdentity\", query: {mnemonic: input,isEnter:true}}}\n                                              className={classes.link}>\n                                            <Button\n                                                className={classes.navLinkRight}\n                                                variant=\"contained\" color={\"secondary\"}>\n                                                下一步\n                                            </Button>\n                                        </Link>\n                                    </ListItem>\n\n                                </List>\n                            </GridItem>\n                        </GridContainer>\n                    </div>\n                </Parallax>\n            </div>\n        </div>\n    );\n}\n\nfunction inputValueChange(data) {\n    input = data.target.value;\n}"]},"metadata":{},"sourceType":"module"}