{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/apiece/src/views/mnemonic/ImportMnemonic.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../assets/jss/material-kit-react/views/landingPage.js\";\nimport Parallax from \"../../components/Parallax/Parallax\";\nimport GridContainer from \"../../components/Grid/GridContainer\";\nimport GridItem from \"../../components/Grid/GridItem\";\nimport Card from \"@material-ui/core/Card\";\nimport { createMnemonic } from \"../../common/user\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState } from \"react\";\nimport Header from \"../../components/comps/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\nexport default function ImportMnemonicPage(props) {\n  _s();\n\n  let loading = document.getElementById('loader');\n  loading.style.display = 'none';\n  const mnemonic = createMnemonic();\n  const classes = useStyles();\n  const [input, setInput] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container relative\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full  px-4 ml-auto mr-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pr-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-white font-semibold text-5xl\",\n                children: \"A space on IPFS for yours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-4 text-lg text-gray-300\",\n                children: \"This is a decentralized storage platform that uses mnemonics to log in. All your data will be stored on the next-generation storage protocol IPFS. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Parallax, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.container,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              sm: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: classes.title,\n                children: \"Please enter the account mnemonic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Warning: Each word of the account word aid needs to be separated by a space. Do not disclose your account word to others. Once anyone has the mnemonic phrase for the account, they can view the data you uploaded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card, {\n                className: classes.inputCard,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  onChange: function (value) {\n                    setInput(value.target.value);\n                  },\n                  className: classes.input,\n                  multiline: true,\n                  id: \"outlined-password-input\",\n                  label: \"Enter mnemonic\",\n                  type: \"text\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                className: classes.list,\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  className: classes.listItem,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: function () {\n                      props.history.replace({\n                        pathname: \"/userIdentity\",\n                        state: {\n                          mnemonic: input,\n                          isEnter: true\n                        }\n                      });\n                    },\n                    className: classes.navLinkRight,\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    children: \"\\u4E0B\\u4E00\\u6B65\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImportMnemonicPage, \"42wsf7phHsW6tn2niEE5xNUw4us=\", false, function () {\n  return [useStyles];\n});\n\n_c = ImportMnemonicPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportMnemonicPage\");","map":{"version":3,"sources":["/Users/wiki/code/apiece/src/views/mnemonic/ImportMnemonic.js"],"names":["React","makeStyles","styles","Parallax","GridContainer","GridItem","Card","createMnemonic","TextField","List","ListItem","Button","useState","Header","useStyles","ImportMnemonicPage","props","loading","document","getElementById","style","display","mnemonic","classes","input","setInput","container","title","inputCard","value","target","shrink","list","listItem","history","replace","pathname","state","isEnter","navLinkRight"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport styles from \"../../assets/jss/material-kit-react/views/landingPage.js\";\nimport Parallax from \"../../components/Parallax/Parallax\";\nimport GridContainer from \"../../components/Grid/GridContainer\";\nimport GridItem from \"../../components/Grid/GridItem\";\nimport Card from \"@material-ui/core/Card\";\nimport {createMnemonic} from \"../../common/user\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Button from \"@material-ui/core/Button\";\nimport {useState} from \"react\";\nimport Header from \"../../components/comps/Header\";\n\nconst useStyles = makeStyles(styles);\nexport default function ImportMnemonicPage(props) {\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n    const mnemonic = createMnemonic();\n    const classes = useStyles();\n    const [input,setInput] = useState();\n    return (\n        <div>\n            <div>\n                <Header/>\n                <div className=\"container relative\">\n                    <div className=\"flex flex-wrap\">\n                        <div className=\"w-full  px-4 ml-auto mr-auto\">\n                            <div className=\"pr-12\">\n                                <h1 className=\"text-white font-semibold text-5xl\">\n                                    A space on IPFS for yours\n                                </h1>\n                                <p className=\"mt-4 text-lg text-gray-300\">\n                                    This is a decentralized storage platform that uses mnemonics to log in. All your\n                                    data will be stored on the next-generation storage protocol IPFS. </p>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <Parallax>\n                    <div className={classes.container}>\n                        <GridContainer>\n                            <GridItem xs={12} sm={12} md={6}>\n                                <h1 className={classes.title}>Please enter the account mnemonic</h1>\n                                <h4>\n                                    Warning: Each word of the account word aid needs to be separated by a space.\n                                    Do not disclose your account word to others. Once anyone has the mnemonic phrase for\n                                    the\n                                    account, they can view the data you uploaded\n                                </h4>\n                                <Card className={classes.inputCard}>\n                                    <TextField\n                                        onChange={function (value) {\n                                            setInput(value.target.value);\n                                        }}\n                                        className={classes.input}\n                                        multiline\n                                        id=\"outlined-password-input\"\n                                        label=\"Enter mnemonic\"\n                                        type=\"text\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                    />\n                                </Card>\n                                <List className={classes.list}>\n                                    <ListItem className={classes.listItem}>\n                                        {/*<Link to={{pathname: \"/userIdentity\", query: {mnemonic: input,isEnter:true}}}*/}\n                                              {/*className={classes.link}>*/}\n                                           {/**/}\n                                        {/*</Link>*/}\n                                        <Button\n                                            onClick={function () {\n                                                props.history.replace({\n                                                    pathname: \"/userIdentity\",\n                                                    state:{\n                                                        mnemonic:input,\n                                                        isEnter: true\n                                                    }\n                                                })\n                                            }}\n                                            className={classes.navLinkRight}\n                                            variant=\"contained\" color={\"secondary\"}>\n                                            下一步\n                                        </Button>\n                                    </ListItem>\n\n                                </List>\n                            </GridItem>\n                        </GridContainer>\n                    </div>\n                </Parallax>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}