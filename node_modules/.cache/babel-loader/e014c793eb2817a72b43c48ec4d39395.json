{"ast":null,"code":"import { Buckets } from '@textile/hub';\nexport async function getBucketKey(userIdentity) {\n  if (!userIdentity) {\n    throw new Error('UserIdentity not set');\n  }\n\n  const buckets = await Buckets.withKeyInfo({\n    key: 'bbf34lt5akjatszwybsu5nfhdru'\n  }, {\n    debug: false\n  }); // Authorize the user and your insecure keys with getToken\n\n  await buckets.getToken(userIdentity);\n  await bucketList(buckets);\n  const buck = await buckets.getOrCreate('private.storage.zone');\n\n  if (!buck.root) {\n    throw new Error('Failed to open bucket');\n  }\n\n  return {\n    buckets: buckets,\n    bucketKey: buck.root.key\n  };\n}\nexport async function bucketLinks(buckets, bucketKey) {\n  const links = await buckets.links(bucketKey);\n  return links;\n}\nexport async function bucketList(buckets) {\n  const bucketRoots = await buckets.list();\n  bucketRoots.forEach(function (value) {});\n}","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/common/bucket.ts"],"names":["Buckets","getBucketKey","userIdentity","Error","buckets","withKeyInfo","key","debug","getToken","bucketList","buck","getOrCreate","root","bucketKey","bucketLinks","links","bucketRoots","list","forEach","value"],"mappings":"AAAA,SAASA,OAAT,QAAiF,cAAjF;AAGA,OAAO,eAAeC,YAAf,CAA4BC,YAA5B,EAAqD;AACxD,MAAI,CAACA,YAAL,EAAmB;AACf,UAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;;AACD,QAAMC,OAAO,GAAG,MAAMJ,OAAO,CAACK,WAAR,CAAoB;AACtCC,IAAAA,GAAG,EAAE;AADiC,GAApB,EAEnB;AACCC,IAAAA,KAAK,EAAE;AADR,GAFmB,CAAtB,CAJwD,CAUxD;;AACA,QAAMH,OAAO,CAACI,QAAR,CAAiBN,YAAjB,CAAN;AACA,QAAMO,UAAU,CAACL,OAAD,CAAhB;AACA,QAAMM,IAAI,GAAG,MAAMN,OAAO,CAACO,WAAR,CAAoB,sBAApB,CAAnB;;AACA,MAAI,CAACD,IAAI,CAACE,IAAV,EAAgB;AACZ,UAAM,IAAIT,KAAJ,CAAU,uBAAV,CAAN;AACH;;AACD,SAAO;AAACC,IAAAA,OAAO,EAAEA,OAAV;AAAmBS,IAAAA,SAAS,EAAEH,IAAI,CAACE,IAAL,CAAUN;AAAxC,GAAP;AACH;AAED,OAAO,eAAeQ,WAAf,CAA2BV,OAA3B,EAA2CS,SAA3C,EAA6D;AAChE,QAAME,KAAK,GAAG,MAAMX,OAAO,CAACW,KAAR,CAAcF,SAAd,CAApB;AACA,SAAOE,KAAP;AACH;AAED,OAAO,eAAeN,UAAf,CAA0BL,OAA1B,EAA2C;AAC9C,QAAMY,WAAW,GAAG,MAAMZ,OAAO,CAACa,IAAR,EAA1B;AACAD,EAAAA,WAAW,CAACE,OAAZ,CAAoB,UAAUC,KAAV,EAAiB,CAEpC,CAFD;AAGH","sourcesContent":["import { Buckets, PushPathResult, KeyInfo, PrivateKey, WithKeyInfoOptions } from '@textile/hub'\nimport {async} from \"q\";\n\nexport async function getBucketKey(userIdentity:PrivateKey) {\n    if (!userIdentity) {\n        throw new Error('UserIdentity not set')\n    }\n    const buckets = await Buckets.withKeyInfo({\n        key: 'bbf34lt5akjatszwybsu5nfhdru'\n    } ,{\n        debug: false\n    });\n\n    // Authorize the user and your insecure keys with getToken\n    await buckets.getToken(userIdentity);\n    await bucketList(buckets);\n    const buck = await buckets.getOrCreate('private.storage.zone')\n    if (!buck.root) {\n        throw new Error('Failed to open bucket')\n    }\n    return {buckets: buckets, bucketKey: buck.root.key};\n}\n\nexport async function bucketLinks(buckets:Buckets,bucketKey:string) {\n    const links = await buckets.links(bucketKey);\n    return links;\n}\n\nexport async function bucketList(buckets:Buckets) {\n    const bucketRoots = await buckets.list();\n    bucketRoots.forEach(function (value) {\n\n    })\n}"]},"metadata":{},"sourceType":"module"}