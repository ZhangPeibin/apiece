{"ast":null,"code":"var _jsxFileName = \"E:\\\\anipfspace\\\\src\\\\views\\\\dashborad\\\\Dashboard.js\";\nimport * as React from \"react\";\nimport './Dashboard.css';\nimport { getLocalUserIdentity } from \"../../common/user\";\nimport { bucketList, deleteBucket, deleteBucketZone, getBucketKey, getBucketKeyByBucketRoot, removeBucketPath, setCurrentBucketZone } from \"../../common/bucket\";\nimport { getFileIndex, storeIndex } from \"../../common/FileIndex\";\nimport CustomizedDropZone from \"../../components/CustomizedDropZone/CustomizedDropZone\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport FileZone from \"../../components/FileZone/FileZone\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport DashboardHeader from \"../../components/comps/DashboardHeader\";\nimport { isFileDocument, isFileImage, isFileOther } from \"../../common/fileutil\";\nimport { isFileVideo } from \"../../common/fileutil\";\nimport Sidebar from \"../../components/Sidebar\";\nimport { Slider } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4)\n  }\n});\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst ALL_FILES = \"ALL FILES\";\nconst IMAGE = \"IMAGE\";\nconst VIDEO = \"VIDEO\";\nconst DOCUMENT = \"DOCUMENT\";\nconst OTHER = \"OTHER\";\n\nclass DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.search = value => {\n      if (value) {\n        const searchResult = this.state.copyIndex.paths.filter(val => val['name'].match(value));\n        this.setState({\n          copyIndex: { ...this.state.index,\n            paths: searchResult,\n            counts: searchResult.length\n          }\n        });\n      } else {\n        this.filterFile(this.state.currentType);\n      }\n    };\n\n    this.filterFile = value => {\n      const fileType = value;\n\n      if (fileType === ALL_FILES) {\n        this.setState({\n          copyIndex: this.state.index\n        });\n      } else if (fileType === IMAGE) {\n        let copyBucketRoots = [];\n        this.state.index.paths.forEach(function (value) {\n          if (isFileImage(value['type'])) {\n            copyBucketRoots.push(value);\n          }\n        });\n        this.setState({\n          copyIndex: { ...this.state.index,\n            paths: copyBucketRoots,\n            counts: copyBucketRoots.length\n          }\n        });\n      } else if (fileType === VIDEO) {\n        let copyBucketRoots = [];\n        this.state.index.paths.forEach(function (value) {\n          if (isFileVideo(value['type'])) {\n            copyBucketRoots.push(value);\n          }\n        });\n        this.setState({\n          copyIndex: { ...this.state.index,\n            paths: copyBucketRoots,\n            counts: copyBucketRoots.length\n          }\n        });\n      } else if (fileType === DOCUMENT) {\n        let copyBucketRoots = [];\n        this.state.index.paths.forEach(function (value) {\n          if (isFileDocument(value['type'])) {\n            copyBucketRoots.push(value);\n          }\n        });\n        this.setState({\n          copyIndex: { ...this.state.index,\n            paths: copyBucketRoots,\n            counts: copyBucketRoots.length\n          }\n        });\n      } else {\n        let copyBucketRoots = [];\n        this.state.index.paths.forEach(function (value) {\n          if (isFileOther(value['type'])) {\n            copyBucketRoots.push(value);\n          }\n        });\n        this.setState({\n          copyIndex: { ...this.state.index,\n            paths: copyBucketRoots,\n            counts: copyBucketRoots.length\n          }\n        });\n      }\n    };\n\n    this.changeFileType = value => {\n      this.setState({\n        currentType: value\n      });\n      this.filterFile(value);\n    };\n\n    this.exit = () => {\n      localStorage.clear();\n      this.props.history.replace({\n        pathname: \"/landing\"\n      });\n    };\n\n    this.deleteFiles = async value => {\n      const buckets = this.state.buckets;\n      const bucketKey = this.state.bucketKey;\n      const fileIndex = value;\n\n      if (fileIndex != null) {\n        this.setState({\n          backDropTips: \"Delete Files ...\"\n        });\n        this.backDropToggle(true);\n        let cids = [];\n        fileIndex.forEach(async function (value) {\n          cids.push(value.cid);\n          await removeBucketPath(buckets, bucketKey, value.path);\n        });\n        let copyIndexPaths = this.state.index.paths;\n        this.state.index.paths.forEach(function (element, index) {\n          if (cids.indexOf(element['cid']) !== -1) {\n            if (index === 0) {\n              copyIndexPaths.shift();\n            } else if (index === copyIndexPaths.length - 1) {\n              copyIndexPaths.pop();\n            } else {\n              copyIndexPaths.splice(index, 1);\n            }\n          }\n        });\n        this.setState({\n          index: { ...this.state.index,\n            paths: [...copyIndexPaths],\n            counts: copyIndexPaths.length\n          }\n        });\n        this.filterFile(this.state.currentType);\n        await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n        this.setState({\n          backDropTips: \"Change Bucket ...\"\n        });\n        this.backDropToggle(false);\n      }\n    };\n\n    this.backDropToggle = value => {\n      this.setState({\n        backDropOpen: value\n      });\n    };\n\n    this.handleBackDropClose = () => {\n      this.backDropToggle(false);\n    };\n\n    this.changeBucket = async value => {\n      this.setState({\n        changeBucket: value,\n        changeSpaceDialogOpen: true\n      });\n    };\n\n    this.folderInputChange = folderName => {\n      this.setState({\n        folderName: folderName.target.value\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        dialogOpen: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        dialogOpen: false\n      });\n    };\n\n    this.handleChangeSpaceClose = () => {\n      this.setState({\n        changeSpaceDialogOpen: false\n      });\n    };\n\n    this.deleteBucketConfirm = async () => {\n      this.setState({\n        changeSpaceDialogOpen: true,\n        bucketDialogTips: \"Delete this space ?\",\n        isChangeBucket: false\n      });\n    };\n\n    this.handleChangeSpaceConfirm = async () => {\n      if (this.state.isChangeBucket) {\n        const value = this.state.changeBucket;\n        this.handleChangeSpaceClose();\n\n        if (value != null) {\n          this.backDropToggle(true);\n          const userIdentity = await getLocalUserIdentity();\n          const {\n            bucketKey,\n            buckets\n          } = await getBucketKeyByBucketRoot(userIdentity, value);\n          this.setState({\n            bucketKey: bucketKey,\n            buckets: buckets\n          });\n          setCurrentBucketZone(value);\n          const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n\n          if (index) {\n            this.setState({\n              index: index\n            });\n            this.filterFile(ALL_FILES);\n          }\n\n          this.backDropToggle(false);\n        }\n      } else {\n        this.handleChangeSpaceClose();\n        await this.deleteBucket();\n      }\n    };\n\n    this.handleConfirm = async () => {\n      this.setState({\n        dialogOpen: false\n      });\n      const folderName = this.state.folderName; // const path = `${'/'}${folderName}${'/'}${'.seed'}`;\n      // await this.state.buckets.pushPath(this.state.bucketKey, path, new Uint8Array(128))\n\n      const response = await this.state.buckets.create(folderName);\n      this.setState({\n        bucketRoots: [...this.state.bucketRoots, response.root]\n      });\n    };\n\n    this.newFolder = data => {\n      this.handleClickOpen();\n    };\n\n    this.fileSelectCallback = data => {\n      this.setState({\n        checked: data\n      });\n    };\n\n    this.deleteBucket = async () => {\n      this.backDropToggle(true);\n\n      if (this.state.bucketRoots.length === 1) {\n        return;\n      }\n\n      await deleteBucket(this.state.buckets, this.state.bucketKey);\n      const bucketRoots = await bucketList(this.state.buckets);\n      deleteBucketZone();\n      this.setState({\n        changeBucket: bucketRoots[0],\n        bucketRoots: bucketRoots,\n        isChangeBucket: true\n      });\n      await this.handleChangeSpaceConfirm();\n    };\n\n    this.fileUploadCallback = async data => {\n      let dataAlreadyInPaths = false;\n      this.state.index.paths.forEach(function (element) {\n        if (element['cid'] === data['cid']) {\n          dataAlreadyInPaths = true;\n        }\n      });\n\n      if (!dataAlreadyInPaths) {\n        this.setState({\n          index: { ...this.state.index,\n            paths: [...this.state.index.paths, data],\n            counts: this.state.index.counts + 1\n          }\n        });\n        this.filterFile(this.state.currentType);\n        await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n      }\n    };\n\n    if (props.location.query != null) {\n      this.state = {\n        bucketKey: props.location.query.bucketKey,\n        buckets: props.location.query.buckets,\n        links: props.location.query.links,\n        dialogOpen: false,\n        changeSpaceDialogOpen: false,\n        backDropOpen: false,\n        backDropTips: \"Change Bucket ...\"\n      };\n    }\n  }\n\n  async componentWillMount() {\n    this.setState({\n      bucketDialogTips: \"Use this space ?\",\n      isChangeBucket: true,\n      currentType: ALL_FILES\n    });\n\n    if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\n      const userIdentity = await getLocalUserIdentity();\n\n      if (userIdentity != null) {\n        const {\n          bucketKey,\n          buckets\n        } = await getBucketKey(userIdentity);\n        this.setState({\n          bucketKey: bucketKey,\n          buckets: buckets\n        });\n      } else {\n        this.props.history.push({\n          pathname: \"/\"\n        });\n        return;\n      }\n    }\n\n    const bucketRoots = await bucketList(this.state.buckets);\n    this.setState({\n      bucketRoots: bucketRoots\n    });\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n    const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n\n    if (index) {\n      this.setState({\n        index: index\n      });\n      this.filterFile(ALL_FILES);\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n\n    if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative md:ml-64\",\n            children: [/*#__PURE__*/_jsxDEV(DashboardHeader, {\n              className: \"relative md:pt-32 pb-32 pt-12\",\n              exit: this.exit,\n              search: this.search\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative md:pt-32 pb-32 pt-12\",\n              children: [/*#__PURE__*/_jsxDEV(CustomizedDropZone, {\n                bucketKey: this.state.bucketKey,\n                buckets: this.state.buckets,\n                callback: this.fileUploadCallback,\n                newFolder: this.newFolder,\n                checked: this.state.checked,\n                deleteFiles: this.deleteFiles,\n                deleteBucket: this.deleteBucketConfirm,\n                roots: this.state.bucketRoots,\n                changeBucketCallBack: this.changeBucket\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FileZone, {\n                index: this.state.copyIndex,\n                callback: this.fileSelectCallback\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Dialog, {\n              open: this.state.dialogOpen,\n              onClose: this.handleClose,\n              \"aria-labelledby\": \"form-dialog-title\",\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                id: \"form-dialog-title\",\n                children: \"New Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n                  children: \"Please enter the folder name, for better use, Please enter English.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  onChange: this.folderInputChange,\n                  autoFocus: true,\n                  margin: \"dense\",\n                  id: \"name\",\n                  label: \"Folder Name\",\n                  type: \"text\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.handleClose,\n                  color: \"primary\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.handleConfirm.bind(this),\n                  color: \"primary\",\n                  children: \"Confirm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n              open: this.state.changeSpaceDialogOpen,\n              onClose: this.handleChangeSpaceClose,\n              \"aria-labelledby\": \"alert-dialog-title\",\n              \"aria-describedby\": \"alert-dialog-description\",\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                id: \"alert-dialog-title\",\n                children: this.state.bucketDialogTips\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n                  id: \"alert-dialog-description\",\n                  children: \"This is a confirmation popup, if you sure, just click confirm.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.handleChangeSpaceClose,\n                  color: \"primary\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.handleChangeSpaceConfirm,\n                  color: \"primary\",\n                  children: \"Confirm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n        className: classes.backdrop,\n        open: this.state.backDropOpen,\n        onClick: this.handleBackDropClose,\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"  \\xA0\\xA0 \", this.state.backDropTips]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles, {\n  withTheme: true\n})(DashboardPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["E:/anipfspace/src/views/dashborad/Dashboard.js"],"names":["React","getLocalUserIdentity","bucketList","deleteBucket","deleteBucketZone","getBucketKey","getBucketKeyByBucketRoot","removeBucketPath","setCurrentBucketZone","getFileIndex","storeIndex","CustomizedDropZone","Dialog","DialogTitle","DialogActions","FileZone","DialogContent","DialogContentText","TextField","Button","MuiAlert","Backdrop","CircularProgress","withStyles","DashboardHeader","isFileDocument","isFileImage","isFileOther","isFileVideo","Sidebar","Slider","useStyles","theme","backdrop","zIndex","drawer","color","fab","position","bottom","spacing","right","Alert","props","ALL_FILES","IMAGE","VIDEO","DOCUMENT","OTHER","DashboardPage","Component","constructor","search","value","searchResult","state","copyIndex","paths","filter","val","match","setState","index","counts","length","filterFile","currentType","fileType","copyBucketRoots","forEach","push","changeFileType","exit","localStorage","clear","history","replace","pathname","deleteFiles","buckets","bucketKey","fileIndex","backDropTips","backDropToggle","cids","cid","path","copyIndexPaths","element","indexOf","shift","pop","splice","backDropOpen","handleBackDropClose","changeBucket","changeSpaceDialogOpen","folderInputChange","folderName","target","handleClickOpen","dialogOpen","handleClose","handleChangeSpaceClose","deleteBucketConfirm","bucketDialogTips","isChangeBucket","handleChangeSpaceConfirm","userIdentity","handleConfirm","response","create","bucketRoots","root","newFolder","data","fileSelectCallback","checked","fileUploadCallback","dataAlreadyInPaths","location","query","links","componentWillMount","loading","document","getElementById","style","display","render","classes","bind","withTheme"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport './Dashboard.css'\r\nimport {getLocalUserIdentity,} from \"../../common/user\";\r\nimport {\r\n    bucketList,\r\n    deleteBucket, deleteBucketZone,\r\n    getBucketKey,\r\n    getBucketKeyByBucketRoot, removeBucketPath,\r\n    setCurrentBucketZone\r\n} from \"../../common/bucket\";\r\nimport {getFileIndex, storeIndex} from \"../../common/FileIndex\";\r\nimport CustomizedDropZone from \"../../components/CustomizedDropZone/CustomizedDropZone\";\r\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\r\nimport FileZone from \"../../components/FileZone/FileZone\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport DashboardHeader from \"../../components/comps/DashboardHeader\";\r\nimport {isFileDocument, isFileImage, isFileOther} from \"../../common/fileutil\";\r\nimport {isFileVideo} from \"../../common/fileutil\";\r\nimport Sidebar from \"../../components/Sidebar\";\r\nimport {Slider} from \"@material-ui/core\";\r\nconst useStyles = theme => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    fab:{\r\n        position:'absolute',\r\n        bottom:theme.spacing(4),\r\n        right:theme.spacing(4),\r\n    }\r\n});\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst ALL_FILES = \"ALL FILES\"\r\nconst IMAGE = \"IMAGE\"\r\nconst VIDEO = \"VIDEO\"\r\nconst DOCUMENT = \"DOCUMENT\"\r\nconst OTHER = \"OTHER\"\r\n\r\n\r\nclass DashboardPage extends React.Component  {\r\n    constructor(props) {\r\n        super(props);\r\n        if (props.location.query != null) {\r\n            this.state = {\r\n                bucketKey: props.location.query.bucketKey,\r\n                buckets: props.location.query.buckets,\r\n                links: props.location.query.links,\r\n                dialogOpen: false,\r\n                changeSpaceDialogOpen: false,\r\n                backDropOpen : false,\r\n                backDropTips: \"Change Bucket ...\"\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async componentWillMount() {\r\n        this.setState({\r\n                bucketDialogTips:\"Use this space ?\",\r\n                isChangeBucket : true,\r\n                currentType :ALL_FILES\r\n            }\r\n        );\r\n\r\n        if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\r\n            const userIdentity = await getLocalUserIdentity();\r\n            if (userIdentity != null) {\r\n                const {bucketKey, buckets} = await getBucketKey(userIdentity);\r\n                this.setState({\r\n                    bucketKey: bucketKey,\r\n                    buckets: buckets,\r\n                })\r\n            } else {\r\n                this.props.history.push({pathname: \"/\"});\r\n                return;\r\n            }\r\n        }\r\n\r\n        const bucketRoots = await bucketList(this.state.buckets);\r\n        this.setState({\r\n            bucketRoots: bucketRoots\r\n        });\r\n\r\n        let loading = document.getElementById('loader');\r\n        loading.style.display = 'none';\r\n        const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\r\n        if (index) {\r\n            this.setState({\r\n                index: index,\r\n            })\r\n            this.filterFile(ALL_FILES);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\r\n            return <div/>\r\n        }\r\n        return (\r\n            <div className=\"h-screen bg-white\">\r\n                <div className=\"h-screen\">\r\n                    <div>\r\n                        <Sidebar/>\r\n                        <div className=\"relative md:ml-64\">\r\n                            <DashboardHeader className=\"relative md:pt-32 pb-32 pt-12\"  exit={this.exit} search={this.search}/>\r\n                            <div className=\"relative md:pt-32 pb-32 pt-12\">\r\n                                <CustomizedDropZone bucketKey={this.state.bucketKey}\r\n                                                    buckets={this.state.buckets}\r\n                                                    callback={this.fileUploadCallback}\r\n                                                    newFolder={this.newFolder}\r\n                                                    checked={this.state.checked}\r\n                                                    deleteFiles={this.deleteFiles}\r\n                                                    deleteBucket={this.deleteBucketConfirm}\r\n                                                    roots={this.state.bucketRoots}\r\n                                                    changeBucketCallBack={this.changeBucket}/>\r\n                                <FileZone index={this.state.copyIndex} callback={this.fileSelectCallback}/>\r\n                            </div>\r\n\r\n                            {/*<div className=\"relative bg-pink-600 md:pt-32 pb-32 pt-12\">*/}\r\n                            {/*    /!*<div className=\"relative bg-gray-100\">*!/*/}\r\n                            {/*    /!*    <div className=\"items-end mt-10 \">*!/*/}\r\n                            {/*    /!*        <a onClick={this.changeFileType.bind(this,ALL_FILES)}*!/*/}\r\n                            {/*    /!*           className={*!/*/}\r\n                            {/*    /!*               this.state.currentType === ALL_FILES*!/*/}\r\n                            {/*    /!*                   ? \"font-bold\"*!/*/}\r\n                            {/*    /!*                   : \"font-mono\" +*!/*/}\r\n                            {/*    /!*                   \"text-base  leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"*!/*/}\r\n                            {/*    /!*           }*!/*/}\r\n                            {/*    /!*        >*!/*/}\r\n                            {/*    /!*            {ALL_FILES}*!/*/}\r\n                            {/*    /!*        </a>*!/*/}\r\n                            {/*    /!*    </div>*!/*/}\r\n                            {/*    /!*    <div className=\"items-end mt-1\" onClick={this.changeFileType.bind(this,IMAGE)}>*!/*/}\r\n                            {/*    /!*        <a*!/*/}\r\n                            {/*    /!*            className={*!/*/}\r\n                            {/*    /!*                this.state.currentType === IMAGE*!/*/}\r\n                            {/*    /!*                    ? \"font-bold\"*!/*/}\r\n                            {/*    /!*                    : \"font-mono\" +*!/*/}\r\n                            {/*    /!*                    \"text-base leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"*!/*/}\r\n                            {/*    /!*            }*!/*/}\r\n                            {/*    /!*        >*!/*/}\r\n                            {/*    /!*            {IMAGE}*!/*/}\r\n                            {/*    /!*        </a>*!/*/}\r\n                            {/*    /!*    </div>*!/*/}\r\n                            {/*    */}\r\n                            {/*    /!*    <div className=\"items-end mt-1\" onClick={this.changeFileType.bind(this,VIDEO)}>*!/*/}\r\n                            {/*    /!*        <a*!/*/}\r\n                            {/*    /!*            className={*!/*/}\r\n                            {/*    /!*                this.state.currentType === VIDEO*!/*/}\r\n                            {/*    /!*                    ? \"font-bold\"*!/*/}\r\n                            {/*    /!*                    : \"font-mono\" +*!/*/}\r\n                            {/*    /!*                    \"text-base leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"*!/*/}\r\n                            {/*    /!*            }*!/*/}\r\n                            {/*    /!*        >*!/*/}\r\n                            {/*    /!*            {VIDEO}*!/*/}\r\n                            {/*    /!*        </a>*!/*/}\r\n                            {/*    /!*    </div>*!/*/}\r\n                            {/*    */}\r\n                            {/*    /!*    <div className=\"items-end\" onClick={this.changeFileType.bind(this,DOCUMENT)}>*!/*/}\r\n                            {/*    /!*        <a*!/*/}\r\n                            {/*    /!*            className={*!/*/}\r\n                            {/*    /!*                this.state.currentType === DOCUMENT*!/*/}\r\n                            {/*    /!*                    ? \"font-bold\"*!/*/}\r\n                            {/*    /!*                    : \"font-mono\" +*!/*/}\r\n                            {/*    /!*                    \"text-sm  leading-relaxed inline-block mr-4 py-2  uppercase\"*!/*/}\r\n                            {/*    /!*            }*!/*/}\r\n                            {/*    /!*        >*!/*/}\r\n                            {/*    /!*            {DOCUMENT}*!/*/}\r\n                            {/*    /!*        </a>*!/*/}\r\n                            {/*    /!*    </div>*!/*/}\r\n                            {/*    */}\r\n                            {/*    /!*    <div className=\"items-end\" onClick={this.changeFileType.bind(this,OTHER)}>*!/*/}\r\n                            {/*    /!*        <a*!/*/}\r\n                            {/*    /!*            className={*!/*/}\r\n                            {/*    /!*                this.state.currentType === OTHER*!/*/}\r\n                            {/*    /!*                    ? \"font-bold\"*!/*/}\r\n                            {/*    /!*                    : \"font-mono\" +*!/*/}\r\n                            {/*    /!*                    \"text-sm  leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase\"*!/*/}\r\n                            {/*    /!*            }*!/*/}\r\n                            {/*    /!*        >*!/*/}\r\n                            {/*    /!*            {OTHER}*!/*/}\r\n                            {/*    /!*        </a>*!/*/}\r\n                            {/*    /!*    </div>*!/*/}\r\n                            {/*    /!*</div>*!/*/}\r\n                            {/*    <div className=\"relative w-full mt-10  flex justify-between lg:w-auto lg:static lg:block lg:justify-end \">*/}\r\n                            {/*        <div>*/}\r\n                            {/*            */}\r\n                            {/*        </div>*/}\r\n                            {/*    </div>*/}\r\n                            {/*</div>*/}\r\n                        </div>\r\n                        <div>\r\n                            <Dialog open={this.state.dialogOpen} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                                <DialogTitle id=\"form-dialog-title\">New Folder</DialogTitle>\r\n                                <DialogContent>\r\n                                    <DialogContentText>\r\n                                        Please enter the folder name, for better use, Please enter English.\r\n                                    </DialogContentText>\r\n                                    <TextField\r\n                                        onChange={this.folderInputChange}\r\n                                        autoFocus\r\n                                        margin=\"dense\"\r\n                                        id=\"name\"\r\n                                        label=\"Folder Name\"\r\n                                        type=\"text\"\r\n                                        fullWidth\r\n                                    />\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={this.handleClose} color=\"primary\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                    <Button onClick={this.handleConfirm.bind(this)} color=\"primary\">\r\n                                        Confirm\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n\r\n                            <Dialog\r\n                                open={this.state.changeSpaceDialogOpen}\r\n                                onClose={this.handleChangeSpaceClose}\r\n                                aria-labelledby=\"alert-dialog-title\"\r\n                                aria-describedby=\"alert-dialog-description\"\r\n                            >\r\n                                <DialogTitle id=\"alert-dialog-title\">{this.state.bucketDialogTips}</DialogTitle>\r\n                                <DialogContent>\r\n                                    <DialogContentText id=\"alert-dialog-description\">\r\n                                        This is a confirmation popup, if you sure, just click confirm.\r\n                                    </DialogContentText>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={this.handleChangeSpaceClose} color=\"primary\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                    <Button onClick={this.handleChangeSpaceConfirm} color=\"primary\">\r\n                                        Confirm\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*<Alert className={'tips mb-8'} severity=\"info\">*/}\r\n                    {/*    <AlertTitle>Don't save important data to IPFS without local backup</AlertTitle>*/}\r\n                    {/*    Although we are using official reliable IPFS nodes,*/}\r\n                    {/*    we can't guarantee 100% reliability. For important data, a <strong>local backup</strong> should still be stored </Alert>*/}\r\n\r\n                </div>\r\n\r\n                <Backdrop className={classes.backdrop} open={this.state.backDropOpen} onClick={this.handleBackDropClose}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                    <h2>  &nbsp;&nbsp; {this.state.backDropTips}</h2>\r\n                </Backdrop>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    search = (value)=>{\r\n        if(value){\r\n            const searchResult =  this.state.copyIndex.paths.filter(val => val['name'].match(value));\r\n            this.setState({\r\n                copyIndex: {\r\n                    ...this.state.index,\r\n                    paths: searchResult,\r\n                    counts: searchResult.length\r\n                }\r\n            })\r\n        }else{\r\n            this.filterFile(this.state.currentType)\r\n        }\r\n    }\r\n\r\n    filterFile = (value)=>{\r\n        const fileType = value;\r\n        if(fileType === ALL_FILES){\r\n            this.setState({\r\n                copyIndex :this.state.index\r\n            })\r\n        }else if(fileType === IMAGE){\r\n            let copyBucketRoots = []\r\n            this.state.index.paths.forEach(function (value) {\r\n                if(isFileImage(value['type'])){\r\n                    copyBucketRoots.push(value)\r\n                }\r\n            })\r\n            this.setState({\r\n                copyIndex: {\r\n                    ...this.state.index,\r\n                    paths: copyBucketRoots,\r\n                    counts: copyBucketRoots.length\r\n                }\r\n            })\r\n        }else if(fileType === VIDEO){\r\n            let copyBucketRoots = []\r\n            this.state.index.paths.forEach(function (value) {\r\n                if(isFileVideo(value['type'])){\r\n                    copyBucketRoots.push(value)\r\n                }\r\n            })\r\n            this.setState({\r\n                copyIndex: {\r\n                    ...this.state.index,\r\n                    paths: copyBucketRoots,\r\n                    counts: copyBucketRoots.length\r\n                }\r\n            })\r\n        }else if(fileType === DOCUMENT){\r\n            let copyBucketRoots = []\r\n            this.state.index.paths.forEach(function (value) {\r\n                if(isFileDocument(value['type'])){\r\n                    copyBucketRoots.push(value)\r\n                }\r\n            })\r\n            this.setState({\r\n                copyIndex: {\r\n                    ...this.state.index,\r\n                    paths: copyBucketRoots,\r\n                    counts: copyBucketRoots.length\r\n                }\r\n            })\r\n        }else{\r\n            let copyBucketRoots = []\r\n            this.state.index.paths.forEach(function (value) {\r\n                if(isFileOther(value['type'])){\r\n                    copyBucketRoots.push(value)\r\n                }\r\n            })\r\n            this.setState({\r\n                copyIndex: {\r\n                    ...this.state.index,\r\n                    paths: copyBucketRoots,\r\n                    counts: copyBucketRoots.length\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    changeFileType = (value)=>{\r\n        this.setState({\r\n            currentType :value\r\n        })\r\n        this.filterFile(value);\r\n    }\r\n\r\n    exit = ()=>{\r\n        localStorage.clear();\r\n        this.props.history.replace({pathname: \"/landing\"})\r\n    };\r\n\r\n    deleteFiles = async (value) => {\r\n        const buckets = this.state.buckets;\r\n        const bucketKey = this.state.bucketKey;\r\n        const fileIndex = value;\r\n        if (fileIndex != null) {\r\n            this.setState({\r\n                backDropTips:\"Delete Files ...\"\r\n            });\r\n            this.backDropToggle(true);\r\n            let cids = [];\r\n            fileIndex.forEach(async function (value) {\r\n                cids.push(value.cid);\r\n                await removeBucketPath(buckets, bucketKey, value.path);\r\n            });\r\n            let copyIndexPaths = this.state.index.paths;\r\n            this.state.index.paths.forEach(function (element, index) {\r\n                if (cids.indexOf(element['cid']) !== -1) {\r\n                    if (index === 0) {\r\n                        copyIndexPaths.shift();\r\n                    } else if (index === copyIndexPaths.length - 1) {\r\n                        copyIndexPaths.pop();\r\n                    } else {\r\n                        copyIndexPaths.splice(index, 1);\r\n                    }\r\n                }\r\n            });\r\n            this.setState({\r\n                index: {\r\n                    ...this.state.index,\r\n                    paths: [...copyIndexPaths],\r\n                    counts: copyIndexPaths.length\r\n                },\r\n            })\r\n            this.filterFile(this.state.currentType)\r\n\r\n            await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\r\n            this.setState({\r\n                backDropTips:\"Change Bucket ...\"\r\n            });\r\n            this.backDropToggle(false);\r\n        }\r\n    };\r\n\r\n    backDropToggle = (value)=>{\r\n        this.setState({\r\n            backDropOpen :value\r\n        })\r\n    };\r\n\r\n    handleBackDropClose = ()=>{\r\n        this.backDropToggle(false);\r\n    };\r\n\r\n    changeBucket = async (value) => {\r\n        this.setState({\r\n            changeBucket: value,\r\n            changeSpaceDialogOpen: true\r\n        })\r\n    };\r\n\r\n    folderInputChange = (folderName) => {\r\n        this.setState({\r\n            folderName: folderName.target.value\r\n        })\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n                dialogOpen: true\r\n            }\r\n        );\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n                dialogOpen: false\r\n            }\r\n        );\r\n    };\r\n\r\n    handleChangeSpaceClose = () => {\r\n        this.setState({\r\n                changeSpaceDialogOpen: false\r\n            }\r\n        );\r\n    };\r\n\r\n    deleteBucketConfirm = async () =>{\r\n        this.setState({\r\n            changeSpaceDialogOpen: true,\r\n            bucketDialogTips:\"Delete this space ?\",\r\n            isChangeBucket : false\r\n        })\r\n    };\r\n\r\n    handleChangeSpaceConfirm = async () => {\r\n        if(this.state.isChangeBucket){\r\n            const value = this.state.changeBucket;\r\n            this.handleChangeSpaceClose();\r\n            if(value!=null){\r\n                this.backDropToggle(true);\r\n                const userIdentity = await getLocalUserIdentity();\r\n                const {bucketKey, buckets} = await getBucketKeyByBucketRoot(userIdentity, value);\r\n                this.setState({\r\n                    bucketKey: bucketKey,\r\n                    buckets: buckets,\r\n                });\r\n                setCurrentBucketZone(value);\r\n                const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\r\n                if (index) {\r\n                    this.setState({\r\n                        index: index\r\n                    })\r\n                    this.filterFile(ALL_FILES)\r\n                }\r\n                this.backDropToggle(false);\r\n            }\r\n        }else{\r\n            this.handleChangeSpaceClose();\r\n            await this.deleteBucket();\r\n        }\r\n    };\r\n\r\n    handleConfirm = async () => {\r\n        this.setState({\r\n                dialogOpen: false\r\n            }\r\n        );\r\n        const folderName = this.state.folderName;\r\n        // const path = `${'/'}${folderName}${'/'}${'.seed'}`;\r\n        // await this.state.buckets.pushPath(this.state.bucketKey, path, new Uint8Array(128))\r\n        const response = await this.state.buckets.create(folderName);\r\n        this.setState({\r\n            bucketRoots: [...this.state.bucketRoots, response.root]\r\n        })\r\n    };\r\n\r\n    newFolder = (data) => {\r\n        this.handleClickOpen();\r\n    };\r\n\r\n    fileSelectCallback = (data) => {\r\n        this.setState({\r\n            checked: data\r\n        });\r\n    };\r\n\r\n    deleteBucket = async () => {\r\n        this.backDropToggle(true);\r\n        if(this.state.bucketRoots.length===1){\r\n            return;\r\n        }\r\n        await deleteBucket(this.state.buckets,this.state.bucketKey);\r\n        const bucketRoots = await bucketList(this.state.buckets);\r\n        deleteBucketZone();\r\n        this.setState({\r\n            changeBucket: bucketRoots[0],\r\n            bucketRoots: bucketRoots,\r\n            isChangeBucket:true\r\n        });\r\n        await this.handleChangeSpaceConfirm();\r\n    };\r\n\r\n\r\n\r\n    fileUploadCallback = async (data) => {\r\n        let dataAlreadyInPaths = false;\r\n        this.state.index.paths.forEach(function (element) {\r\n            if (element['cid'] === data['cid']) {\r\n                dataAlreadyInPaths = true;\r\n            }\r\n        });\r\n        if (!dataAlreadyInPaths) {\r\n            this.setState({\r\n                index: {\r\n                    ...this.state.index,\r\n                    paths: [...this.state.index.paths, data],\r\n                    counts: this.state.index.counts + 1\r\n                },\r\n            });\r\n            this.filterFile(this.state.currentType)\r\n            await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\r\n        }\r\n    }\r\n}\r\nexport default withStyles(useStyles, { withTheme: true })(DashboardPage);\r\n"]},"metadata":{},"sourceType":"module"}