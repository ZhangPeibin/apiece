{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js\";\nimport * as React from \"react\";\nimport './Dashboard.css';\nimport { getLocalUserIdentity } from \"../../common/user\";\nimport { bucketList, deleteBucket, deleteBucketZone, getBucketKey, getBucketKeyByBucketRoot, setCurrentBucketZone } from \"../../common/bucket\";\nimport { getFileIndex, storeIndex } from \"../../common/FileIndex\";\nimport CustomizedDropZone from \"../../components/CustomizedDropZone/CustomizedDropZone\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Header from \"../../components/Header/Header\";\nimport FileZone from \"../../components/FileZone/FileZone\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport BucketZone from \"../../components/bucketzone/BucketZone\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { WithStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n});\n\nclass DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteFiles = value => {\n      const fileIndex = value;\n    };\n\n    this.handleBackDropClose = () => {\n      this.setState({\n        backDropOpen: false\n      });\n    };\n\n    this.changeBucket = async value => {\n      this.setState({\n        changeBucket: value,\n        changeSpaceDialogOpen: true\n      });\n    };\n\n    this.folderInputChange = folderName => {\n      this.setState({\n        folderName: folderName.target.value\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        dialogOpen: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        dialogOpen: false\n      });\n    };\n\n    this.handleChangeSpaceClose = () => {\n      this.setState({\n        changeSpaceDialogOpen: false\n      });\n    };\n\n    this.deleteBucketConfirm = async () => {\n      this.setState({\n        changeSpaceDialogOpen: true,\n        bucketDialogTips: \"Delete this space ?\",\n        isChangeBucket: false\n      });\n    };\n\n    this.handleChangeSpaceConfirm = async () => {\n      if (this.state.isChangeBucket) {\n        const value = this.state.changeBucket;\n        this.handleChangeSpaceClose();\n\n        if (value != null) {\n          this.setState({\n            backDropOpen: true\n          });\n          const userIdentity = await getLocalUserIdentity();\n          const {\n            bucketKey,\n            buckets\n          } = await getBucketKeyByBucketRoot(userIdentity, value.name);\n          this.setState({\n            bucketKey: bucketKey,\n            buckets: buckets\n          });\n          setCurrentBucketZone(value.name);\n          const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n\n          if (index) {\n            this.setState({\n              index: index\n            });\n          }\n\n          this.setState({\n            backDropOpen: false\n          });\n        }\n      } else {\n        this.handleChangeSpaceClose();\n        await this.deleteBucket();\n      }\n    };\n\n    this.handleConfirm = async () => {\n      this.setState({\n        dialogOpen: false\n      });\n      const folderName = this.state.folderName; // const path = `${'/'}${folderName}${'/'}${'.seed'}`;\n      // await this.state.buckets.pushPath(this.state.bucketKey, path, new Uint8Array(128))\n\n      const response = await this.state.buckets.create(folderName);\n      this.setState({\n        bucketRoots: [...this.state.bucketRoots, response.root]\n      });\n    };\n\n    this.newFolder = data => {\n      this.handleClickOpen();\n    };\n\n    this.fileSelectCallback = data => {\n      this.setState({\n        checked: data\n      });\n    };\n\n    this.deleteBucket = async () => {\n      this.setState({\n        backDropOpen: true\n      });\n\n      if (this.state.bucketRoots.length === 1) {\n        return;\n      }\n\n      await deleteBucket(this.state.buckets, this.state.bucketKey);\n      const bucketRoots = await bucketList(this.state.buckets);\n      deleteBucketZone();\n      this.setState({\n        changeBucket: bucketRoots[0]\n      });\n      this.setState({\n        bucketRoots: bucketRoots\n      });\n      this.setState({\n        isChangeBucket: true\n      });\n      await this.handleChangeSpaceConfirm();\n    };\n\n    this.fileUploadCallback = async data => {\n      let dataAlreadyInPaths = false;\n      this.state.index.paths.forEach(function (element) {\n        if (element['cid'] === data['cid']) {\n          dataAlreadyInPaths = true;\n        }\n      });\n\n      if (!dataAlreadyInPaths) {\n        this.setState({\n          index: { ...this.state.index,\n            paths: [...this.state.index.paths, data],\n            counts: this.state.index.counts + 1\n          }\n        });\n        await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n      }\n    };\n\n    if (props.location.query != null) {\n      this.state = {\n        bucketKey: props.location.query.bucketKey,\n        buckets: props.location.query.buckets,\n        links: props.location.query.links,\n        dialogOpen: false,\n        changeSpaceDialogOpen: false,\n        backDropOpen: false\n      };\n    }\n  }\n\n  async componentWillMount() {\n    this.setState({\n      bucketDialogTips: \"Use this space ?\",\n      isChangeBucket: true\n    });\n\n    if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\n      const userIdentity = await getLocalUserIdentity();\n\n      if (userIdentity != null) {\n        const {\n          bucketKey,\n          buckets\n        } = await getBucketKey(userIdentity);\n        this.setState({\n          bucketKey: bucketKey,\n          buckets: buckets\n        });\n      } else {\n        this.props.history.push({\n          pathname: \"/\"\n        });\n      }\n    }\n\n    const bucketRoots = await bucketList(this.state.buckets);\n    this.setState({\n      bucketRoots: bucketRoots\n    });\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n    const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n\n    if (index) {\n      this.setState({\n        index: index\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n\n    if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            color: \"transparent\",\n            brand: \"APiece - Store Data \\xB7 Reshape Privacy\",\n            fixed: true,\n            changeColorOnScroll: {\n              height: 400,\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            className: 'leftCard',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: 'spacetitle',\n              children: \"Spaces\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              light: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(BucketZone, {\n              roots: this.state.bucketRoots,\n              callback: this.changeBucket\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            direction: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(CustomizedDropZone, {\n              bucketKey: this.state.bucketKey,\n              buckets: this.state.buckets,\n              callback: this.fileUploadCallback,\n              newFolder: this.newFolder,\n              checked: this.state.checked,\n              deleteFiles: this.deleteFiles,\n              deleteBucket: this.deleteBucketConfirm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FileZone, {\n              index: this.state.index,\n              callback: this.fileSelectCallback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Dialog, {\n            open: this.state.dialogOpen,\n            onClose: this.handleClose,\n            \"aria-labelledby\": \"form-dialog-title\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              id: \"form-dialog-title\",\n              children: \"New Folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n                children: \"Please enter the folder name, for better use, Please enter English.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: this.folderInputChange,\n                autoFocus: true,\n                margin: \"dense\",\n                id: \"name\",\n                label: \"Folder Name\",\n                type: \"text\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleClose,\n                color: \"primary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleConfirm.bind(this),\n                color: \"primary\",\n                children: \"Confirm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            open: this.state.changeSpaceDialogOpen,\n            onClose: this.handleChangeSpaceClose,\n            \"aria-labelledby\": \"alert-dialog-title\",\n            \"aria-describedby\": \"alert-dialog-description\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              id: \"alert-dialog-title\",\n              children: this.state.bucketDialogTips\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n                id: \"alert-dialog-description\",\n                children: \"This is a confirmation popup, if you sure, just click confirm.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleChangeSpaceClose,\n                color: \"primary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleChangeSpaceConfirm,\n                color: \"primary\",\n                children: \"Confirm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n        className: classes.backdrop,\n        open: this.state.backDropOpen,\n        onClick: this.handleBackDropClose,\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"  \\xA0\\xA0 change space ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles, {\n  withTheme: true\n})(DashboardPage);","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js"],"names":["React","getLocalUserIdentity","bucketList","deleteBucket","deleteBucketZone","getBucketKey","getBucketKeyByBucketRoot","setCurrentBucketZone","getFileIndex","storeIndex","CustomizedDropZone","Dialog","DialogTitle","DialogActions","Header","FileZone","DialogContent","DialogContentText","TextField","Button","Paper","Grid","Divider","BucketZone","Backdrop","CircularProgress","withStyles","WithStyles","useStyles","theme","backdrop","zIndex","drawer","color","DashboardPage","Component","constructor","props","deleteFiles","value","fileIndex","handleBackDropClose","setState","backDropOpen","changeBucket","changeSpaceDialogOpen","folderInputChange","folderName","target","handleClickOpen","dialogOpen","handleClose","handleChangeSpaceClose","deleteBucketConfirm","bucketDialogTips","isChangeBucket","handleChangeSpaceConfirm","state","userIdentity","bucketKey","buckets","name","index","handleConfirm","response","create","bucketRoots","root","newFolder","data","fileSelectCallback","checked","length","fileUploadCallback","dataAlreadyInPaths","paths","forEach","element","counts","location","query","links","componentWillMount","history","push","pathname","loading","document","getElementById","style","display","render","classes","height","bind","withTheme"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport './Dashboard.css'\nimport {getLocalUserIdentity,} from \"../../common/user\";\nimport {\n    bucketList,\n    deleteBucket, deleteBucketZone,\n    getBucketKey,\n    getBucketKeyByBucketRoot,\n    setCurrentBucketZone\n} from \"../../common/bucket\";\nimport {getFileIndex, storeIndex} from \"../../common/FileIndex\";\nimport CustomizedDropZone from \"../../components/CustomizedDropZone/CustomizedDropZone\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Header from \"../../components/Header/Header\";\nimport FileZone from \"../../components/FileZone/FileZone\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport BucketZone from \"../../components/bucketzone/BucketZone\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {WithStyles} from \"@material-ui/core\";\nconst useStyles = theme => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n});\n\nclass DashboardPage extends React.Component  {\n    constructor(props) {\n        super(props);\n        if (props.location.query != null) {\n            this.state = {\n                bucketKey: props.location.query.bucketKey,\n                buckets: props.location.query.buckets,\n                links: props.location.query.links,\n                dialogOpen: false,\n                changeSpaceDialogOpen: false,\n                backDropOpen : false\n            }\n        }\n    }\n\n    async componentWillMount() {\n        this.setState({\n                bucketDialogTips:\"Use this space ?\",\n                isChangeBucket : true\n            }\n        );\n\n        if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\n            const userIdentity = await getLocalUserIdentity();\n            if (userIdentity != null) {\n                const {bucketKey, buckets} = await getBucketKey(userIdentity);\n                this.setState({\n                    bucketKey: bucketKey,\n                    buckets: buckets,\n                })\n            } else {\n                this.props.history.push({pathname: \"/\"});\n            }\n        }\n\n        const bucketRoots = await bucketList(this.state.buckets);\n        this.setState({\n            bucketRoots: bucketRoots\n        });\n\n        let loading = document.getElementById('loader');\n        loading.style.display = 'none';\n        const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n        if (index) {\n            this.setState({\n                index: index\n            })\n        }\n    }\n\n\n    render() {\n\n        const { classes } = this.props;\n\n        if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\n            return <div/>\n        }\n        return (\n            <div>\n                <div>\n                    <div>\n                        <Header\n                            color=\"transparent\"\n                            brand=\"APiece - Store Data · Reshape Privacy\"\n                            fixed\n                            changeColorOnScroll={{\n                                height: 400,\n                                color: \"white\",\n                            }}\n                        />\n                    </div>\n                    <Grid\n                        container\n                        direction=\"row\" justify=\"flex-start\">\n                        <Paper className={'leftCard'}>\n                            <span className={'spacetitle'}>Spaces</span>\n                            <Divider light/>\n                            <BucketZone roots={this.state.bucketRoots} callback={this.changeBucket}/>\n                        </Paper>\n                        <Grid direction=\"column\">\n                            <CustomizedDropZone bucketKey={this.state.bucketKey}\n                                                buckets={this.state.buckets}\n                                                callback={this.fileUploadCallback}\n                                                newFolder={this.newFolder}\n                                                checked={this.state.checked}\n                                                deleteFiles={this.deleteFiles}\n                                                deleteBucket={this.deleteBucketConfirm}/>\n                            <FileZone index={this.state.index} callback={this.fileSelectCallback}/>\n                        </Grid>\n                    </Grid>\n                    <div>\n                        <Dialog open={this.state.dialogOpen} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                            <DialogTitle id=\"form-dialog-title\">New Folder</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    Please enter the folder name, for better use, Please enter English.\n                                </DialogContentText>\n                                <TextField\n                                    onChange={this.folderInputChange}\n                                    autoFocus\n                                    margin=\"dense\"\n                                    id=\"name\"\n                                    label=\"Folder Name\"\n                                    type=\"text\"\n                                    fullWidth\n                                />\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleClose} color=\"primary\">\n                                    Cancel\n                                </Button>\n                                <Button onClick={this.handleConfirm.bind(this)} color=\"primary\">\n                                    Confirm\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n\n                        <Dialog\n                            open={this.state.changeSpaceDialogOpen}\n                            onClose={this.handleChangeSpaceClose}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-title\">{this.state.bucketDialogTips}</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-description\">\n                                    This is a confirmation popup, if you sure, just click confirm.\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleChangeSpaceClose} color=\"primary\">\n                                    Cancel\n                                </Button>\n                                <Button onClick={this.handleChangeSpaceConfirm} color=\"primary\">\n                                    Confirm\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n                </div>\n\n                <Backdrop className={classes.backdrop} open={this.state.backDropOpen} onClick={this.handleBackDropClose}>\n                    <CircularProgress color=\"inherit\" />\n                    <h2>  &nbsp;&nbsp; change space ...</h2>\n                </Backdrop>\n            </div>\n        );\n    }\n\n    deleteFiles = (value)=>{\n        const fileIndex = value;\n    };\n\n    handleBackDropClose = ()=>{\n        this.setState({\n            backDropOpen :false\n        })\n    };\n\n    changeBucket = async (value) => {\n        this.setState({\n            changeBucket: value,\n            changeSpaceDialogOpen: true\n        })\n    };\n\n    folderInputChange = (folderName) => {\n        this.setState({\n            folderName: folderName.target.value\n        })\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n                dialogOpen: true\n            }\n        );\n    };\n\n    handleClose = () => {\n        this.setState({\n                dialogOpen: false\n            }\n        );\n    };\n\n    handleChangeSpaceClose = () => {\n        this.setState({\n                changeSpaceDialogOpen: false\n            }\n        );\n    };\n\n    deleteBucketConfirm = async () =>{\n        this.setState({\n            changeSpaceDialogOpen: true,\n            bucketDialogTips:\"Delete this space ?\",\n            isChangeBucket : false\n        })\n    };\n\n    handleChangeSpaceConfirm = async () => {\n        if(this.state.isChangeBucket){\n            const value = this.state.changeBucket;\n            this.handleChangeSpaceClose();\n            if(value!=null){\n                this.setState({\n                    backDropOpen:true\n                });\n                const userIdentity = await getLocalUserIdentity();\n                const {bucketKey, buckets} = await getBucketKeyByBucketRoot(userIdentity, value.name);\n                this.setState({\n                    bucketKey: bucketKey,\n                    buckets: buckets,\n                });\n                setCurrentBucketZone(value.name);\n                const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n                if (index) {\n                    this.setState({\n                        index: index\n                    })\n                }\n                this.setState({\n                    backDropOpen:false\n                });\n            }\n        }else{\n            this.handleChangeSpaceClose();\n            await this.deleteBucket();\n        }\n    };\n\n    handleConfirm = async () => {\n        this.setState({\n                dialogOpen: false\n            }\n        );\n        const folderName = this.state.folderName;\n        // const path = `${'/'}${folderName}${'/'}${'.seed'}`;\n        // await this.state.buckets.pushPath(this.state.bucketKey, path, new Uint8Array(128))\n        const response = await this.state.buckets.create(folderName);\n        this.setState({\n            bucketRoots: [...this.state.bucketRoots, response.root]\n        })\n    };\n\n    newFolder = (data) => {\n        this.handleClickOpen();\n    };\n\n    fileSelectCallback = (data) => {\n        this.setState({\n            checked: data\n        });\n    };\n\n    deleteBucket = async () => {\n        this.setState({\n            backDropOpen:true\n        });\n        if(this.state.bucketRoots.length===1){\n            return;\n        }\n        await deleteBucket(this.state.buckets,this.state.bucketKey);\n        const bucketRoots = await bucketList(this.state.buckets);\n        deleteBucketZone();\n        this.setState({\n            changeBucket: bucketRoots[0],\n        });\n        this.setState({\n            bucketRoots: bucketRoots\n        });\n        this.setState({\n            isChangeBucket:true\n        });\n        await this.handleChangeSpaceConfirm();\n    };\n\n    fileUploadCallback = async (data) => {\n        let dataAlreadyInPaths = false;\n        this.state.index.paths.forEach(function (element) {\n            if (element['cid'] === data['cid']) {\n                dataAlreadyInPaths = true;\n            }\n        });\n        if (!dataAlreadyInPaths) {\n            this.setState({\n                index: {\n                    ...this.state.index,\n                    paths: [...this.state.index.paths, data],\n                    counts: this.state.index.counts + 1\n                },\n            });\n            await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n        }\n    }\n}\nexport default withStyles(useStyles, { withTheme: true })(DashboardPage);\n"]},"metadata":{},"sourceType":"module"}