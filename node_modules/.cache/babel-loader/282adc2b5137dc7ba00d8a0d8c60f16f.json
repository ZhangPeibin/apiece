{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/components/FileZone/FileZone.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { FileIndex } from \"../../common/Types\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginLeft: '32px',\n    marginRight: '32px',\n    padding: '2px 4px',\n    paddingRight: '16px',\n    width: 800,\n    backgroundColor: theme.palette.background.paper\n  },\n  listItem: {\n    height: 40\n  },\n  checkboxlistlabelname: {\n    width: 500\n  },\n  listDate: {\n    width: 200,\n    alignItems: \"left\"\n  }\n}));\nexport default function FileZone(props) {\n  _s();\n\n  const callback = props.callback;\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n  let allSelect = false; // @ts-ignore\n\n  const index = props.index;\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const allToggle = event => {\n    const currentChecked = event.target.checked;\n\n    if (currentChecked) {\n      allSelect = true;\n    } else {\n      allSelect = false;\n    }\n\n    setChecked(checked);\n    callback();\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      className: classes.listItem,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: allToggle,\n          edge: \"start\",\n          disableRipple: true,\n          inputProps: {\n            'aria-labelledby': 'all_check'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        className: classes.checkboxlistlabelname,\n        primary: `Name`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        className: classes.listDate,\n        primary: `Last Modified`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: `Size`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      component: \"li\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), index.paths.map(value => {\n      const labelId = `checkbox-list-label-${value}`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        className: classes.listItem,\n        role: undefined,\n        dense: true,\n        button: true,\n        onClick: handleToggle(value),\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            edge: \"start\",\n            checked: allSelect || checked.indexOf(value) !== -1,\n            tabIndex: -1,\n            disableRipple: true,\n            inputProps: {\n              'aria-labelledby': labelId\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          className: classes.checkboxlistlabelname,\n          id: labelId,\n          primary: value['name']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          className: classes.listDate,\n          primary: value['date']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: getFileSize(value['size'])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileZone, \"0o+c9wVIlrEVOlS08q2btRlaiSQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = FileZone;\n\nfunction getFileSize(limit) {\n  var size = \"\";\n\n  if (limit < 0.1 * 1024) {\n    //小于0.1KB，则转化成B\n    size = limit.toFixed(2) + \"B\";\n  } else if (limit < 0.1 * 1024 * 1024) {\n    //小于0.1MB，则转化成KB\n    size = (limit / 1024).toFixed(2) + \"KB\";\n  } else if (limit < 0.1 * 1024 * 1024 * 1024) {\n    //小于0.1GB，则转化成MB\n    size = (limit / (1024 * 1024)).toFixed(2) + \"MB\";\n  } else {\n    //其他转化成GB\n    size = (limit / (1024 * 1024 * 1024)).toFixed(2) + \"GB\";\n  }\n\n  var sizeStr = size + \"\"; //转成字符串\n\n  var index = sizeStr.indexOf(\".\"); //获取小数点处的索引\n\n  var dou = sizeStr.substr(index + 1, 2); //获取小数点后两位的值\n\n  if (dou == \"00\") {\n    //判断后两位是否为00，如果是则删除00\n    return sizeStr.substring(0, index) + sizeStr.substr(index + 3, 2);\n  }\n\n  return size;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FileZone\");","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/components/FileZone/FileZone.js"],"names":["React","makeStyles","List","ListItem","ListItemIcon","ListItemText","Checkbox","FileIndex","Divider","useStyles","theme","root","marginLeft","marginRight","padding","paddingRight","width","backgroundColor","palette","background","paper","listItem","height","checkboxlistlabelname","listDate","alignItems","FileZone","props","callback","classes","checked","setChecked","useState","allSelect","index","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","allToggle","event","currentChecked","target","paths","map","labelId","undefined","getFileSize","limit","size","toFixed","sizeStr","dou","substr","substring"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAC,MADT;AAEFC,IAAAA,WAAW,EAAC,MAFV;AAGFC,IAAAA,OAAO,EAAE,SAHP;AAIFC,IAAAA,YAAY,EAAE,MAJZ;AAKFC,IAAAA,KAAK,EAAE,GALL;AAMFC,IAAAA,eAAe,EAAEP,KAAK,CAACQ,OAAN,CAAcC,UAAd,CAAyBC;AANxC,GAD+B;AASrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE;AADF,GAT2B;AAYrCC,EAAAA,qBAAqB,EAAE;AACnBP,IAAAA,KAAK,EAAE;AADY,GAZc;AAerCQ,EAAAA,QAAQ,EAAC;AACLR,IAAAA,KAAK,EAAC,GADD;AAELS,IAAAA,UAAU,EAAE;AAFP;AAf4B,CAAZ,CAAD,CAA5B;AAqBA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwB/B,KAAK,CAACgC,QAAN,CAAe,CAAC,CAAD,CAAf,CAA9B;AACA,MAAIC,SAAS,GAAG,KAAhB,CAJoC,CAKpC;;AACA,QAAMC,KAAe,GAAGP,KAAK,CAACO,KAA9B;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW,MAAM;AAClC,UAAMC,YAAY,GAAGP,OAAO,CAACQ,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGT,OAAJ,CAAnB;;AAEA,QAAIO,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACH,KAFD,MAEO;AACHG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACH;;AAEDN,IAAAA,UAAU,CAACQ,UAAD,CAAV;AACH,GAXD;;AAaA,QAAMG,SAAS,GAAGC,KAAD,IAAS;AACtB,UAAMC,cAAc,GAAGD,KAAK,CAACE,MAAN,CAAaf,OAApC;;AACA,QAAGc,cAAH,EAAkB;AACdX,MAAAA,SAAS,GAAC,IAAV;AACH,KAFD,MAEK;AACDA,MAAAA,SAAS,GAAG,KAAZ;AACH;;AACDF,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAF,IAAAA,QAAQ;AACX,GATD;;AAWA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEC,OAAO,CAAClB,IAAzB;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEkB,OAAO,CAACR,QAA7B;AAAA,8BACI,QAAC,YAAD;AAAA,+BACI,QAAC,QAAD;AACI,UAAA,QAAQ,EAAEqB,SADd;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,aAAa,MAHjB;AAII,UAAA,UAAU,EAAE;AAAC,+BAAmB;AAApB;AAJhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,YAAD;AAAc,QAAA,SAAS,EAAEb,OAAO,CAACN,qBAAjC;AAAwD,QAAA,OAAO,EAAG;AAAlE;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI,QAAC,YAAD;AAAc,QAAA,SAAS,EAAEM,OAAO,CAACL,QAAjC;AAA2C,QAAA,OAAO,EAAG;AAArD;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI,QAAC,YAAD;AAAe,QAAA,OAAO,EAAG;AAAzB;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAdJ,EAgBKU,KAAK,CAACY,KAAN,CAAYC,GAAZ,CAAiBX,KAAD,IAAW;AACxB,YAAMY,OAAO,GAAI,uBAAsBZ,KAAM,EAA7C;AACA,0BACI,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEP,OAAO,CAACR,QAA7B;AAAmD,QAAA,IAAI,EAAE4B,SAAzD;AAAoE,QAAA,KAAK,MAAzE;AAA0E,QAAA,MAAM,MAAhF;AACU,QAAA,OAAO,EAAEd,YAAY,CAACC,KAAD,CAD/B;AAAA,gCAEI,QAAC,YAAD;AAAA,iCACI,QAAC,QAAD;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,OAAO,EAAEH,SAAS,IAAIH,OAAO,CAACQ,OAAR,CAAgBF,KAAhB,MAA2B,CAAC,CAFtD;AAGI,YAAA,QAAQ,EAAE,CAAC,CAHf;AAII,YAAA,aAAa,MAJjB;AAKI,YAAA,UAAU,EAAE;AAAC,iCAAmBY;AAApB;AALhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI,QAAC,YAAD;AAAc,UAAA,SAAS,EAAEnB,OAAO,CAACN,qBAAjC;AAAwD,UAAA,EAAE,EAAEyB,OAA5D;AACc,UAAA,OAAO,EAAEZ,KAAK,CAAC,MAAD;AAD5B;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAaI,QAAC,YAAD;AAAc,UAAA,SAAS,EAAEP,OAAO,CAACL,QAAjC;AAA4C,UAAA,OAAO,EAAEY,KAAK,CAAC,MAAD;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcI,QAAC,YAAD;AAAe,UAAA,OAAO,EAAEc,WAAW,CAACd,KAAK,CAAC,MAAD,CAAN;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA,SAA4CA,KAA5C;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH,KApBA,CAhBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH;;GAxEuBV,Q;UAEJjB,S;;;KAFIiB,Q;;AA0ExB,SAASwB,WAAT,CAAqBC,KAArB,EAA2B;AACvB,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAGD,KAAK,GAAG,MAAM,IAAjB,EAAsB;AAA6B;AAC/CC,IAAAA,IAAI,GAAGD,KAAK,CAACE,OAAN,CAAc,CAAd,IAAmB,GAA1B;AACH,GAFD,MAEM,IAAGF,KAAK,GAAG,MAAM,IAAN,GAAa,IAAxB,EAA6B;AAAa;AAC5CC,IAAAA,IAAI,GAAG,CAACD,KAAK,GAAC,IAAP,EAAaE,OAAb,CAAqB,CAArB,IAA0B,IAAjC;AACH,GAFK,MAEA,IAAGF,KAAK,GAAG,MAAM,IAAN,GAAa,IAAb,GAAoB,IAA/B,EAAoC;AAAS;AAC/CC,IAAAA,IAAI,GAAG,CAACD,KAAK,IAAE,OAAO,IAAT,CAAN,EAAsBE,OAAtB,CAA8B,CAA9B,IAAmC,IAA1C;AACH,GAFK,MAED;AAA6C;AAC9CD,IAAAA,IAAI,GAAG,CAACD,KAAK,IAAE,OAAO,IAAP,GAAc,IAAhB,CAAN,EAA6BE,OAA7B,CAAqC,CAArC,IAA0C,IAAjD;AACH;;AAED,MAAIC,OAAO,GAAGF,IAAI,GAAG,EAArB,CAZuB,CAYyB;;AAChD,MAAIlB,KAAK,GAAGoB,OAAO,CAAChB,OAAR,CAAgB,GAAhB,CAAZ,CAbuB,CAa8B;;AACrD,MAAIiB,GAAG,GAAGD,OAAO,CAACE,MAAR,CAAetB,KAAK,GAAG,CAAvB,EAA0B,CAA1B,CAAV,CAduB,CAc2B;;AAClD,MAAGqB,GAAG,IAAI,IAAV,EAAe;AAAiC;AAC5C,WAAOD,OAAO,CAACG,SAAR,CAAkB,CAAlB,EAAqBvB,KAArB,IAA8BoB,OAAO,CAACE,MAAR,CAAetB,KAAK,GAAG,CAAvB,EAA0B,CAA1B,CAArC;AACH;;AACD,SAAOkB,IAAP;AACH","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {FileIndex} from \"../../common/Types\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginLeft:'32px',\n        marginRight:'32px',\n        padding: '2px 4px',\n        paddingRight: '16px',\n        width: 800,\n        backgroundColor: theme.palette.background.paper,\n    },\n    listItem: {\n        height: 40\n    },\n    checkboxlistlabelname: {\n        width: 500,\n    },\n    listDate:{\n        width:200,\n        alignItems: \"left\",\n    }\n}));\n\nexport default function FileZone(props) {\n    const callback = props.callback;\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState([0]);\n    let allSelect = false;\n    // @ts-ignore\n    const index:FileIndex = props.index;\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    const allToggle =(event)=>{\n        const currentChecked = event.target.checked;\n        if(currentChecked){\n            allSelect=true;\n        }else{\n            allSelect = false;\n        }\n        setChecked(checked)\n        callback();\n    }\n\n    return (\n        <List className={classes.root}>\n            <ListItem className={classes.listItem}>\n                <ListItemIcon>\n                    <Checkbox\n                        onChange={allToggle}\n                        edge=\"start\"\n                        disableRipple\n                        inputProps={{'aria-labelledby': 'all_check'}}\n                    />\n                </ListItemIcon>\n                <ListItemText className={classes.checkboxlistlabelname} primary={`Name`}/>\n                <ListItemText className={classes.listDate} primary={`Last Modified`}/>\n                <ListItemText  primary={`Size`}/>\n            </ListItem>\n            <Divider component=\"li\" />\n\n            {index.paths.map((value) => {\n                const labelId = `checkbox-list-label-${value}`;\n                return (\n                    <ListItem className={classes.listItem} key={value} role={undefined} dense button\n                              onClick={handleToggle(value)}>\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={allSelect || checked.indexOf(value) !== -1}\n                                tabIndex={-1}\n                                disableRipple\n                                inputProps={{'aria-labelledby': labelId}}\n                            />\n                        </ListItemIcon>\n                        <ListItemText className={classes.checkboxlistlabelname} id={labelId}\n                                      primary={value['name']}/>\n                        <ListItemText className={classes.listDate}  primary={value['date']}/>\n                        <ListItemText  primary={getFileSize(value['size'])}/>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n}\n\nfunction getFileSize(limit){\n    var size = \"\";\n    if(limit < 0.1 * 1024){                            //小于0.1KB，则转化成B\n        size = limit.toFixed(2) + \"B\"\n    }else if(limit < 0.1 * 1024 * 1024){            //小于0.1MB，则转化成KB\n        size = (limit/1024).toFixed(2) + \"KB\"\n    }else if(limit < 0.1 * 1024 * 1024 * 1024){        //小于0.1GB，则转化成MB\n        size = (limit/(1024 * 1024)).toFixed(2) + \"MB\"\n    }else{                                            //其他转化成GB\n        size = (limit/(1024 * 1024 * 1024)).toFixed(2) + \"GB\"\n    }\n\n    var sizeStr = size + \"\";                        //转成字符串\n    var index = sizeStr.indexOf(\".\");                    //获取小数点处的索引\n    var dou = sizeStr.substr(index + 1 ,2)            //获取小数点后两位的值\n    if(dou == \"00\"){                                //判断后两位是否为00，如果是则删除00\n        return sizeStr.substring(0, index) + sizeStr.substr(index + 3, 2)\n    }\n    return size;\n}\n"]},"metadata":{},"sourceType":"module"}