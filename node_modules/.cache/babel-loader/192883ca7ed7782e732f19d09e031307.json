{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js\";\nimport * as React from \"react\";\nimport { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst onDrop = useCallback(acceptedFiles => {// Do something with the files\n}, []);\nconst {\n  getRootProps,\n  getInputProps,\n  isDragActive\n} = useDropzone({\n  onDrop\n});\nexport class DashboardPage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drop the files here ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js"],"names":["React","useCallback","useDropzone","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","DashboardPage","Component","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,QAA0B,gBAA1B;;AAEA,MAAMC,MAAM,GAAGF,WAAW,CAACG,aAAa,IAAI,CACxC;AACH,CAFyB,EAEvB,EAFuB,CAA1B;AAGA,MAAM;AAACC,EAAAA,YAAD;AAAeC,EAAAA,aAAf;AAA8BC,EAAAA;AAA9B,IAA8CL,WAAW,CAAC;AAACC,EAAAA;AAAD,CAAD,CAA/D;AAEA,OAAO,MAAMK,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA2C;AAC9CC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAASL,YAAY,EAArB;AAAA,8BACI,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQC,YAAY,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,gBAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAZ6C","sourcesContent":["import * as React from \"react\";\nimport {useCallback} from \"react\";\nimport {useDropzone} from \"react-dropzone\";\n\nconst onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n}, [])\nconst {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\nexport class DashboardPage extends React.Component{\n    render() {\n        return (\n            <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                {\n                    isDragActive ?\n                        <p>Drop the files here ...</p> :\n                        <p>Drag 'n' drop some files here, or click to select files</p>\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}