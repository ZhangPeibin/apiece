{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/components/FileZone/FileZone.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { FileIndex } from \"../../common/Types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '32px 32px',\n    padding: '2px 4px',\n    paddingRight: '16px',\n    width: 800,\n    backgroundColor: theme.palette.background.paper\n  },\n  listItem: {\n    height: 50\n  },\n  checkboxlistlabelname: {\n    width: 400\n  }\n}));\nexport default function FileZone(props) {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]); // @ts-ignore\n\n  const index = props.index;\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      className: classes.listItem,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          edge: \"start\",\n          tabIndex: -1,\n          disableRipple: true,\n          inputProps: {\n            'aria-labelledby': 'all_check'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        className: classes.checkboxlistlabelname,\n        primary: `Name`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        id: 'checkbox-list-label-modified',\n        primary: `Last Modified`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        id: 'checkbox-list-label-size',\n        primary: `Size`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), index.paths.map(value => {\n      const labelId = `checkbox-list-label-${value}`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        className: classes.listItem,\n        role: undefined,\n        dense: true,\n        button: true,\n        onClick: handleToggle(value),\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            edge: \"start\",\n            checked: checked.indexOf(value) !== -1,\n            tabIndex: -1,\n            disableRipple: true,\n            inputProps: {\n              'aria-labelledby': labelId\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          className: classes.checkboxlistlabelname,\n          id: labelId,\n          primary: `Linsdfdfsdfsdfsdfsdfsdfsdfsdfe item ${value + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          id: 'checkbox-list-label-modified',\n          primary: `Last Modified`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          id: 'checkbox-list-label-size',\n          primary: `Size`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileZone, \"0o+c9wVIlrEVOlS08q2btRlaiSQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = FileZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileZone\");","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/components/FileZone/FileZone.js"],"names":["React","makeStyles","List","ListItem","ListItemIcon","ListItemText","Checkbox","FileIndex","useStyles","theme","root","margin","padding","paddingRight","width","backgroundColor","palette","background","paper","listItem","height","checkboxlistlabelname","FileZone","props","classes","checked","setChecked","useState","index","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","paths","map","labelId","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {FileIndex} from \"../../common/Types\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '32px 32px',\n        padding: '2px 4px',\n        paddingRight: '16px',\n        width: 800,\n        backgroundColor: theme.palette.background.paper,\n    },\n    listItem: {\n        height: 50\n    },\n    checkboxlistlabelname: {\n        width: 400,\n    }\n}));\n\nexport default function FileZone(props) {\n\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState([0]);\n\n    // @ts-ignore\n    const index:FileIndex = props.index;\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    return (\n        <List className={classes.root}>\n            <ListItem className={classes.listItem}>\n                <ListItemIcon>\n                    <Checkbox\n                        edge=\"start\"\n                        tabIndex={-1}\n                        disableRipple\n                        inputProps={{'aria-labelledby': 'all_check'}}\n                    />\n                </ListItemIcon>\n                <ListItemText className={classes.checkboxlistlabelname} primary={`Name`}/>\n                <ListItemText id={'checkbox-list-label-modified'} primary={`Last Modified`}/>\n                <ListItemText id={'checkbox-list-label-size'} primary={`Size`}/>\n            </ListItem>\n\n            {index.paths.map((value) => {\n                const labelId = `checkbox-list-label-${value}`;\n\n                return (\n                    <ListItem className={classes.listItem} key={value} role={undefined} dense button\n                              onClick={handleToggle(value)}>\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={checked.indexOf(value) !== -1}\n                                tabIndex={-1}\n                                disableRipple\n                                inputProps={{'aria-labelledby': labelId}}\n                            />\n                        </ListItemIcon>\n                        <ListItemText className={classes.checkboxlistlabelname} id={labelId}\n                                      primary={`Linsdfdfsdfsdfsdfsdfsdfsdfsdfe item ${value + 1}`}/>\n                        <ListItemText id={'checkbox-list-label-modified'} primary={`Last Modified`}/>\n                        <ListItemText id={'checkbox-list-label-size'} primary={`Size`}/>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n}"]},"metadata":{},"sourceType":"module"}