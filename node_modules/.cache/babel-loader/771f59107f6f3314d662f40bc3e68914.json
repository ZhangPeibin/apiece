{"ast":null,"code":"import { ThreadID } from '@textile/threads-id';\nvar encode_1 = encode;\nvar MSB = 0x80,\n    REST = 0x7F,\n    MSBALL = ~REST,\n    INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0;\n    throw new RangeError('Could not encode varint');\n  }\n\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while (num >= INT) {\n    out[offset++] = num & 0xFF | MSB;\n    num /= 128;\n  }\n\n  while (num & MSBALL) {\n    out[offset++] = num & 0xFF | MSB;\n    num >>>= 7;\n  }\n\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\n\nvar decode = read;\nvar MSB$1 = 0x80,\n    REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res = 0,\n      offset = offset || 0,\n      shift = 0,\n      counter = offset,\n      b,\n      l = buf.length;\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n\n  read.bytes = counter - offset;\n  return res;\n}\n\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\n\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nconst word = '[a-fA-F\\\\d:]';\n\nconst b = options => options && options.includeBoundaries ? `(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))` : '';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\nconst v6seg = '[a-fA-F\\\\d]{1,4}';\nconst v6 = `\n(\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(:${v6seg}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(:${v6seg}){0,1}:${v4}|(:${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(:${v6seg}){0,2}:${v4}|(:${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(:${v6seg}){0,3}:${v4}|(:${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(:${v6seg}){0,4}:${v4}|(:${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::((?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim(); // Pre-compile only the exact regexes because adding a global flag make regexes stateful\n\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ip = options => options && options.exact ? v46Exact : new RegExp(`(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(options)})`, 'g');\n\nip.v4 = options => options && options.exact ? v4exact : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\n\nip.v6 = options => options && options.exact ? v6exact : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\nvar ipRegex = ip;\n\nconst isIp = string => ipRegex({\n  exact: true\n}).test(string);\n\nisIp.v4 = string => ipRegex.v4({\n  exact: true\n}).test(string);\n\nisIp.v6 = string => ipRegex.v6({\n  exact: true\n}).test(string);\n\nisIp.version = string => isIp(string) ? isIp.v4(string) ? 4 : 6 : undefined;\n\nvar isIp_1 = isIp; // base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n\nfunction base(ALPHABET) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n\n  var BASE_MAP = new Uint8Array(256);\n\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n\n    BASE_MAP[xc] = i;\n  }\n\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n\n  function encode(source) {\n    if (source instanceof Uint8Array) ;else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n\n    if (source.length === 0) {\n      return '';\n    } // Skip & count leading zeroes.\n\n\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    } // Allocate enough space in big-endian base58 representation.\n\n\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size); // Process the bytes.\n\n    while (pbegin !== pend) {\n      var carry = source[pbegin]; // Apply \"b58 = b58 * 256 + ch\".\n\n      var i = 0;\n\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n\n      length = i;\n      pbegin++;\n    } // Skip leading zeroes in base58 result.\n\n\n    var it2 = size - length;\n\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    } // Translate the result into a string.\n\n\n    var str = LEADER.repeat(zeroes);\n\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n\n    return str;\n  }\n\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n\n    var psz = 0; // Skip leading spaces.\n\n    if (source[psz] === ' ') {\n      return;\n    } // Skip and count leading '1's.\n\n\n    var zeroes = 0;\n    var length = 0;\n\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    } // Allocate enough space in big-endian base256 representation.\n\n\n    var size = (source.length - psz) * FACTOR + 1 >>> 0; // log(58) / log(256), rounded up.\n\n    var b256 = new Uint8Array(size); // Process the characters.\n\n    while (source[psz]) {\n      // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]; // Invalid character\n\n      if (carry === 255) {\n        return;\n      }\n\n      var i = 0;\n\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n\n      length = i;\n      psz++;\n    } // Skip trailing spaces.\n\n\n    if (source[psz] === ' ') {\n      return;\n    } // Skip leading zeroes in b256.\n\n\n    var it4 = size - length;\n\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n\n    return vch;\n  }\n\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n\n    if (buffer) {\n      return buffer;\n    }\n\n    throw new Error('Non-base' + BASE + ' character');\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\n\nvar src = base;\n\nfunction createCommonjsModule(fn) {\n  var module = {\n    exports: {}\n  };\n  return fn(module, module.exports), module.exports;\n}\n\nvar isBufferBrowser = function isBuffer(arg) {\n  return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n\n      var TempCtor = function () {};\n\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    };\n  }\n});\nvar util = createCommonjsModule(function (module, exports) {\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n  var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n\n    return descriptors;\n  };\n\n  var formatRegExp = /%[sdj%]/g;\n\n  exports.format = function (f) {\n    if (!isString(f)) {\n      var objects = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        objects.push(inspect(arguments[i]));\n      }\n\n      return objects.join(' ');\n    }\n\n    var i = 1;\n    var args = arguments;\n    var len = args.length;\n    var str = String(f).replace(formatRegExp, function (x) {\n      if (x === '%%') return '%';\n      if (i >= len) return x;\n\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n\n        case '%d':\n          return Number(args[i++]);\n\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n\n        default:\n          return x;\n      }\n    });\n\n    for (var x = args[i]; i < len; x = args[++i]) {\n      if (isNull(x) || !isObject(x)) {\n        str += ' ' + x;\n      } else {\n        str += ' ' + inspect(x);\n      }\n    }\n\n    return str;\n  }; // Mark that a method should not be used.\n  // Returns a modified function which warns once by default.\n  // If --no-deprecation is set, then it is a no-op.\n\n\n  exports.deprecate = function (fn, msg) {\n    if (typeof process !== 'undefined' && process.noDeprecation === true) {\n      return fn;\n    } // Allow for deprecating things in the process of starting up.\n\n\n    if (typeof process === 'undefined') {\n      return function () {\n        return exports.deprecate(fn, msg).apply(this, arguments);\n      };\n    }\n\n    var warned = false;\n\n    function deprecated() {\n      if (!warned) {\n        if (process.throwDeprecation) {\n          throw new Error(msg);\n        } else if (process.traceDeprecation) {\n          console.trace(msg);\n        } else {\n          console.error(msg);\n        }\n\n        warned = true;\n      }\n\n      return fn.apply(this, arguments);\n    }\n\n    return deprecated;\n  };\n\n  var debugs = {};\n  var debugEnviron;\n\n  exports.debuglog = function (set) {\n    if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';\n    set = set.toUpperCase();\n\n    if (!debugs[set]) {\n      if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n        var pid = process.pid;\n\n        debugs[set] = function () {\n          var msg = exports.format.apply(exports, arguments);\n          console.error('%s %d: %s', set, pid, msg);\n        };\n      } else {\n        debugs[set] = function () {};\n      }\n    }\n\n    return debugs[set];\n  };\n  /**\r\n   * Echos the value of a value. Trys to print the value out\r\n   * in the best way possible given the different types.\r\n   *\r\n   * @param {Object} obj The object to print out.\r\n   * @param {Object} opts Optional options object that alters the output.\r\n   */\n\n  /* legacy: obj, showHidden, depth, colors*/\n\n\n  function inspect(obj, opts) {\n    // default options\n    var ctx = {\n      seen: [],\n      stylize: stylizeNoColor\n    }; // legacy...\n\n    if (arguments.length >= 3) ctx.depth = arguments[2];\n    if (arguments.length >= 4) ctx.colors = arguments[3];\n\n    if (isBoolean(opts)) {\n      // legacy...\n      ctx.showHidden = opts;\n    } else if (opts) {\n      // got an \"options\" object\n      exports._extend(ctx, opts);\n    } // set default options\n\n\n    if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n    if (isUndefined(ctx.depth)) ctx.depth = 2;\n    if (isUndefined(ctx.colors)) ctx.colors = false;\n    if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n    if (ctx.colors) ctx.stylize = stylizeWithColor;\n    return formatValue(ctx, obj, ctx.depth);\n  }\n\n  exports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\n  inspect.colors = {\n    'bold': [1, 22],\n    'italic': [3, 23],\n    'underline': [4, 24],\n    'inverse': [7, 27],\n    'white': [37, 39],\n    'grey': [90, 39],\n    'black': [30, 39],\n    'blue': [34, 39],\n    'cyan': [36, 39],\n    'green': [32, 39],\n    'magenta': [35, 39],\n    'red': [31, 39],\n    'yellow': [33, 39]\n  }; // Don't use 'blue' not visible on cmd.exe\n\n  inspect.styles = {\n    'special': 'cyan',\n    'number': 'yellow',\n    'boolean': 'yellow',\n    'undefined': 'grey',\n    'null': 'bold',\n    'string': 'green',\n    'date': 'magenta',\n    // \"name\": intentionally not styling\n    'regexp': 'red'\n  };\n\n  function stylizeWithColor(str, styleType) {\n    var style = inspect.styles[styleType];\n\n    if (style) {\n      return '\\u001b[' + inspect.colors[style][0] + 'm' + str + '\\u001b[' + inspect.colors[style][1] + 'm';\n    } else {\n      return str;\n    }\n  }\n\n  function stylizeNoColor(str, styleType) {\n    return str;\n  }\n\n  function arrayToHash(array) {\n    var hash = {};\n    array.forEach(function (val, idx) {\n      hash[val] = true;\n    });\n    return hash;\n  }\n\n  function formatValue(ctx, value, recurseTimes) {\n    // Provide a hook for user-specified inspect functions.\n    // Check that value is an object with an inspect function on it\n    if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n    value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.\n    !(value.constructor && value.constructor.prototype === value)) {\n      var ret = value.inspect(recurseTimes, ctx);\n\n      if (!isString(ret)) {\n        ret = formatValue(ctx, ret, recurseTimes);\n      }\n\n      return ret;\n    } // Primitive types cannot have properties\n\n\n    var primitive = formatPrimitive(ctx, value);\n\n    if (primitive) {\n      return primitive;\n    } // Look up the keys of the object.\n\n\n    var keys = Object.keys(value);\n    var visibleKeys = arrayToHash(keys);\n\n    if (ctx.showHidden) {\n      keys = Object.getOwnPropertyNames(value);\n    } // IE doesn't make error fields non-enumerable\n    // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n    if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n      return formatError(value);\n    } // Some type of object without properties can be shortcutted.\n\n\n    if (keys.length === 0) {\n      if (isFunction(value)) {\n        var name = value.name ? ': ' + value.name : '';\n        return ctx.stylize('[Function' + name + ']', 'special');\n      }\n\n      if (isRegExp(value)) {\n        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n      }\n\n      if (isDate(value)) {\n        return ctx.stylize(Date.prototype.toString.call(value), 'date');\n      }\n\n      if (isError(value)) {\n        return formatError(value);\n      }\n    }\n\n    var base = '',\n        array = false,\n        braces = ['{', '}']; // Make Array say that they are Array\n\n    if (isArray(value)) {\n      array = true;\n      braces = ['[', ']'];\n    } // Make functions say that they are functions\n\n\n    if (isFunction(value)) {\n      var n = value.name ? ': ' + value.name : '';\n      base = ' [Function' + n + ']';\n    } // Make RegExps say that they are RegExps\n\n\n    if (isRegExp(value)) {\n      base = ' ' + RegExp.prototype.toString.call(value);\n    } // Make dates with properties first say the date\n\n\n    if (isDate(value)) {\n      base = ' ' + Date.prototype.toUTCString.call(value);\n    } // Make error with message first say the error\n\n\n    if (isError(value)) {\n      base = ' ' + formatError(value);\n    }\n\n    if (keys.length === 0 && (!array || value.length == 0)) {\n      return braces[0] + base + braces[1];\n    }\n\n    if (recurseTimes < 0) {\n      if (isRegExp(value)) {\n        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n      } else {\n        return ctx.stylize('[Object]', 'special');\n      }\n    }\n\n    ctx.seen.push(value);\n    var output;\n\n    if (array) {\n      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n    } else {\n      output = keys.map(function (key) {\n        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n      });\n    }\n\n    ctx.seen.pop();\n    return reduceToSingleString(output, base, braces);\n  }\n\n  function formatPrimitive(ctx, value) {\n    if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n    if (isString(value)) {\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n    }\n\n    if (isNumber(value)) return ctx.stylize('' + value, 'number');\n    if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n    if (isNull(value)) return ctx.stylize('null', 'null');\n  }\n\n  function formatError(value) {\n    return '[' + Error.prototype.toString.call(value) + ']';\n  }\n\n  function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n    var output = [];\n\n    for (var i = 0, l = value.length; i < l; ++i) {\n      if (hasOwnProperty(value, String(i))) {\n        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n      } else {\n        output.push('');\n      }\n    }\n\n    keys.forEach(function (key) {\n      if (!key.match(/^\\d+$/)) {\n        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n      }\n    });\n    return output;\n  }\n\n  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n    var name, str, desc;\n    desc = Object.getOwnPropertyDescriptor(value, key) || {\n      value: value[key]\n    };\n\n    if (desc.get) {\n      if (desc.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (desc.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n\n    if (!hasOwnProperty(visibleKeys, key)) {\n      name = '[' + key + ']';\n    }\n\n    if (!str) {\n      if (ctx.seen.indexOf(desc.value) < 0) {\n        if (isNull(recurseTimes)) {\n          str = formatValue(ctx, desc.value, null);\n        } else {\n          str = formatValue(ctx, desc.value, recurseTimes - 1);\n        }\n\n        if (str.indexOf('\\n') > -1) {\n          if (array) {\n            str = str.split('\\n').map(function (line) {\n              return '  ' + line;\n            }).join('\\n').substr(2);\n          } else {\n            str = '\\n' + str.split('\\n').map(function (line) {\n              return '   ' + line;\n            }).join('\\n');\n          }\n        }\n      } else {\n        str = ctx.stylize('[Circular]', 'special');\n      }\n    }\n\n    if (isUndefined(name)) {\n      if (array && key.match(/^\\d+$/)) {\n        return str;\n      }\n\n      name = JSON.stringify('' + key);\n\n      if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n        name = name.substr(1, name.length - 2);\n        name = ctx.stylize(name, 'name');\n      } else {\n        name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n        name = ctx.stylize(name, 'string');\n      }\n    }\n\n    return name + ': ' + str;\n  }\n\n  function reduceToSingleString(output, base, braces) {\n    var length = output.reduce(function (prev, cur) {\n      if (cur.indexOf('\\n') >= 0) ;\n      return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n    }, 0);\n\n    if (length > 60) {\n      return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n    }\n\n    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n  } // NOTE: These type checking functions intentionally don't use `instanceof`\n  // because it is fragile and can be easily faked with `Object.create()`.\n\n\n  function isArray(ar) {\n    return Array.isArray(ar);\n  }\n\n  exports.isArray = isArray;\n\n  function isBoolean(arg) {\n    return typeof arg === 'boolean';\n  }\n\n  exports.isBoolean = isBoolean;\n\n  function isNull(arg) {\n    return arg === null;\n  }\n\n  exports.isNull = isNull;\n\n  function isNullOrUndefined(arg) {\n    return arg == null;\n  }\n\n  exports.isNullOrUndefined = isNullOrUndefined;\n\n  function isNumber(arg) {\n    return typeof arg === 'number';\n  }\n\n  exports.isNumber = isNumber;\n\n  function isString(arg) {\n    return typeof arg === 'string';\n  }\n\n  exports.isString = isString;\n\n  function isSymbol(arg) {\n    return typeof arg === 'symbol';\n  }\n\n  exports.isSymbol = isSymbol;\n\n  function isUndefined(arg) {\n    return arg === void 0;\n  }\n\n  exports.isUndefined = isUndefined;\n\n  function isRegExp(re) {\n    return isObject(re) && objectToString(re) === '[object RegExp]';\n  }\n\n  exports.isRegExp = isRegExp;\n\n  function isObject(arg) {\n    return typeof arg === 'object' && arg !== null;\n  }\n\n  exports.isObject = isObject;\n\n  function isDate(d) {\n    return isObject(d) && objectToString(d) === '[object Date]';\n  }\n\n  exports.isDate = isDate;\n\n  function isError(e) {\n    return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n  }\n\n  exports.isError = isError;\n\n  function isFunction(arg) {\n    return typeof arg === 'function';\n  }\n\n  exports.isFunction = isFunction;\n\n  function isPrimitive(arg) {\n    return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol\n    typeof arg === 'undefined';\n  }\n\n  exports.isPrimitive = isPrimitive;\n  exports.isBuffer = isBufferBrowser;\n\n  function objectToString(o) {\n    return Object.prototype.toString.call(o);\n  }\n\n  function pad(n) {\n    return n < 10 ? '0' + n.toString(10) : n.toString(10);\n  }\n\n  var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\n  function timestamp() {\n    var d = new Date();\n    var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n    return [d.getDate(), months[d.getMonth()], time].join(' ');\n  } // log is just a thin wrapper to console.log that prepends a timestamp\n\n\n  exports.log = function () {\n    console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n  };\n  /**\r\n   * Inherit the prototype methods from one constructor into another.\r\n   *\r\n   * The Function.prototype.inherits from lang.js rewritten as a standalone\r\n   * function (not on Function.prototype). NOTE: If this file is to be loaded\r\n   * during bootstrapping this function needs to be rewritten using some native\r\n   * functions as prototype setup using normal JavaScript does not work as\r\n   * expected during bootstrapping (see mirror.js in r114903).\r\n   *\r\n   * @param {function} ctor Constructor function which needs to inherit the\r\n   *     prototype.\r\n   * @param {function} superCtor Constructor function to inherit prototype from.\r\n   */\n\n\n  exports.inherits = inherits_browser;\n\n  exports._extend = function (origin, add) {\n    // Don't do anything if add isn't an object\n    if (!add || !isObject(add)) return origin;\n    var keys = Object.keys(add);\n    var i = keys.length;\n\n    while (i--) {\n      origin[keys[i]] = add[keys[i]];\n    }\n\n    return origin;\n  };\n\n  function hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n  }\n\n  var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\n  exports.promisify = function promisify(original) {\n    if (typeof original !== 'function') throw new TypeError('The \"original\" argument must be of type Function');\n\n    if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n      var fn = original[kCustomPromisifiedSymbol];\n\n      if (typeof fn !== 'function') {\n        throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n      }\n\n      Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n        value: fn,\n        enumerable: false,\n        writable: false,\n        configurable: true\n      });\n      return fn;\n    }\n\n    function fn() {\n      var promiseResolve, promiseReject;\n      var promise = new Promise(function (resolve, reject) {\n        promiseResolve = resolve;\n        promiseReject = reject;\n      });\n      var args = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n\n      args.push(function (err, value) {\n        if (err) {\n          promiseReject(err);\n        } else {\n          promiseResolve(value);\n        }\n      });\n\n      try {\n        original.apply(this, args);\n      } catch (err) {\n        promiseReject(err);\n      }\n\n      return promise;\n    }\n\n    Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n    if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn,\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n    return Object.defineProperties(fn, getOwnPropertyDescriptors(original));\n  };\n\n  exports.promisify.custom = kCustomPromisifiedSymbol;\n\n  function callbackifyOnRejected(reason, cb) {\n    // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n    // Because `null` is a special error value in callbacks which means \"no error\n    // occurred\", we error-wrap so the callback consumer can distinguish between\n    // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n    if (!reason) {\n      var newReason = new Error('Promise was rejected with a falsy value');\n      newReason.reason = reason;\n      reason = newReason;\n    }\n\n    return cb(reason);\n  }\n\n  function callbackify(original) {\n    if (typeof original !== 'function') {\n      throw new TypeError('The \"original\" argument must be of type Function');\n    } // We DO NOT return the promise as it gives the user a false sense that\n    // the promise is actually somehow related to the callback's execution\n    // and that the callback throwing will reject the promise.\n\n\n    function callbackified() {\n      var args = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n\n      var maybeCb = args.pop();\n\n      if (typeof maybeCb !== 'function') {\n        throw new TypeError('The last argument must be of type Function');\n      }\n\n      var self = this;\n\n      var cb = function () {\n        return maybeCb.apply(self, arguments);\n      }; // In true node style we process the callback on `nextTick` with all the\n      // implications (stack, `uncaughtException`, `async_hooks`)\n\n\n      original.apply(this, args).then(function (ret) {\n        process.nextTick(cb, null, ret);\n      }, function (rej) {\n        process.nextTick(callbackifyOnRejected, rej, cb);\n      });\n    }\n\n    Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n    Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));\n    return callbackified;\n  }\n\n  exports.callbackify = callbackify;\n});\nvar TextEncoder_1 = typeof TextEncoder !== \"undefined\" ? TextEncoder : util.TextEncoder;\nvar TextDecoder_1 = typeof TextDecoder !== \"undefined\" ? TextDecoder : util.TextDecoder;\nvar lib = {\n  TextEncoder: TextEncoder_1,\n  TextDecoder: TextDecoder_1\n}; // @ts-ignore\n\nconst {\n  TextEncoder: TextEncoder$1,\n  TextDecoder: TextDecoder$1\n} = lib;\nconst textDecoder = new TextDecoder$1();\n/**\r\n * @param {ArrayBufferView|ArrayBuffer} bytes\r\n * @returns {string}\r\n */\n\nconst decodeText = bytes => textDecoder.decode(bytes);\n\nconst textEncoder = new TextEncoder$1();\n/**\r\n * @param {string} text\r\n * @returns {Uint8Array}\r\n */\n\nconst encodeText = text => textEncoder.encode(text);\n/**\r\n * Returns a new Uint8Array created by concatenating the passed Arrays\r\n *\r\n * @param {Array<ArrayLike<number>>} arrs\r\n * @param {number} length\r\n * @returns {Uint8Array}\r\n */\n\n\nfunction concat(arrs, length) {\n  const output = new Uint8Array(length);\n  let offset = 0;\n\n  for (const arr of arrs) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n\n  return output;\n}\n\nvar util$1 = {\n  decodeText,\n  encodeText,\n  concat\n};\nconst {\n  encodeText: encodeText$1\n} = util$1;\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/** @typedef {import(\"./types\").BaseName} BaseName */\n\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n/**\r\n * Class to encode/decode in the supported Bases\r\n *\r\n */\n\nclass Base {\n  /**\r\n   * @param {BaseName} name\r\n   * @param {BaseCode} code\r\n   * @param {CodecFactory} factory\r\n   * @param {string} alphabet\r\n   */\n  constructor(name, code, factory, alphabet) {\n    this.name = name;\n    this.code = code;\n    this.codeBuf = encodeText$1(this.code);\n    this.alphabet = alphabet;\n    this.codec = factory(alphabet);\n  }\n  /**\r\n   * @param {Uint8Array} buf\r\n   * @returns {string}\r\n   */\n\n\n  encode(buf) {\n    return this.codec.encode(buf);\n  }\n  /**\r\n   * @param {string} string\r\n   * @returns {Uint8Array}\r\n   */\n\n\n  decode(string) {\n    for (const char of string) {\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\n        throw new Error(`invalid character '${char}' in '${string}'`);\n      }\n    }\n\n    return this.codec.decode(string);\n  }\n\n}\n\nvar base$1 = Base;\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/**\r\n * @param {string} string\r\n * @param {string} alphabet\r\n * @param {number} bitsPerChar\r\n * @returns {Uint8Array}\r\n */\n\nconst decode$1 = (string, alphabet, bitsPerChar) => {\n  // Build the character lookup table:\n  const codes = {};\n\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  } // Count the padding bytes:\n\n\n  let end = string.length;\n\n  while (string[end - 1] === '=') {\n    --end;\n  } // Allocate the output:\n\n\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0); // Parse the data:\n\n  let bits = 0; // Number of bits currently in the buffer\n\n  let buffer = 0; // Bits waiting to be written out, MSB first\n\n  let written = 0; // Next byte to write\n\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]];\n\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[i]);\n    } // Append the bits to the buffer:\n\n\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar; // Write out some bits if the buffer has a byte's worth:\n\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 0xff & buffer >> bits;\n    }\n  } // Verify that we have received just enough bits:\n\n\n  if (bits >= bitsPerChar || 0xff & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n\n  return out;\n};\n/**\r\n * @param {Uint8Array} data\r\n * @param {string} alphabet\r\n * @param {number} bitsPerChar\r\n * @returns {string}\r\n */\n\n\nconst encode$1 = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0; // Number of bits currently in the buffer\n\n  let buffer = 0; // Bits waiting to be written out, MSB first\n\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = buffer << 8 | data[i];\n    bits += 8; // Write out as much as we can:\n\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  } // Partial character:\n\n\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  } // Add padding characters until we hit a byte boundary:\n\n\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n\n  return out;\n};\n/**\r\n * RFC4648 Factory\r\n *\r\n * @param {number} bitsPerChar\r\n * @returns {CodecFactory}\r\n */\n\n\nconst rfc4648 = bitsPerChar => alphabet => {\n  return {\n    /**\r\n     * @param {Uint8Array} input\r\n     * @returns {string}\r\n     */\n    encode(input) {\n      return encode$1(input, alphabet, bitsPerChar);\n    },\n\n    /**\r\n     * @param {string} input\r\n     * @returns {Uint8Array}\r\n     */\n    decode(input) {\n      return decode$1(input, alphabet, bitsPerChar);\n    }\n\n  };\n};\n\nvar rfc4648_1 = {\n  rfc4648\n};\nconst {\n  rfc4648: rfc4648$1\n} = rfc4648_1;\nconst {\n  decodeText: decodeText$1,\n  encodeText: encodeText$2\n} = util$1;\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/** @typedef {import('./types').Codec} Codec */\n\n/** @typedef {import('./types').BaseName} BaseName */\n\n/** @typedef {import('./types').BaseCode} BaseCode */\n\n/** @type {CodecFactory} */\n\nconst identity = () => {\n  return {\n    encode: decodeText$1,\n    decode: encodeText$2\n  };\n};\n/**\r\n *\r\n * name, code, implementation, alphabet\r\n *\r\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\r\n */\n\n\nconst constants = [['identity', '\\x00', identity, ''], ['base2', '0', rfc4648$1(1), '01'], ['base8', '7', rfc4648$1(3), '01234567'], ['base10', '9', src, '0123456789'], ['base16', 'f', rfc4648$1(4), '0123456789abcdef'], ['base16upper', 'F', rfc4648$1(4), '0123456789ABCDEF'], ['base32hex', 'v', rfc4648$1(5), '0123456789abcdefghijklmnopqrstuv'], ['base32hexupper', 'V', rfc4648$1(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'], ['base32hexpad', 't', rfc4648$1(5), '0123456789abcdefghijklmnopqrstuv='], ['base32hexpadupper', 'T', rfc4648$1(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='], ['base32', 'b', rfc4648$1(5), 'abcdefghijklmnopqrstuvwxyz234567'], ['base32upper', 'B', rfc4648$1(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'], ['base32pad', 'c', rfc4648$1(5), 'abcdefghijklmnopqrstuvwxyz234567='], ['base32padupper', 'C', rfc4648$1(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='], ['base32z', 'h', rfc4648$1(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'], ['base36', 'k', src, '0123456789abcdefghijklmnopqrstuvwxyz'], ['base36upper', 'K', src, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'], ['base58btc', 'z', src, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'], ['base58flickr', 'Z', src, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'], ['base64', 'm', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'], ['base64pad', 'M', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='], ['base64url', 'u', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'], ['base64urlpad', 'U', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']];\n/** @type {Record<BaseName,Base>} */\n\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new base$1(tupple[0], tupple[1], tupple[2], tupple[3]);\n  return prev;\n},\n/** @type {Record<BaseName,Base>} */\n{});\n/** @type {Record<BaseCode,Base>} */\n\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]];\n  return prev;\n},\n/** @type {Record<BaseCode,Base>} */\n{});\nvar constants_1 = {\n  names,\n  codes\n};\nconst {\n  names: names$1\n} = constants_1;\nconst {\n  TextDecoder: TextDecoder$2\n} = lib;\nconst utf8Decoder = new TextDecoder$2('utf8');\n/**\r\n * Turns a Uint8Array of bytes into a string with each\r\n * character being the char code of the corresponding byte\r\n *\r\n * @param {Uint8Array} array The array to turn into a string\r\n * @returns {String}\r\n */\n\nfunction uint8ArrayToAsciiString(array) {\n  let string = '';\n\n  for (let i = 0; i < array.length; i++) {\n    string += String.fromCharCode(array[i]);\n  }\n\n  return string;\n}\n/**\r\n * Turns a `Uint8Array` into a string.\r\n *\r\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\r\n *\r\n * Also `ascii` which is similar to node's 'binary' encoding.\r\n *\r\n * @param {Uint8Array} array The array to turn into a string\r\n * @param {String} [encoding=utf8] The encoding to use\r\n * @returns {String}\r\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\r\n */\n\n\nfunction toString(array, encoding = 'utf8') {\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return utf8Decoder.decode(array);\n  }\n\n  if (encoding === 'ascii') {\n    return uint8ArrayToAsciiString(array);\n  }\n\n  const codec = names$1[encoding];\n\n  if (!codec) {\n    throw new Error('Unknown base');\n  }\n\n  return codec.encode(array);\n}\n\nvar toString_1 = toString;\nconst isIP = isIp_1;\nconst isV4 = isIp_1.v4;\nconst isV6 = isIp_1.v6; // Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n\nconst toBytes = function (ip, buff, offset) {\n  offset = ~~offset;\n  var result;\n\n  if (isV4(ip)) {\n    result = buff || new Uint8Array(offset + 4);\n    ip.split(/\\./g).map(function (byte) {\n      result[offset++] = parseInt(byte, 10) & 0xff;\n    });\n  } else if (isV6(ip)) {\n    var sections = ip.split(':', 8);\n    var i;\n\n    for (i = 0; i < sections.length; i++) {\n      var isv4 = isV4(sections[i]);\n      var v4Buffer;\n\n      if (isv4) {\n        v4Buffer = toBytes(sections[i]);\n        sections[i] = toString_1(v4Buffer.slice(0, 2), 'base16');\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, toString_1(v4Buffer.slice(2, 4), 'base16'));\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0');\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0');\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n\n      var argv = [i, '1'];\n\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0');\n      }\n\n      sections.splice.apply(sections, argv);\n    }\n\n    result = buff || new Uint8Array(offset + 16);\n\n    for (i = 0; i < sections.length; i++) {\n      var word = parseInt(sections[i], 16);\n      result[offset++] = word >> 8 & 0xff;\n      result[offset++] = word & 0xff;\n    }\n  }\n\n  if (!result) {\n    throw Error('Invalid ip address: ' + ip);\n  }\n\n  return result;\n}; // Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\n\n\nconst toString$1 = function (buff, offset, length) {\n  offset = ~~offset;\n  length = length || buff.length - offset;\n  var result = [];\n  var string;\n  const view = new DataView(buff.buffer);\n\n  if (length === 4) {\n    // IPv4\n    for (let i = 0; i < length; i++) {\n      result.push(buff[offset + i]);\n    }\n\n    string = result.join('.');\n  } else if (length === 16) {\n    // IPv6\n    for (let i = 0; i < length; i += 2) {\n      result.push(view.getUint16(offset + i).toString(16));\n    }\n\n    string = result.join(':');\n    string = string.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3');\n    string = string.replace(/:{3,4}/, '::');\n  }\n\n  return string;\n};\n\nvar ip$1 = {\n  isIP,\n  isV4,\n  isV6,\n  toBytes,\n  toString: toString$1\n};\n\nfunction Protocols(proto) {\n  if (typeof proto === 'number') {\n    if (Protocols.codes[proto]) {\n      return Protocols.codes[proto];\n    }\n\n    throw new Error('no protocol with code: ' + proto);\n  } else if (typeof proto === 'string' || proto instanceof String) {\n    if (Protocols.names[proto]) {\n      return Protocols.names[proto];\n    }\n\n    throw new Error('no protocol with name: ' + proto);\n  }\n\n  throw new Error('invalid protocol id type: ' + proto);\n}\n\nconst V = -1;\nProtocols.lengthPrefixedVarSize = V;\nProtocols.V = V;\nProtocols.table = [[4, 32, 'ip4'], [6, 16, 'tcp'], [33, 16, 'dccp'], [41, 128, 'ip6'], [42, V, 'ip6zone'], [53, V, 'dns', 'resolvable'], [54, V, 'dns4', 'resolvable'], [55, V, 'dns6', 'resolvable'], [56, V, 'dnsaddr', 'resolvable'], [132, 16, 'sctp'], [273, 16, 'udp'], [275, 0, 'p2p-webrtc-star'], [276, 0, 'p2p-webrtc-direct'], [277, 0, 'p2p-stardust'], [290, 0, 'p2p-circuit'], [301, 0, 'udt'], [302, 0, 'utp'], [400, V, 'unix', false, 'path'], // `ipfs` is added before `p2p` for legacy support.\n// All text representations will default to `p2p`, but `ipfs` will\n// still be supported\n[421, V, 'ipfs'], // `p2p` is the preferred name for 421, and is now the default\n[421, V, 'p2p'], [443, 0, 'https'], [444, 96, 'onion'], [445, 296, 'onion3'], [446, V, 'garlic64'], [460, 0, 'quic'], [477, 0, 'ws'], [478, 0, 'wss'], [479, 0, 'p2p-websocket-star'], [480, 0, 'http'], [777, V, 'memory']];\nProtocols.names = {};\nProtocols.codes = {}; // populate tables\n\nProtocols.table.map(row => {\n  const proto = p.apply(null, row);\n  Protocols.codes[proto.code] = proto;\n  Protocols.names[proto.name] = proto;\n});\nProtocols.object = p;\n\nfunction p(code, size, name, resolvable, path) {\n  return {\n    code,\n    size,\n    name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  };\n}\n\nvar protocolsTable = Protocols;\n/**\r\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\r\n *\r\n */\n\nvar src$1 = createCommonjsModule(function (module, exports) {\n  const {\n    encodeText,\n    decodeText,\n    concat\n  } = util$1;\n  /** @typedef {import('./base')} Base */\n\n  /** @typedef {import(\"./types\").BaseNameOrCode} BaseNameOrCode */\n\n  /** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n  /**\r\n   * Create a new Uint8Array with the multibase varint+code.\r\n   *\r\n   * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\r\n   * @param {Uint8Array} buf - The data to be prefixed with multibase.\r\n   * @returns {Uint8Array}\r\n   * @throws {Error} Will throw if the encoding is not supported\r\n   */\n\n  function multibase(nameOrCode, buf) {\n    if (!buf) {\n      throw new Error('requires an encoded Uint8Array');\n    }\n\n    const {\n      name,\n      codeBuf\n    } = encoding(nameOrCode);\n    validEncode(name, buf);\n    return concat([codeBuf, buf], codeBuf.length + buf.length);\n  }\n  /**\r\n   * Encode data with the specified base and add the multibase prefix.\r\n   *\r\n   * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\r\n   * @param {Uint8Array} buf - The data to be encoded.\r\n   * @returns {Uint8Array}\r\n   * @throws {Error} Will throw if the encoding is not supported\r\n   *\r\n   */\n\n\n  function encode(nameOrCode, buf) {\n    const enc = encoding(nameOrCode);\n    const data = encodeText(enc.encode(buf));\n    return concat([enc.codeBuf, data], enc.codeBuf.length + data.length);\n  }\n  /**\r\n   * Takes a Uint8Array or string encoded with multibase header, decodes it and\r\n   * returns the decoded buffer\r\n   *\r\n   * @param {Uint8Array|string} data\r\n   * @returns {Uint8Array}\r\n   * @throws {Error} Will throw if the encoding is not supported\r\n   *\r\n   */\n\n\n  function decode(data) {\n    if (data instanceof Uint8Array) {\n      data = decodeText(data);\n    }\n\n    const prefix = data[0]; // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\n\n    if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\n      data = data.toLowerCase();\n    }\n\n    const enc = encoding(\n    /** @type {BaseCode} */\n    data[0]);\n    return enc.decode(data.substring(1));\n  }\n  /**\r\n   * Is the given data multibase encoded?\r\n   *\r\n   * @param {Uint8Array|string} data\r\n   * @returns {false | string}\r\n   */\n\n\n  function isEncoded(data) {\n    if (data instanceof Uint8Array) {\n      data = decodeText(data);\n    } // Ensure bufOrString is a string\n\n\n    if (Object.prototype.toString.call(data) !== '[object String]') {\n      return false;\n    }\n\n    try {\n      const enc = encoding(\n      /** @type {BaseCode} */\n      data[0]);\n      return enc.name;\n    } catch (err) {\n      return false;\n    }\n  }\n  /**\r\n   * Validate encoded data\r\n   *\r\n   * @param {BaseNameOrCode} name\r\n   * @param {Uint8Array} buf\r\n   * @returns {void}\r\n   * @throws {Error} Will throw if the encoding is not supported\r\n   */\n\n\n  function validEncode(name, buf) {\n    const enc = encoding(name);\n    enc.decode(decodeText(buf));\n  }\n  /**\r\n   * Get the encoding by name or code\r\n   *\r\n   * @param {BaseNameOrCode} nameOrCode\r\n   * @returns {Base}\r\n   * @throws {Error} Will throw if the encoding is not supported\r\n   */\n\n\n  function encoding(nameOrCode) {\n    if (constants_1.names[nameOrCode]) {\n      return constants_1.names[nameOrCode];\n    } else if (constants_1.codes[nameOrCode]) {\n      return constants_1.codes[nameOrCode];\n    } else {\n      throw new Error(`Unsupported encoding: ${nameOrCode}`);\n    }\n  }\n  /**\r\n   * Get encoding from data\r\n   *\r\n   * @param {string|Uint8Array} data\r\n   * @returns {Base}\r\n   * @throws {Error} Will throw if the encoding is not supported\r\n   */\n\n\n  function encodingFromData(data) {\n    if (data instanceof Uint8Array) {\n      data = decodeText(data);\n    }\n\n    return encoding(\n    /** @type {BaseCode} */\n    data[0]);\n  }\n\n  exports = module.exports = multibase;\n  exports.encode = encode;\n  exports.decode = decode;\n  exports.isEncoded = isEncoded;\n  exports.encoding = encoding;\n  exports.encodingFromData = encodingFromData;\n  exports.names = Object.freeze(constants_1.names);\n  exports.codes = Object.freeze(constants_1.codes);\n});\n/* eslint quote-props: off */\n\n/**\r\n * Names for all available hashes\r\n *\r\n * @typedef { \"identity\" | \"sha1\" | \"sha2-256\" | \"sha2-512\" | \"sha3-512\" | \"sha3-384\" | \"sha3-256\" | \"sha3-224\" | \"shake-128\" | \"shake-256\" | \"keccak-224\" | \"keccak-256\" | \"keccak-384\" | \"keccak-512\" | \"blake3\" | \"murmur3-128\" | \"murmur3-32\" | \"dbl-sha2-256\" | \"md4\" | \"md5\" | \"bmt\" | \"sha2-256-trunc254-padded\" | \"ripemd-128\" | \"ripemd-160\" | \"ripemd-256\" | \"ripemd-320\" | \"x11\" | \"kangarootwelve\" | \"sm3-256\" | \"blake2b-8\" | \"blake2b-16\" | \"blake2b-24\" | \"blake2b-32\" | \"blake2b-40\" | \"blake2b-48\" | \"blake2b-56\" | \"blake2b-64\" | \"blake2b-72\" | \"blake2b-80\" | \"blake2b-88\" | \"blake2b-96\" | \"blake2b-104\" | \"blake2b-112\" | \"blake2b-120\" | \"blake2b-128\" | \"blake2b-136\" | \"blake2b-144\" | \"blake2b-152\" | \"blake2b-160\" | \"blake2b-168\" | \"blake2b-176\" | \"blake2b-184\" | \"blake2b-192\" | \"blake2b-200\" | \"blake2b-208\" | \"blake2b-216\" | \"blake2b-224\" | \"blake2b-232\" | \"blake2b-240\" | \"blake2b-248\" | \"blake2b-256\" | \"blake2b-264\" | \"blake2b-272\" | \"blake2b-280\" | \"blake2b-288\" | \"blake2b-296\" | \"blake2b-304\" | \"blake2b-312\" | \"blake2b-320\" | \"blake2b-328\" | \"blake2b-336\" | \"blake2b-344\" | \"blake2b-352\" | \"blake2b-360\" | \"blake2b-368\" | \"blake2b-376\" | \"blake2b-384\" | \"blake2b-392\" | \"blake2b-400\" | \"blake2b-408\" | \"blake2b-416\" | \"blake2b-424\" | \"blake2b-432\" | \"blake2b-440\" | \"blake2b-448\" | \"blake2b-456\" | \"blake2b-464\" | \"blake2b-472\" | \"blake2b-480\" | \"blake2b-488\" | \"blake2b-496\" | \"blake2b-504\" | \"blake2b-512\" | \"blake2s-8\" | \"blake2s-16\" | \"blake2s-24\" | \"blake2s-32\" | \"blake2s-40\" | \"blake2s-48\" | \"blake2s-56\" | \"blake2s-64\" | \"blake2s-72\" | \"blake2s-80\" | \"blake2s-88\" | \"blake2s-96\" | \"blake2s-104\" | \"blake2s-112\" | \"blake2s-120\" | \"blake2s-128\" | \"blake2s-136\" | \"blake2s-144\" | \"blake2s-152\" | \"blake2s-160\" | \"blake2s-168\" | \"blake2s-176\" | \"blake2s-184\" | \"blake2s-192\" | \"blake2s-200\" | \"blake2s-208\" | \"blake2s-216\" | \"blake2s-224\" | \"blake2s-232\" | \"blake2s-240\" | \"blake2s-248\" | \"blake2s-256\" | \"skein256-8\" | \"skein256-16\" | \"skein256-24\" | \"skein256-32\" | \"skein256-40\" | \"skein256-48\" | \"skein256-56\" | \"skein256-64\" | \"skein256-72\" | \"skein256-80\" | \"skein256-88\" | \"skein256-96\" | \"skein256-104\" | \"skein256-112\" | \"skein256-120\" | \"skein256-128\" | \"skein256-136\" | \"skein256-144\" | \"skein256-152\" | \"skein256-160\" | \"skein256-168\" | \"skein256-176\" | \"skein256-184\" | \"skein256-192\" | \"skein256-200\" | \"skein256-208\" | \"skein256-216\" | \"skein256-224\" | \"skein256-232\" | \"skein256-240\" | \"skein256-248\" | \"skein256-256\" | \"skein512-8\" | \"skein512-16\" | \"skein512-24\" | \"skein512-32\" | \"skein512-40\" | \"skein512-48\" | \"skein512-56\" | \"skein512-64\" | \"skein512-72\" | \"skein512-80\" | \"skein512-88\" | \"skein512-96\" | \"skein512-104\" | \"skein512-112\" | \"skein512-120\" | \"skein512-128\" | \"skein512-136\" | \"skein512-144\" | \"skein512-152\" | \"skein512-160\" | \"skein512-168\" | \"skein512-176\" | \"skein512-184\" | \"skein512-192\" | \"skein512-200\" | \"skein512-208\" | \"skein512-216\" | \"skein512-224\" | \"skein512-232\" | \"skein512-240\" | \"skein512-248\" | \"skein512-256\" | \"skein512-264\" | \"skein512-272\" | \"skein512-280\" | \"skein512-288\" | \"skein512-296\" | \"skein512-304\" | \"skein512-312\" | \"skein512-320\" | \"skein512-328\" | \"skein512-336\" | \"skein512-344\" | \"skein512-352\" | \"skein512-360\" | \"skein512-368\" | \"skein512-376\" | \"skein512-384\" | \"skein512-392\" | \"skein512-400\" | \"skein512-408\" | \"skein512-416\" | \"skein512-424\" | \"skein512-432\" | \"skein512-440\" | \"skein512-448\" | \"skein512-456\" | \"skein512-464\" | \"skein512-472\" | \"skein512-480\" | \"skein512-488\" | \"skein512-496\" | \"skein512-504\" | \"skein512-512\" | \"skein1024-8\" | \"skein1024-16\" | \"skein1024-24\" | \"skein1024-32\" | \"skein1024-40\" | \"skein1024-48\" | \"skein1024-56\" | \"skein1024-64\" | \"skein1024-72\" | \"skein1024-80\" | \"skein1024-88\" | \"skein1024-96\" | \"skein1024-104\" | \"skein1024-112\" | \"skein1024-120\" | \"skein1024-128\" | \"skein1024-136\" | \"skein1024-144\" | \"skein1024-152\" | \"skein1024-160\" | \"skein1024-168\" | \"skein1024-176\" | \"skein1024-184\" | \"skein1024-192\" | \"skein1024-200\" | \"skein1024-208\" | \"skein1024-216\" | \"skein1024-224\" | \"skein1024-232\" | \"skein1024-240\" | \"skein1024-248\" | \"skein1024-256\" | \"skein1024-264\" | \"skein1024-272\" | \"skein1024-280\" | \"skein1024-288\" | \"skein1024-296\" | \"skein1024-304\" | \"skein1024-312\" | \"skein1024-320\" | \"skein1024-328\" | \"skein1024-336\" | \"skein1024-344\" | \"skein1024-352\" | \"skein1024-360\" | \"skein1024-368\" | \"skein1024-376\" | \"skein1024-384\" | \"skein1024-392\" | \"skein1024-400\" | \"skein1024-408\" | \"skein1024-416\" | \"skein1024-424\" | \"skein1024-432\" | \"skein1024-440\" | \"skein1024-448\" | \"skein1024-456\" | \"skein1024-464\" | \"skein1024-472\" | \"skein1024-480\" | \"skein1024-488\" | \"skein1024-496\" | \"skein1024-504\" | \"skein1024-512\" | \"skein1024-520\" | \"skein1024-528\" | \"skein1024-536\" | \"skein1024-544\" | \"skein1024-552\" | \"skein1024-560\" | \"skein1024-568\" | \"skein1024-576\" | \"skein1024-584\" | \"skein1024-592\" | \"skein1024-600\" | \"skein1024-608\" | \"skein1024-616\" | \"skein1024-624\" | \"skein1024-632\" | \"skein1024-640\" | \"skein1024-648\" | \"skein1024-656\" | \"skein1024-664\" | \"skein1024-672\" | \"skein1024-680\" | \"skein1024-688\" | \"skein1024-696\" | \"skein1024-704\" | \"skein1024-712\" | \"skein1024-720\" | \"skein1024-728\" | \"skein1024-736\" | \"skein1024-744\" | \"skein1024-752\" | \"skein1024-760\" | \"skein1024-768\" | \"skein1024-776\" | \"skein1024-784\" | \"skein1024-792\" | \"skein1024-800\" | \"skein1024-808\" | \"skein1024-816\" | \"skein1024-824\" | \"skein1024-832\" | \"skein1024-840\" | \"skein1024-848\" | \"skein1024-856\" | \"skein1024-864\" | \"skein1024-872\" | \"skein1024-880\" | \"skein1024-888\" | \"skein1024-896\" | \"skein1024-904\" | \"skein1024-912\" | \"skein1024-920\" | \"skein1024-928\" | \"skein1024-936\" | \"skein1024-944\" | \"skein1024-952\" | \"skein1024-960\" | \"skein1024-968\" | \"skein1024-976\" | \"skein1024-984\" | \"skein1024-992\" | \"skein1024-1000\" | \"skein1024-1008\" | \"skein1024-1016\" | \"skein1024-1024\" | \"poseidon-bls12_381-a2-fc1\" | \"poseidon-bls12_381-a2-fc1-sc\" } HashName\r\n */\n\n/**\r\n * Codes for all available hashes\r\n *\r\n * @typedef { 0x00 | 0x11 | 0x12 | 0x13 | 0x14 | 0x15 | 0x16 | 0x17 | 0x18 | 0x19 | 0x1a | 0x1b | 0x1c | 0x1d | 0x1e | 0x22 | 0x23 | 0x56 | 0xd4 | 0xd5 | 0xd6 | 0x1012 | 0x1052 | 0x1053 | 0x1054 | 0x1055 | 0x1100 | 0x1d01 | 0x534d | 0xb201 | 0xb202 | 0xb203 | 0xb204 | 0xb205 | 0xb206 | 0xb207 | 0xb208 | 0xb209 | 0xb20a | 0xb20b | 0xb20c | 0xb20d | 0xb20e | 0xb20f | 0xb210 | 0xb211 | 0xb212 | 0xb213 | 0xb214 | 0xb215 | 0xb216 | 0xb217 | 0xb218 | 0xb219 | 0xb21a | 0xb21b | 0xb21c | 0xb21d | 0xb21e | 0xb21f | 0xb220 | 0xb221 | 0xb222 | 0xb223 | 0xb224 | 0xb225 | 0xb226 | 0xb227 | 0xb228 | 0xb229 | 0xb22a | 0xb22b | 0xb22c | 0xb22d | 0xb22e | 0xb22f | 0xb230 | 0xb231 | 0xb232 | 0xb233 | 0xb234 | 0xb235 | 0xb236 | 0xb237 | 0xb238 | 0xb239 | 0xb23a | 0xb23b | 0xb23c | 0xb23d | 0xb23e | 0xb23f | 0xb240 | 0xb241 | 0xb242 | 0xb243 | 0xb244 | 0xb245 | 0xb246 | 0xb247 | 0xb248 | 0xb249 | 0xb24a | 0xb24b | 0xb24c | 0xb24d | 0xb24e | 0xb24f | 0xb250 | 0xb251 | 0xb252 | 0xb253 | 0xb254 | 0xb255 | 0xb256 | 0xb257 | 0xb258 | 0xb259 | 0xb25a | 0xb25b | 0xb25c | 0xb25d | 0xb25e | 0xb25f | 0xb260 | 0xb301 | 0xb302 | 0xb303 | 0xb304 | 0xb305 | 0xb306 | 0xb307 | 0xb308 | 0xb309 | 0xb30a | 0xb30b | 0xb30c | 0xb30d | 0xb30e | 0xb30f | 0xb310 | 0xb311 | 0xb312 | 0xb313 | 0xb314 | 0xb315 | 0xb316 | 0xb317 | 0xb318 | 0xb319 | 0xb31a | 0xb31b | 0xb31c | 0xb31d | 0xb31e | 0xb31f | 0xb320 | 0xb321 | 0xb322 | 0xb323 | 0xb324 | 0xb325 | 0xb326 | 0xb327 | 0xb328 | 0xb329 | 0xb32a | 0xb32b | 0xb32c | 0xb32d | 0xb32e | 0xb32f | 0xb330 | 0xb331 | 0xb332 | 0xb333 | 0xb334 | 0xb335 | 0xb336 | 0xb337 | 0xb338 | 0xb339 | 0xb33a | 0xb33b | 0xb33c | 0xb33d | 0xb33e | 0xb33f | 0xb340 | 0xb341 | 0xb342 | 0xb343 | 0xb344 | 0xb345 | 0xb346 | 0xb347 | 0xb348 | 0xb349 | 0xb34a | 0xb34b | 0xb34c | 0xb34d | 0xb34e | 0xb34f | 0xb350 | 0xb351 | 0xb352 | 0xb353 | 0xb354 | 0xb355 | 0xb356 | 0xb357 | 0xb358 | 0xb359 | 0xb35a | 0xb35b | 0xb35c | 0xb35d | 0xb35e | 0xb35f | 0xb360 | 0xb361 | 0xb362 | 0xb363 | 0xb364 | 0xb365 | 0xb366 | 0xb367 | 0xb368 | 0xb369 | 0xb36a | 0xb36b | 0xb36c | 0xb36d | 0xb36e | 0xb36f | 0xb370 | 0xb371 | 0xb372 | 0xb373 | 0xb374 | 0xb375 | 0xb376 | 0xb377 | 0xb378 | 0xb379 | 0xb37a | 0xb37b | 0xb37c | 0xb37d | 0xb37e | 0xb37f | 0xb380 | 0xb381 | 0xb382 | 0xb383 | 0xb384 | 0xb385 | 0xb386 | 0xb387 | 0xb388 | 0xb389 | 0xb38a | 0xb38b | 0xb38c | 0xb38d | 0xb38e | 0xb38f | 0xb390 | 0xb391 | 0xb392 | 0xb393 | 0xb394 | 0xb395 | 0xb396 | 0xb397 | 0xb398 | 0xb399 | 0xb39a | 0xb39b | 0xb39c | 0xb39d | 0xb39e | 0xb39f | 0xb3a0 | 0xb3a1 | 0xb3a2 | 0xb3a3 | 0xb3a4 | 0xb3a5 | 0xb3a6 | 0xb3a7 | 0xb3a8 | 0xb3a9 | 0xb3aa | 0xb3ab | 0xb3ac | 0xb3ad | 0xb3ae | 0xb3af | 0xb3b0 | 0xb3b1 | 0xb3b2 | 0xb3b3 | 0xb3b4 | 0xb3b5 | 0xb3b6 | 0xb3b7 | 0xb3b8 | 0xb3b9 | 0xb3ba | 0xb3bb | 0xb3bc | 0xb3bd | 0xb3be | 0xb3bf | 0xb3c0 | 0xb3c1 | 0xb3c2 | 0xb3c3 | 0xb3c4 | 0xb3c5 | 0xb3c6 | 0xb3c7 | 0xb3c8 | 0xb3c9 | 0xb3ca | 0xb3cb | 0xb3cc | 0xb3cd | 0xb3ce | 0xb3cf | 0xb3d0 | 0xb3d1 | 0xb3d2 | 0xb3d3 | 0xb3d4 | 0xb3d5 | 0xb3d6 | 0xb3d7 | 0xb3d8 | 0xb3d9 | 0xb3da | 0xb3db | 0xb3dc | 0xb3dd | 0xb3de | 0xb3df | 0xb3e0 | 0xb401 | 0xb402 } HashCode\r\n */\n\n/**\r\n * @type { Object<HashName,HashCode> }\r\n */\n\nconst names$2 = Object.freeze({\n  'identity': 0x00,\n  'sha1': 0x11,\n  'sha2-256': 0x12,\n  'sha2-512': 0x13,\n  'sha3-512': 0x14,\n  'sha3-384': 0x15,\n  'sha3-256': 0x16,\n  'sha3-224': 0x17,\n  'shake-128': 0x18,\n  'shake-256': 0x19,\n  'keccak-224': 0x1a,\n  'keccak-256': 0x1b,\n  'keccak-384': 0x1c,\n  'keccak-512': 0x1d,\n  'blake3': 0x1e,\n  'murmur3-128': 0x22,\n  'murmur3-32': 0x23,\n  'dbl-sha2-256': 0x56,\n  'md4': 0xd4,\n  'md5': 0xd5,\n  'bmt': 0xd6,\n  'sha2-256-trunc254-padded': 0x1012,\n  'ripemd-128': 0x1052,\n  'ripemd-160': 0x1053,\n  'ripemd-256': 0x1054,\n  'ripemd-320': 0x1055,\n  'x11': 0x1100,\n  'kangarootwelve': 0x1d01,\n  'sm3-256': 0x534d,\n  'blake2b-8': 0xb201,\n  'blake2b-16': 0xb202,\n  'blake2b-24': 0xb203,\n  'blake2b-32': 0xb204,\n  'blake2b-40': 0xb205,\n  'blake2b-48': 0xb206,\n  'blake2b-56': 0xb207,\n  'blake2b-64': 0xb208,\n  'blake2b-72': 0xb209,\n  'blake2b-80': 0xb20a,\n  'blake2b-88': 0xb20b,\n  'blake2b-96': 0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8': 0xb241,\n  'blake2s-16': 0xb242,\n  'blake2s-24': 0xb243,\n  'blake2s-32': 0xb244,\n  'blake2s-40': 0xb245,\n  'blake2s-48': 0xb246,\n  'blake2s-56': 0xb247,\n  'blake2s-64': 0xb248,\n  'blake2s-72': 0xb249,\n  'blake2s-80': 0xb24a,\n  'blake2s-88': 0xb24b,\n  'blake2s-96': 0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'skein256-8': 0xb301,\n  'skein256-16': 0xb302,\n  'skein256-24': 0xb303,\n  'skein256-32': 0xb304,\n  'skein256-40': 0xb305,\n  'skein256-48': 0xb306,\n  'skein256-56': 0xb307,\n  'skein256-64': 0xb308,\n  'skein256-72': 0xb309,\n  'skein256-80': 0xb30a,\n  'skein256-88': 0xb30b,\n  'skein256-96': 0xb30c,\n  'skein256-104': 0xb30d,\n  'skein256-112': 0xb30e,\n  'skein256-120': 0xb30f,\n  'skein256-128': 0xb310,\n  'skein256-136': 0xb311,\n  'skein256-144': 0xb312,\n  'skein256-152': 0xb313,\n  'skein256-160': 0xb314,\n  'skein256-168': 0xb315,\n  'skein256-176': 0xb316,\n  'skein256-184': 0xb317,\n  'skein256-192': 0xb318,\n  'skein256-200': 0xb319,\n  'skein256-208': 0xb31a,\n  'skein256-216': 0xb31b,\n  'skein256-224': 0xb31c,\n  'skein256-232': 0xb31d,\n  'skein256-240': 0xb31e,\n  'skein256-248': 0xb31f,\n  'skein256-256': 0xb320,\n  'skein512-8': 0xb321,\n  'skein512-16': 0xb322,\n  'skein512-24': 0xb323,\n  'skein512-32': 0xb324,\n  'skein512-40': 0xb325,\n  'skein512-48': 0xb326,\n  'skein512-56': 0xb327,\n  'skein512-64': 0xb328,\n  'skein512-72': 0xb329,\n  'skein512-80': 0xb32a,\n  'skein512-88': 0xb32b,\n  'skein512-96': 0xb32c,\n  'skein512-104': 0xb32d,\n  'skein512-112': 0xb32e,\n  'skein512-120': 0xb32f,\n  'skein512-128': 0xb330,\n  'skein512-136': 0xb331,\n  'skein512-144': 0xb332,\n  'skein512-152': 0xb333,\n  'skein512-160': 0xb334,\n  'skein512-168': 0xb335,\n  'skein512-176': 0xb336,\n  'skein512-184': 0xb337,\n  'skein512-192': 0xb338,\n  'skein512-200': 0xb339,\n  'skein512-208': 0xb33a,\n  'skein512-216': 0xb33b,\n  'skein512-224': 0xb33c,\n  'skein512-232': 0xb33d,\n  'skein512-240': 0xb33e,\n  'skein512-248': 0xb33f,\n  'skein512-256': 0xb340,\n  'skein512-264': 0xb341,\n  'skein512-272': 0xb342,\n  'skein512-280': 0xb343,\n  'skein512-288': 0xb344,\n  'skein512-296': 0xb345,\n  'skein512-304': 0xb346,\n  'skein512-312': 0xb347,\n  'skein512-320': 0xb348,\n  'skein512-328': 0xb349,\n  'skein512-336': 0xb34a,\n  'skein512-344': 0xb34b,\n  'skein512-352': 0xb34c,\n  'skein512-360': 0xb34d,\n  'skein512-368': 0xb34e,\n  'skein512-376': 0xb34f,\n  'skein512-384': 0xb350,\n  'skein512-392': 0xb351,\n  'skein512-400': 0xb352,\n  'skein512-408': 0xb353,\n  'skein512-416': 0xb354,\n  'skein512-424': 0xb355,\n  'skein512-432': 0xb356,\n  'skein512-440': 0xb357,\n  'skein512-448': 0xb358,\n  'skein512-456': 0xb359,\n  'skein512-464': 0xb35a,\n  'skein512-472': 0xb35b,\n  'skein512-480': 0xb35c,\n  'skein512-488': 0xb35d,\n  'skein512-496': 0xb35e,\n  'skein512-504': 0xb35f,\n  'skein512-512': 0xb360,\n  'skein1024-8': 0xb361,\n  'skein1024-16': 0xb362,\n  'skein1024-24': 0xb363,\n  'skein1024-32': 0xb364,\n  'skein1024-40': 0xb365,\n  'skein1024-48': 0xb366,\n  'skein1024-56': 0xb367,\n  'skein1024-64': 0xb368,\n  'skein1024-72': 0xb369,\n  'skein1024-80': 0xb36a,\n  'skein1024-88': 0xb36b,\n  'skein1024-96': 0xb36c,\n  'skein1024-104': 0xb36d,\n  'skein1024-112': 0xb36e,\n  'skein1024-120': 0xb36f,\n  'skein1024-128': 0xb370,\n  'skein1024-136': 0xb371,\n  'skein1024-144': 0xb372,\n  'skein1024-152': 0xb373,\n  'skein1024-160': 0xb374,\n  'skein1024-168': 0xb375,\n  'skein1024-176': 0xb376,\n  'skein1024-184': 0xb377,\n  'skein1024-192': 0xb378,\n  'skein1024-200': 0xb379,\n  'skein1024-208': 0xb37a,\n  'skein1024-216': 0xb37b,\n  'skein1024-224': 0xb37c,\n  'skein1024-232': 0xb37d,\n  'skein1024-240': 0xb37e,\n  'skein1024-248': 0xb37f,\n  'skein1024-256': 0xb380,\n  'skein1024-264': 0xb381,\n  'skein1024-272': 0xb382,\n  'skein1024-280': 0xb383,\n  'skein1024-288': 0xb384,\n  'skein1024-296': 0xb385,\n  'skein1024-304': 0xb386,\n  'skein1024-312': 0xb387,\n  'skein1024-320': 0xb388,\n  'skein1024-328': 0xb389,\n  'skein1024-336': 0xb38a,\n  'skein1024-344': 0xb38b,\n  'skein1024-352': 0xb38c,\n  'skein1024-360': 0xb38d,\n  'skein1024-368': 0xb38e,\n  'skein1024-376': 0xb38f,\n  'skein1024-384': 0xb390,\n  'skein1024-392': 0xb391,\n  'skein1024-400': 0xb392,\n  'skein1024-408': 0xb393,\n  'skein1024-416': 0xb394,\n  'skein1024-424': 0xb395,\n  'skein1024-432': 0xb396,\n  'skein1024-440': 0xb397,\n  'skein1024-448': 0xb398,\n  'skein1024-456': 0xb399,\n  'skein1024-464': 0xb39a,\n  'skein1024-472': 0xb39b,\n  'skein1024-480': 0xb39c,\n  'skein1024-488': 0xb39d,\n  'skein1024-496': 0xb39e,\n  'skein1024-504': 0xb39f,\n  'skein1024-512': 0xb3a0,\n  'skein1024-520': 0xb3a1,\n  'skein1024-528': 0xb3a2,\n  'skein1024-536': 0xb3a3,\n  'skein1024-544': 0xb3a4,\n  'skein1024-552': 0xb3a5,\n  'skein1024-560': 0xb3a6,\n  'skein1024-568': 0xb3a7,\n  'skein1024-576': 0xb3a8,\n  'skein1024-584': 0xb3a9,\n  'skein1024-592': 0xb3aa,\n  'skein1024-600': 0xb3ab,\n  'skein1024-608': 0xb3ac,\n  'skein1024-616': 0xb3ad,\n  'skein1024-624': 0xb3ae,\n  'skein1024-632': 0xb3af,\n  'skein1024-640': 0xb3b0,\n  'skein1024-648': 0xb3b1,\n  'skein1024-656': 0xb3b2,\n  'skein1024-664': 0xb3b3,\n  'skein1024-672': 0xb3b4,\n  'skein1024-680': 0xb3b5,\n  'skein1024-688': 0xb3b6,\n  'skein1024-696': 0xb3b7,\n  'skein1024-704': 0xb3b8,\n  'skein1024-712': 0xb3b9,\n  'skein1024-720': 0xb3ba,\n  'skein1024-728': 0xb3bb,\n  'skein1024-736': 0xb3bc,\n  'skein1024-744': 0xb3bd,\n  'skein1024-752': 0xb3be,\n  'skein1024-760': 0xb3bf,\n  'skein1024-768': 0xb3c0,\n  'skein1024-776': 0xb3c1,\n  'skein1024-784': 0xb3c2,\n  'skein1024-792': 0xb3c3,\n  'skein1024-800': 0xb3c4,\n  'skein1024-808': 0xb3c5,\n  'skein1024-816': 0xb3c6,\n  'skein1024-824': 0xb3c7,\n  'skein1024-832': 0xb3c8,\n  'skein1024-840': 0xb3c9,\n  'skein1024-848': 0xb3ca,\n  'skein1024-856': 0xb3cb,\n  'skein1024-864': 0xb3cc,\n  'skein1024-872': 0xb3cd,\n  'skein1024-880': 0xb3ce,\n  'skein1024-888': 0xb3cf,\n  'skein1024-896': 0xb3d0,\n  'skein1024-904': 0xb3d1,\n  'skein1024-912': 0xb3d2,\n  'skein1024-920': 0xb3d3,\n  'skein1024-928': 0xb3d4,\n  'skein1024-936': 0xb3d5,\n  'skein1024-944': 0xb3d6,\n  'skein1024-952': 0xb3d7,\n  'skein1024-960': 0xb3d8,\n  'skein1024-968': 0xb3d9,\n  'skein1024-976': 0xb3da,\n  'skein1024-984': 0xb3db,\n  'skein1024-992': 0xb3dc,\n  'skein1024-1000': 0xb3dd,\n  'skein1024-1008': 0xb3de,\n  'skein1024-1016': 0xb3df,\n  'skein1024-1024': 0xb3e0,\n  'poseidon-bls12_381-a2-fc1': 0xb401,\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402\n});\nvar constants$1 = {\n  names: names$2\n};\nconst {\n  names: names$3\n} = constants_1;\nconst {\n  TextEncoder: TextEncoder$2\n} = lib;\nconst utf8Encoder = new TextEncoder$2();\n/**\r\n * Interperets each character in a string as a byte and\r\n * returns a Uint8Array of those bytes.\r\n *\r\n * @param {String} string The string to turn into an array\r\n * @returns {Uint8Array}\r\n */\n\nfunction asciiStringToUint8Array(string) {\n  const array = new Uint8Array(string.length);\n\n  for (let i = 0; i < string.length; i++) {\n    array[i] = string.charCodeAt(i);\n  }\n\n  return array;\n}\n/**\r\n * Create a `Uint8Array` from the passed string\r\n *\r\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\r\n *\r\n * Also `ascii` which is similar to node's 'binary' encoding.\r\n *\r\n * @param {String} string\r\n * @param {String} [encoding=utf8] utf8, base16, base64, base64urlpad, etc\r\n * @returns {Uint8Array}\r\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\r\n */\n\n\nfunction fromString(string, encoding = 'utf8') {\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return utf8Encoder.encode(string);\n  }\n\n  if (encoding === 'ascii') {\n    return asciiStringToUint8Array(string);\n  }\n\n  const codec = names$3[encoding];\n\n  if (!codec) {\n    throw new Error('Unknown base');\n  }\n\n  return codec.decode(string);\n}\n\nvar fromString_1 = fromString;\n/**\r\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\r\n *\r\n * @param {Array<ArrayLike<number>>} arrays\r\n * @param {Number} length\r\n * @returns {Uint8Array}\r\n */\n\nfunction concat$1(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n\n  const output = new Uint8Array(length);\n  let offset = 0;\n\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n\n  return output;\n}\n\nvar concat_1 = concat$1;\n/**\r\n * Multihash implementation in JavaScript.\r\n *\r\n * @module multihash\r\n */\n\nconst {\n  names: names$4\n} = constants$1;\nconst codes$1 =\n/** @type {import('./types').CodeNameMap} */\n{}; // eslint-disable-next-line guard-for-in\n\nfor (const key in names$4) {\n  codes$1[names$4[key]] = key;\n}\n/**\r\n * Convert the given multihash to a hex encoded string.\r\n *\r\n * @param {Uint8Array} hash\r\n * @returns {string}\r\n */\n\n\nfunction toHexString(hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array');\n  }\n\n  return toString_1(hash, 'base16');\n}\n/**\r\n * Convert the given hex encoded string to a multihash.\r\n *\r\n * @param {string} hash\r\n * @returns {Uint8Array}\r\n */\n\n\nfunction fromHexString(hash) {\n  return fromString_1(hash, 'base16');\n}\n/**\r\n * Convert the given multihash to a base58 encoded string.\r\n *\r\n * @param {Uint8Array} hash\r\n * @returns {string}\r\n */\n\n\nfunction toB58String(hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array');\n  }\n\n  return toString_1(src$1.encode('base58btc', hash)).slice(1);\n}\n/**\r\n * Convert the given base58 encoded string to a multihash.\r\n *\r\n * @param {string|Uint8Array} hash\r\n * @returns {Uint8Array}\r\n */\n\n\nfunction fromB58String(hash) {\n  const encoded = hash instanceof Uint8Array ? toString_1(hash) : hash;\n  return src$1.decode('z' + encoded);\n}\n/**\r\n * Decode a hash from the given multihash.\r\n *\r\n * @param {Uint8Array} bytes\r\n * @returns {{code: HashCode, name: HashName, length: number, digest: Uint8Array}} result\r\n */\n\n\nfunction decode$2(bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new Error('multihash must be a Uint8Array');\n  }\n\n  if (bytes.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.');\n  }\n\n  const code = varint.decode(bytes);\n\n  if (!isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`);\n  }\n\n  bytes = bytes.slice(varint.decode.bytes);\n  const len = varint.decode(bytes);\n\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`);\n  }\n\n  bytes = bytes.slice(varint.decode.bytes);\n\n  if (bytes.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${toString_1(bytes, 'base16')}`);\n  }\n\n  return {\n    code,\n    name: codes$1[code],\n    length: len,\n    digest: bytes\n  };\n}\n/**\r\n * Encode a hash digest along with the specified function code.\r\n *\r\n * > **Note:** the length is derived from the length of the digest itself.\r\n *\r\n * @param {Uint8Array} digest\r\n * @param {HashName | HashCode} code\r\n * @param {number} [length]\r\n * @returns {Uint8Array}\r\n */\n\n\nfunction encode$2(digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code');\n  } // ensure it's a hashfunction code.\n\n\n  const hashfn = coerceCode(code);\n\n  if (!(digest instanceof Uint8Array)) {\n    throw new Error('digest should be a Uint8Array');\n  }\n\n  if (length == null) {\n    length = digest.length;\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.');\n  }\n\n  const hash = varint.encode(hashfn);\n  const len = varint.encode(length);\n  return concat_1([hash, len, digest], hash.length + len.length + digest.length);\n}\n/**\r\n * Converts a hash function name into the matching code.\r\n * If passed a number it will return the number if it's a valid code.\r\n *\r\n * @param {HashName | number} name\r\n * @returns {number}\r\n */\n\n\nfunction coerceCode(name) {\n  let code = name;\n\n  if (typeof name === 'string') {\n    if (names$4[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`);\n    }\n\n    code = names$4[name];\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`);\n  }\n\n  if (codes$1[code] === undefined && !isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`);\n  }\n\n  return code;\n}\n/**\r\n * Checks if a code is part of the app range\r\n *\r\n * @param {number} code\r\n * @returns {boolean}\r\n */\n\n\nfunction isAppCode(code) {\n  return code > 0 && code < 0x10;\n}\n/**\r\n * Checks whether a multihash code is valid.\r\n *\r\n * @param {HashCode} code\r\n * @returns {boolean}\r\n */\n\n\nfunction isValidCode(code) {\n  if (isAppCode(code)) {\n    return true;\n  }\n\n  if (codes$1[code]) {\n    return true;\n  }\n\n  return false;\n}\n/**\r\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\r\n *\r\n * @param {Uint8Array} multihash\r\n * @returns {void}\r\n * @throws {Error}\r\n */\n\n\nfunction validate(multihash) {\n  decode$2(multihash); // throws if bad.\n}\n/**\r\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\r\n *\r\n * @param {Uint8Array} multihash\r\n * @returns {Uint8Array}\r\n * @throws {Error}\r\n */\n\n\nfunction prefix(multihash) {\n  validate(multihash);\n  return multihash.subarray(0, 2);\n}\n\nvar src$2 = {\n  names: names$4,\n  codes: Object.freeze(codes$1),\n  toHexString,\n  fromHexString,\n  toB58String,\n  fromB58String,\n  decode: decode$2,\n  encode: encode$2,\n  coerceCode,\n  isAppCode,\n  validate,\n  prefix,\n  isValidCode\n}; // DO NOT CHANGE THIS FILE. IT IS GENERATED BY tools/update-table.js\n\n/**\r\n * @type {import('./generated-types').NameNumberMap}\r\n */\n\nconst baseTable = Object.freeze({\n  'identity': 0x00,\n  'cidv1': 0x01,\n  'cidv2': 0x02,\n  'cidv3': 0x03,\n  'ip4': 0x04,\n  'tcp': 0x06,\n  'sha1': 0x11,\n  'sha2-256': 0x12,\n  'sha2-512': 0x13,\n  'sha3-512': 0x14,\n  'sha3-384': 0x15,\n  'sha3-256': 0x16,\n  'sha3-224': 0x17,\n  'shake-128': 0x18,\n  'shake-256': 0x19,\n  'keccak-224': 0x1a,\n  'keccak-256': 0x1b,\n  'keccak-384': 0x1c,\n  'keccak-512': 0x1d,\n  'blake3': 0x1e,\n  'dccp': 0x21,\n  'murmur3-128': 0x22,\n  'murmur3-32': 0x23,\n  'ip6': 0x29,\n  'ip6zone': 0x2a,\n  'path': 0x2f,\n  'multicodec': 0x30,\n  'multihash': 0x31,\n  'multiaddr': 0x32,\n  'multibase': 0x33,\n  'dns': 0x35,\n  'dns4': 0x36,\n  'dns6': 0x37,\n  'dnsaddr': 0x38,\n  'protobuf': 0x50,\n  'cbor': 0x51,\n  'raw': 0x55,\n  'dbl-sha2-256': 0x56,\n  'rlp': 0x60,\n  'bencode': 0x63,\n  'dag-pb': 0x70,\n  'dag-cbor': 0x71,\n  'libp2p-key': 0x72,\n  'git-raw': 0x78,\n  'torrent-info': 0x7b,\n  'torrent-file': 0x7c,\n  'leofcoin-block': 0x81,\n  'leofcoin-tx': 0x82,\n  'leofcoin-pr': 0x83,\n  'sctp': 0x84,\n  'dag-jose': 0x85,\n  'dag-cose': 0x86,\n  'eth-block': 0x90,\n  'eth-block-list': 0x91,\n  'eth-tx-trie': 0x92,\n  'eth-tx': 0x93,\n  'eth-tx-receipt-trie': 0x94,\n  'eth-tx-receipt': 0x95,\n  'eth-state-trie': 0x96,\n  'eth-account-snapshot': 0x97,\n  'eth-storage-trie': 0x98,\n  'bitcoin-block': 0xb0,\n  'bitcoin-tx': 0xb1,\n  'bitcoin-witness-commitment': 0xb2,\n  'zcash-block': 0xc0,\n  'zcash-tx': 0xc1,\n  'docid': 0xce,\n  'stellar-block': 0xd0,\n  'stellar-tx': 0xd1,\n  'md4': 0xd4,\n  'md5': 0xd5,\n  'bmt': 0xd6,\n  'decred-block': 0xe0,\n  'decred-tx': 0xe1,\n  'ipld-ns': 0xe2,\n  'ipfs-ns': 0xe3,\n  'swarm-ns': 0xe4,\n  'ipns-ns': 0xe5,\n  'zeronet': 0xe6,\n  'secp256k1-pub': 0xe7,\n  'bls12_381-g1-pub': 0xea,\n  'bls12_381-g2-pub': 0xeb,\n  'x25519-pub': 0xec,\n  'ed25519-pub': 0xed,\n  'bls12_381-g1g2-pub': 0xee,\n  'dash-block': 0xf0,\n  'dash-tx': 0xf1,\n  'swarm-manifest': 0xfa,\n  'swarm-feed': 0xfb,\n  'udp': 0x0111,\n  'p2p-webrtc-star': 0x0113,\n  'p2p-webrtc-direct': 0x0114,\n  'p2p-stardust': 0x0115,\n  'p2p-circuit': 0x0122,\n  'dag-json': 0x0129,\n  'udt': 0x012d,\n  'utp': 0x012e,\n  'unix': 0x0190,\n  'p2p': 0x01a5,\n  'ipfs': 0x01a5,\n  'https': 0x01bb,\n  'onion': 0x01bc,\n  'onion3': 0x01bd,\n  'garlic64': 0x01be,\n  'garlic32': 0x01bf,\n  'tls': 0x01c0,\n  'quic': 0x01cc,\n  'ws': 0x01dd,\n  'wss': 0x01de,\n  'p2p-websocket-star': 0x01df,\n  'http': 0x01e0,\n  'json': 0x0200,\n  'messagepack': 0x0201,\n  'libp2p-peer-record': 0x0301,\n  'sha2-256-trunc254-padded': 0x1012,\n  'ripemd-128': 0x1052,\n  'ripemd-160': 0x1053,\n  'ripemd-256': 0x1054,\n  'ripemd-320': 0x1055,\n  'x11': 0x1100,\n  'p256-pub': 0x1200,\n  'p384-pub': 0x1201,\n  'p521-pub': 0x1202,\n  'ed448-pub': 0x1203,\n  'x448-pub': 0x1204,\n  'ed25519-priv': 0x1300,\n  'kangarootwelve': 0x1d01,\n  'sm3-256': 0x534d,\n  'blake2b-8': 0xb201,\n  'blake2b-16': 0xb202,\n  'blake2b-24': 0xb203,\n  'blake2b-32': 0xb204,\n  'blake2b-40': 0xb205,\n  'blake2b-48': 0xb206,\n  'blake2b-56': 0xb207,\n  'blake2b-64': 0xb208,\n  'blake2b-72': 0xb209,\n  'blake2b-80': 0xb20a,\n  'blake2b-88': 0xb20b,\n  'blake2b-96': 0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8': 0xb241,\n  'blake2s-16': 0xb242,\n  'blake2s-24': 0xb243,\n  'blake2s-32': 0xb244,\n  'blake2s-40': 0xb245,\n  'blake2s-48': 0xb246,\n  'blake2s-56': 0xb247,\n  'blake2s-64': 0xb248,\n  'blake2s-72': 0xb249,\n  'blake2s-80': 0xb24a,\n  'blake2s-88': 0xb24b,\n  'blake2s-96': 0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'skein256-8': 0xb301,\n  'skein256-16': 0xb302,\n  'skein256-24': 0xb303,\n  'skein256-32': 0xb304,\n  'skein256-40': 0xb305,\n  'skein256-48': 0xb306,\n  'skein256-56': 0xb307,\n  'skein256-64': 0xb308,\n  'skein256-72': 0xb309,\n  'skein256-80': 0xb30a,\n  'skein256-88': 0xb30b,\n  'skein256-96': 0xb30c,\n  'skein256-104': 0xb30d,\n  'skein256-112': 0xb30e,\n  'skein256-120': 0xb30f,\n  'skein256-128': 0xb310,\n  'skein256-136': 0xb311,\n  'skein256-144': 0xb312,\n  'skein256-152': 0xb313,\n  'skein256-160': 0xb314,\n  'skein256-168': 0xb315,\n  'skein256-176': 0xb316,\n  'skein256-184': 0xb317,\n  'skein256-192': 0xb318,\n  'skein256-200': 0xb319,\n  'skein256-208': 0xb31a,\n  'skein256-216': 0xb31b,\n  'skein256-224': 0xb31c,\n  'skein256-232': 0xb31d,\n  'skein256-240': 0xb31e,\n  'skein256-248': 0xb31f,\n  'skein256-256': 0xb320,\n  'skein512-8': 0xb321,\n  'skein512-16': 0xb322,\n  'skein512-24': 0xb323,\n  'skein512-32': 0xb324,\n  'skein512-40': 0xb325,\n  'skein512-48': 0xb326,\n  'skein512-56': 0xb327,\n  'skein512-64': 0xb328,\n  'skein512-72': 0xb329,\n  'skein512-80': 0xb32a,\n  'skein512-88': 0xb32b,\n  'skein512-96': 0xb32c,\n  'skein512-104': 0xb32d,\n  'skein512-112': 0xb32e,\n  'skein512-120': 0xb32f,\n  'skein512-128': 0xb330,\n  'skein512-136': 0xb331,\n  'skein512-144': 0xb332,\n  'skein512-152': 0xb333,\n  'skein512-160': 0xb334,\n  'skein512-168': 0xb335,\n  'skein512-176': 0xb336,\n  'skein512-184': 0xb337,\n  'skein512-192': 0xb338,\n  'skein512-200': 0xb339,\n  'skein512-208': 0xb33a,\n  'skein512-216': 0xb33b,\n  'skein512-224': 0xb33c,\n  'skein512-232': 0xb33d,\n  'skein512-240': 0xb33e,\n  'skein512-248': 0xb33f,\n  'skein512-256': 0xb340,\n  'skein512-264': 0xb341,\n  'skein512-272': 0xb342,\n  'skein512-280': 0xb343,\n  'skein512-288': 0xb344,\n  'skein512-296': 0xb345,\n  'skein512-304': 0xb346,\n  'skein512-312': 0xb347,\n  'skein512-320': 0xb348,\n  'skein512-328': 0xb349,\n  'skein512-336': 0xb34a,\n  'skein512-344': 0xb34b,\n  'skein512-352': 0xb34c,\n  'skein512-360': 0xb34d,\n  'skein512-368': 0xb34e,\n  'skein512-376': 0xb34f,\n  'skein512-384': 0xb350,\n  'skein512-392': 0xb351,\n  'skein512-400': 0xb352,\n  'skein512-408': 0xb353,\n  'skein512-416': 0xb354,\n  'skein512-424': 0xb355,\n  'skein512-432': 0xb356,\n  'skein512-440': 0xb357,\n  'skein512-448': 0xb358,\n  'skein512-456': 0xb359,\n  'skein512-464': 0xb35a,\n  'skein512-472': 0xb35b,\n  'skein512-480': 0xb35c,\n  'skein512-488': 0xb35d,\n  'skein512-496': 0xb35e,\n  'skein512-504': 0xb35f,\n  'skein512-512': 0xb360,\n  'skein1024-8': 0xb361,\n  'skein1024-16': 0xb362,\n  'skein1024-24': 0xb363,\n  'skein1024-32': 0xb364,\n  'skein1024-40': 0xb365,\n  'skein1024-48': 0xb366,\n  'skein1024-56': 0xb367,\n  'skein1024-64': 0xb368,\n  'skein1024-72': 0xb369,\n  'skein1024-80': 0xb36a,\n  'skein1024-88': 0xb36b,\n  'skein1024-96': 0xb36c,\n  'skein1024-104': 0xb36d,\n  'skein1024-112': 0xb36e,\n  'skein1024-120': 0xb36f,\n  'skein1024-128': 0xb370,\n  'skein1024-136': 0xb371,\n  'skein1024-144': 0xb372,\n  'skein1024-152': 0xb373,\n  'skein1024-160': 0xb374,\n  'skein1024-168': 0xb375,\n  'skein1024-176': 0xb376,\n  'skein1024-184': 0xb377,\n  'skein1024-192': 0xb378,\n  'skein1024-200': 0xb379,\n  'skein1024-208': 0xb37a,\n  'skein1024-216': 0xb37b,\n  'skein1024-224': 0xb37c,\n  'skein1024-232': 0xb37d,\n  'skein1024-240': 0xb37e,\n  'skein1024-248': 0xb37f,\n  'skein1024-256': 0xb380,\n  'skein1024-264': 0xb381,\n  'skein1024-272': 0xb382,\n  'skein1024-280': 0xb383,\n  'skein1024-288': 0xb384,\n  'skein1024-296': 0xb385,\n  'skein1024-304': 0xb386,\n  'skein1024-312': 0xb387,\n  'skein1024-320': 0xb388,\n  'skein1024-328': 0xb389,\n  'skein1024-336': 0xb38a,\n  'skein1024-344': 0xb38b,\n  'skein1024-352': 0xb38c,\n  'skein1024-360': 0xb38d,\n  'skein1024-368': 0xb38e,\n  'skein1024-376': 0xb38f,\n  'skein1024-384': 0xb390,\n  'skein1024-392': 0xb391,\n  'skein1024-400': 0xb392,\n  'skein1024-408': 0xb393,\n  'skein1024-416': 0xb394,\n  'skein1024-424': 0xb395,\n  'skein1024-432': 0xb396,\n  'skein1024-440': 0xb397,\n  'skein1024-448': 0xb398,\n  'skein1024-456': 0xb399,\n  'skein1024-464': 0xb39a,\n  'skein1024-472': 0xb39b,\n  'skein1024-480': 0xb39c,\n  'skein1024-488': 0xb39d,\n  'skein1024-496': 0xb39e,\n  'skein1024-504': 0xb39f,\n  'skein1024-512': 0xb3a0,\n  'skein1024-520': 0xb3a1,\n  'skein1024-528': 0xb3a2,\n  'skein1024-536': 0xb3a3,\n  'skein1024-544': 0xb3a4,\n  'skein1024-552': 0xb3a5,\n  'skein1024-560': 0xb3a6,\n  'skein1024-568': 0xb3a7,\n  'skein1024-576': 0xb3a8,\n  'skein1024-584': 0xb3a9,\n  'skein1024-592': 0xb3aa,\n  'skein1024-600': 0xb3ab,\n  'skein1024-608': 0xb3ac,\n  'skein1024-616': 0xb3ad,\n  'skein1024-624': 0xb3ae,\n  'skein1024-632': 0xb3af,\n  'skein1024-640': 0xb3b0,\n  'skein1024-648': 0xb3b1,\n  'skein1024-656': 0xb3b2,\n  'skein1024-664': 0xb3b3,\n  'skein1024-672': 0xb3b4,\n  'skein1024-680': 0xb3b5,\n  'skein1024-688': 0xb3b6,\n  'skein1024-696': 0xb3b7,\n  'skein1024-704': 0xb3b8,\n  'skein1024-712': 0xb3b9,\n  'skein1024-720': 0xb3ba,\n  'skein1024-728': 0xb3bb,\n  'skein1024-736': 0xb3bc,\n  'skein1024-744': 0xb3bd,\n  'skein1024-752': 0xb3be,\n  'skein1024-760': 0xb3bf,\n  'skein1024-768': 0xb3c0,\n  'skein1024-776': 0xb3c1,\n  'skein1024-784': 0xb3c2,\n  'skein1024-792': 0xb3c3,\n  'skein1024-800': 0xb3c4,\n  'skein1024-808': 0xb3c5,\n  'skein1024-816': 0xb3c6,\n  'skein1024-824': 0xb3c7,\n  'skein1024-832': 0xb3c8,\n  'skein1024-840': 0xb3c9,\n  'skein1024-848': 0xb3ca,\n  'skein1024-856': 0xb3cb,\n  'skein1024-864': 0xb3cc,\n  'skein1024-872': 0xb3cd,\n  'skein1024-880': 0xb3ce,\n  'skein1024-888': 0xb3cf,\n  'skein1024-896': 0xb3d0,\n  'skein1024-904': 0xb3d1,\n  'skein1024-912': 0xb3d2,\n  'skein1024-920': 0xb3d3,\n  'skein1024-928': 0xb3d4,\n  'skein1024-936': 0xb3d5,\n  'skein1024-944': 0xb3d6,\n  'skein1024-952': 0xb3d7,\n  'skein1024-960': 0xb3d8,\n  'skein1024-968': 0xb3d9,\n  'skein1024-976': 0xb3da,\n  'skein1024-984': 0xb3db,\n  'skein1024-992': 0xb3dc,\n  'skein1024-1000': 0xb3dd,\n  'skein1024-1008': 0xb3de,\n  'skein1024-1016': 0xb3df,\n  'skein1024-1024': 0xb3e0,\n  'poseidon-bls12_381-a2-fc1': 0xb401,\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402,\n  'zeroxcert-imprint-256': 0xce11,\n  'fil-commitment-unsealed': 0xf101,\n  'fil-commitment-sealed': 0xf102,\n  'holochain-adr-v0': 0x807124,\n  'holochain-adr-v1': 0x817124,\n  'holochain-key-v0': 0x947124,\n  'holochain-key-v1': 0x957124,\n  'holochain-sig-v0': 0xa27124,\n  'holochain-sig-v1': 0xa37124,\n  'skynet-ns': 0xb19910\n});\nvar baseTable_1 = {\n  baseTable\n};\n/** @typedef {import('./generated-types').CodecName} CodecName */\n\n/** @typedef {import('./generated-types').CodecNumber} CodecNumber */\n\nconst {\n  baseTable: baseTable$1\n} = baseTable_1;\n/**\r\n * @type {Map<CodecNumber,CodecName>}\r\n */\n\nconst nameTable = new Map();\n\nfor (const encodingName in baseTable$1) {\n  const code = baseTable$1[encodingName];\n  nameTable.set(code,\n  /** @type {CodecName} */\n  encodingName);\n}\n\nvar intTable = Object.freeze(nameTable);\nvar util$2 = {\n  numberToUint8Array,\n  uint8ArrayToNumber,\n  varintUint8ArrayEncode,\n  varintEncode\n};\n\nfunction uint8ArrayToNumber(buf) {\n  return parseInt(toString_1(buf, 'base16'), 16);\n}\n\nfunction numberToUint8Array(num) {\n  let hexString = num.toString(16);\n\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString;\n  }\n\n  return fromString_1(hexString, 'base16');\n}\n\nfunction varintUint8ArrayEncode(input) {\n  return Uint8Array.from(varint.encode(uint8ArrayToNumber(input)));\n}\n\nfunction varintEncode(num) {\n  return Uint8Array.from(varint.encode(num));\n}\n/** @typedef {import('./generated-types').NameUint8ArrayMap} NameUint8ArrayMap */\n\n\nconst {\n  baseTable: baseTable$2\n} = baseTable_1;\nconst varintEncode$1 = util$2.varintEncode;\nconst varintTable =\n/** @type {NameUint8ArrayMap} */\n{};\n\nfor (const encodingName in baseTable$2) {\n  const code = baseTable$2[encodingName];\n  varintTable[encodingName] = varintEncode$1(code);\n}\n\nvar varintTable_1 = Object.freeze(varintTable);\n/** @typedef {import('./generated-types').ConstantNumberMap} ConstantNumberMap */\n\nconst {\n  baseTable: baseTable$3\n} = baseTable_1;\nconst constants$2 =\n/** @type {ConstantNumberMap} */\n{};\n\nfor (const [name, code] of Object.entries(baseTable$3)) {\n  const constant = name.toUpperCase().replace(/-/g, '_');\n  constants$2[constant] = code;\n}\n\nvar constants_1$1 = Object.freeze(constants$2);\n/** @typedef {import('./generated-types').CodecName} CodecName */\n\n/** @typedef {import('./generated-types').NumberNameMap} NumberNameMap */\n\nconst {\n  baseTable: baseTable$4\n} = baseTable_1;\nconst tableByCode =\n/** @type {NumberNameMap} */\n{};\n\nfor (const [name, code] of Object.entries(baseTable$4)) {\n  if (tableByCode[code] === undefined) {\n    tableByCode[code] =\n    /** @type {CodecName} **/\n    name;\n  }\n}\n\nvar print =\n/** @type {NumberNameMap} */\nObject.freeze(tableByCode);\n/**\r\n * Implementation of the multicodec specification.\r\n *\r\n * @module multicodec\r\n * @example\r\n * const multicodec = require('multicodec')\r\n *\r\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\r\n * // prefixedProtobuf 0x50...\r\n *\r\n */\n\n/** @typedef {import('./generated-types').CodecName} CodecName */\n\n/** @typedef {import('./generated-types').CodecNumber} CodecNumber */\n\n/**\r\n * Prefix a buffer with a multicodec-packed.\r\n *\r\n * @param {CodecName|Uint8Array} multicodecStrOrCode\r\n * @param {Uint8Array} data\r\n * @returns {Uint8Array}\r\n */\n\nfunction addPrefix(multicodecStrOrCode, data) {\n  let prefix;\n\n  if (multicodecStrOrCode instanceof Uint8Array) {\n    prefix = util$2.varintUint8ArrayEncode(multicodecStrOrCode);\n  } else {\n    if (varintTable_1[multicodecStrOrCode]) {\n      prefix = varintTable_1[multicodecStrOrCode];\n    } else {\n      throw new Error('multicodec not recognized');\n    }\n  }\n\n  return concat_1([prefix, data], prefix.length + data.length);\n}\n/**\r\n * Decapsulate the multicodec-packed prefix from the data.\r\n *\r\n * @param {Uint8Array} data\r\n * @returns {Uint8Array}\r\n */\n\n\nfunction rmPrefix(data) {\n  varint.decode(data);\n  return data.slice(varint.decode.bytes);\n}\n/**\r\n * Get the codec of the prefixed data.\r\n *\r\n * @param {Uint8Array} prefixedData\r\n * @returns {CodecName}\r\n */\n\n\nfunction getCodec(prefixedData) {\n  const code = varint.decode(prefixedData);\n  const codecName = intTable.get(code);\n\n  if (codecName === undefined) {\n    throw new Error(`Code ${code} not found`);\n  }\n\n  return codecName;\n}\n/**\r\n * Get the name of the codec.\r\n *\r\n * @param {CodecNumber} codec\r\n * @returns {CodecName|undefined}\r\n */\n\n\nfunction getName(codec) {\n  return intTable.get(codec);\n}\n/**\r\n * Get the code of the codec\r\n *\r\n * @param {CodecName} name\r\n * @returns {CodecNumber}\r\n */\n\n\nfunction getNumber(name) {\n  const code = varintTable_1[name];\n\n  if (code === undefined) {\n    throw new Error('Codec `' + name + '` not found');\n  }\n\n  return varint.decode(code);\n}\n/**\r\n * Get the code of the prefixed data.\r\n *\r\n * @param {Uint8Array} prefixedData\r\n * @returns {CodecNumber}\r\n */\n\n\nfunction getCode(prefixedData) {\n  return varint.decode(prefixedData);\n}\n/**\r\n * Get the code as varint of a codec name.\r\n *\r\n * @param {CodecName} codecName\r\n * @returns {Uint8Array}\r\n */\n\n\nfunction getCodeVarint(codecName) {\n  const code = varintTable_1[codecName];\n\n  if (code === undefined) {\n    throw new Error('Codec `' + codecName + '` not found');\n  }\n\n  return code;\n}\n/**\r\n * Get the varint of a code.\r\n *\r\n * @param {CodecNumber} code\r\n * @returns {Array.<number>}\r\n */\n\n\nfunction getVarint(code) {\n  return varint.encode(code);\n} // Make the constants top-level constants\n// Human friendly names for printing, e.g. in error messages\n\n\nvar src$3 = {\n  addPrefix,\n  rmPrefix,\n  getCodec,\n  getName,\n  getNumber,\n  getCode,\n  getCodeVarint,\n  getVarint,\n  print,\n  ...constants_1$1\n};\nconst CIDUtil = {\n  /**\r\n   * Test if the given input is a valid CID object.\r\n   * Returns an error message if it is not.\r\n   * Returns undefined if it is a valid CID.\r\n   *\r\n   * @param {any} other\r\n   * @returns {string|undefined}\r\n   */\n  checkCIDComponents: function (other) {\n    if (other == null) {\n      return 'null values are not valid CIDs';\n    }\n\n    if (!(other.version === 0 || other.version === 1)) {\n      return 'Invalid version, must be a number equal to 1 or 0';\n    }\n\n    if (typeof other.codec !== 'string') {\n      return 'codec must be string';\n    }\n\n    if (other.version === 0) {\n      if (other.codec !== 'dag-pb') {\n        return \"codec must be 'dag-pb' for CIDv0\";\n      }\n\n      if (other.multibaseName !== 'base58btc') {\n        return \"multibaseName must be 'base58btc' for CIDv0\";\n      }\n    }\n\n    if (!(other.multihash instanceof Uint8Array)) {\n      return 'multihash must be a Uint8Array';\n    }\n\n    try {\n      src$2.validate(other.multihash);\n    } catch (err) {\n      let errorMsg = err.message;\n\n      if (!errorMsg) {\n        // Just in case mh.validate() throws an error with empty error message\n        errorMsg = 'Multihash validation failed';\n      }\n\n      return errorMsg;\n    }\n  }\n};\nvar cidUtil = CIDUtil;\n/**\r\n * Returns true if the two passed Uint8Arrays have the same content\r\n *\r\n * @param {Uint8Array} a\r\n * @param {Uint8Array} b\r\n * @returns {boolean}\r\n */\n\nfunction equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar equals_1 = equals;\nconst {\n  baseTable: codecs\n} = baseTable_1;\nconst codecInts = Object.keys(codecs).reduce((p, name) => {\n  p[codecs[name]] = name;\n  return p;\n}, {});\nconst symbol = Symbol.for('@ipld/js-cid/CID');\n/**\r\n * @typedef {Object} SerializedCID\r\n * @property {string} codec\r\n * @property {number} version\r\n * @property {Uint8Array} hash\r\n */\n\n/**\r\n * @typedef {0|1} CIDVersion\r\n * @typedef {import('multibase').BaseNameOrCode} BaseNameOrCode\r\n */\n\n/**\r\n * Class representing a CID `<mbase><version><mcodec><mhash>`\r\n * , as defined in [ipld/cid](https://github.com/multiformats/cid).\r\n *\r\n * @class CID\r\n */\n\nclass CID {\n  /**\r\n   * Create a new CID.\r\n   *\r\n   * The algorithm for argument input is roughly:\r\n   * ```\r\n   * if (cid)\r\n   *   -> create a copy\r\n   * else if (str)\r\n   *   if (1st char is on multibase table) -> CID String\r\n   *   else -> bs58 encoded multihash\r\n   * else if (Uint8Array)\r\n   *   if (1st byte is 0 or 1) -> CID\r\n   *   else -> multihash\r\n   * else if (Number)\r\n   *   -> construct CID by parts\r\n   * ```\r\n   *\r\n   * @param {CIDVersion | string | Uint8Array | CID} version\r\n   * @param {string|number} [codec]\r\n   * @param {Uint8Array} [multihash]\r\n   * @param {string} [multibaseName]\r\n   *\r\n   * @example\r\n   * new CID(<version>, <codec>, <multihash>, <multibaseName>)\r\n   * new CID(<cidStr>)\r\n   * new CID(<cid.bytes>)\r\n   * new CID(<multihash>)\r\n   * new CID(<bs58 encoded multihash>)\r\n   * new CID(<cid>)\r\n   */\n  constructor(version, codec, multihash, multibaseName) {\n    Object.defineProperty(this, symbol, {\n      value: true\n    });\n\n    if (CID.isCID(version)) {\n      // version is an exising CID instance\n      const cid =\n      /** @type {CID} */\n      version;\n      this.version = cid.version;\n      this.codec = cid.codec;\n      this.multihash = cid.multihash; // Default guard for when a CID < 0.7 is passed with no multibaseName\n\n      this.multibaseName = cid.multibaseName || (cid.version === 0 ? 'base58btc' : 'base32');\n      return;\n    }\n\n    if (typeof version === 'string') {\n      // e.g. 'base32' or false\n      const baseName = src$1.isEncoded(version);\n\n      if (baseName) {\n        // version is a CID String encoded with multibase, so v1\n        const cid = src$1.decode(version);\n        this.version = parseInt(cid[0].toString(), 16);\n        this.codec = src$3.getCodec(cid.slice(1));\n        this.multihash = src$3.rmPrefix(cid.slice(1));\n        this.multibaseName = baseName;\n      } else {\n        // version is a base58btc string multihash, so v0\n        this.version = 0;\n        this.codec = 'dag-pb';\n        this.multihash = src$2.fromB58String(version);\n        this.multibaseName = 'base58btc';\n      }\n\n      CID.validateCID(this);\n      Object.defineProperty(this, 'string', {\n        value: version\n      });\n      return;\n    }\n\n    if (version instanceof Uint8Array) {\n      const v = parseInt(version[0].toString(), 16);\n\n      if (v === 1) {\n        // version is a CID Uint8Array\n        const cid = version;\n        this.version = v;\n        this.codec = src$3.getCodec(cid.slice(1));\n        this.multihash = src$3.rmPrefix(cid.slice(1));\n        this.multibaseName = 'base32';\n      } else {\n        // version is a raw multihash Uint8Array, so v0\n        this.version = 0;\n        this.codec = 'dag-pb';\n        this.multihash = version;\n        this.multibaseName = 'base58btc';\n      }\n\n      CID.validateCID(this);\n      return;\n    } // otherwise, assemble the CID from the parameters\n\n    /**\r\n     * The version of the CID.\r\n     *\r\n     * @type {CIDVersion}\r\n     */\n\n\n    this.version = version;\n\n    if (typeof codec === 'number') {\n      codec = codecInts[codec];\n    }\n    /**\r\n     * The codec of the CID.\r\n     *\r\n     * @type {string}\r\n     */\n\n\n    this.codec = codec;\n    /**\r\n     * The multihash of the CID.\r\n     *\r\n     * @type {Uint8Array}\r\n     */\n\n    this.multihash = multihash;\n    /**\r\n     * Multibase name as string.\r\n     *\r\n     * @deprecated\r\n     * @type {string}\r\n     */\n\n    this.multibaseName = multibaseName || (version === 0 ? 'base58btc' : 'base32');\n    CID.validateCID(this);\n  }\n  /**\r\n   * The CID as a `Uint8Array`\r\n   *\r\n   * @returns {Uint8Array}\r\n   *\r\n   */\n\n\n  get bytes() {\n    // @ts-ignore\n    let bytes = this._bytes;\n\n    if (!bytes) {\n      if (this.version === 0) {\n        bytes = this.multihash;\n      } else if (this.version === 1) {\n        const codec = src$3.getCodeVarint(this.codec);\n        bytes = concat_1([[1], codec, this.multihash], 1 + codec.byteLength + this.multihash.byteLength);\n      } else {\n        throw new Error('unsupported version');\n      } // Cache this Uint8Array so it doesn't have to be recreated\n\n\n      Object.defineProperty(this, '_bytes', {\n        value: bytes\n      });\n    }\n\n    return bytes;\n  }\n  /**\r\n   * The prefix of the CID.\r\n   *\r\n   * @returns {Uint8Array}\r\n   */\n\n\n  get prefix() {\n    const codec = src$3.getCodeVarint(this.codec);\n    const multihash = src$2.prefix(this.multihash);\n    const prefix = concat_1([[this.version], codec, multihash], 1 + codec.byteLength + multihash.byteLength);\n    return prefix;\n  }\n  /**\r\n   * The codec of the CID in its number form.\r\n   *\r\n   * @returns {number}\r\n   */\n\n\n  get code() {\n    return codecs[this.codec];\n  }\n  /**\r\n   * Convert to a CID of version `0`.\r\n   *\r\n   * @returns {CID}\r\n   */\n\n\n  toV0() {\n    if (this.codec !== 'dag-pb') {\n      throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n    }\n\n    const {\n      name,\n      length\n    } = src$2.decode(this.multihash);\n\n    if (name !== 'sha2-256') {\n      throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n    }\n\n    if (length !== 32) {\n      throw new Error('Cannot convert non 32 byte multihash CID to CIDv0');\n    }\n\n    return new CID(0, this.codec, this.multihash);\n  }\n  /**\r\n   * Convert to a CID of version `1`.\r\n   *\r\n   * @returns {CID}\r\n   */\n\n\n  toV1() {\n    return new CID(1, this.codec, this.multihash);\n  }\n  /**\r\n   * Encode the CID into a string.\r\n   *\r\n   * @param {BaseNameOrCode} [base=this.multibaseName] - Base encoding to use.\r\n   * @returns {string}\r\n   */\n\n\n  toBaseEncodedString(base = this.multibaseName) {\n    // @ts-ignore non enumerable cache property\n    if (this.string && this.string.length !== 0 && base === this.multibaseName) {\n      // @ts-ignore non enumerable cache property\n      return this.string;\n    }\n\n    let str;\n\n    if (this.version === 0) {\n      if (base !== 'base58btc') {\n        throw new Error('not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()');\n      }\n\n      str = src$2.toB58String(this.multihash);\n    } else if (this.version === 1) {\n      str = toString_1(src$1.encode(base, this.bytes));\n    } else {\n      throw new Error('unsupported version');\n    }\n\n    if (base === this.multibaseName) {\n      // cache the string value\n      Object.defineProperty(this, 'string', {\n        value: str\n      });\n    }\n\n    return str;\n  }\n  /**\r\n   * CID(QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n)\r\n   *\r\n   * @returns {string}\r\n   */\n\n\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  /**\r\n   * Encode the CID into a string.\r\n   *\r\n   * @param {BaseNameOrCode} [base=this.multibaseName] - Base encoding to use.\r\n   * @returns {string}\r\n   */\n\n\n  toString(base) {\n    return this.toBaseEncodedString(base);\n  }\n  /**\r\n   * Serialize to a plain object.\r\n   *\r\n   * @returns {SerializedCID}\r\n   */\n\n\n  toJSON() {\n    return {\n      codec: this.codec,\n      version: this.version,\n      hash: this.multihash\n    };\n  }\n  /**\r\n   * Compare equality with another CID.\r\n   *\r\n   * @param {CID} other\r\n   * @returns {boolean}\r\n   */\n\n\n  equals(other) {\n    return this.codec === other.codec && this.version === other.version && equals_1(this.multihash, other.multihash);\n  }\n  /**\r\n   * Test if the given input is a valid CID object.\r\n   * Throws if it is not.\r\n   *\r\n   * @param {any} other - The other CID.\r\n   * @returns {void}\r\n   */\n\n\n  static validateCID(other) {\n    const errorMsg = cidUtil.checkCIDComponents(other);\n\n    if (errorMsg) {\n      throw new Error(errorMsg);\n    }\n  }\n  /**\r\n   * Check if object is a CID instance\r\n   *\r\n   * @param {any} value\r\n   * @returns {value is CID}\r\n   */\n\n\n  static isCID(value) {\n    return value instanceof CID || Boolean(value && value[symbol]);\n  }\n\n}\n\nCID.codecs = codecs;\nvar src$4 = CID;\nvar encode_1$1 = encode$3;\nvar MSB$2 = 0x80,\n    REST$2 = 0x7F,\n    MSBALL$1 = ~REST$2,\n    INT$1 = Math.pow(2, 31);\n\nfunction encode$3(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while (num >= INT$1) {\n    out[offset++] = num & 0xFF | MSB$2;\n    num /= 128;\n  }\n\n  while (num & MSBALL$1) {\n    out[offset++] = num & 0xFF | MSB$2;\n    num >>>= 7;\n  }\n\n  out[offset] = num | 0;\n  encode$3.bytes = offset - oldOffset + 1;\n  return out;\n}\n\nvar decode$3 = read$1;\nvar MSB$3 = 0x80,\n    REST$3 = 0x7F;\n\nfunction read$1(buf, offset) {\n  var res = 0,\n      offset = offset || 0,\n      shift = 0,\n      counter = offset,\n      b,\n      l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read$1.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$3) << shift : (b & REST$3) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$3);\n\n  read$1.bytes = counter - offset;\n  return res;\n}\n\nvar N1$1 = Math.pow(2, 7);\nvar N2$1 = Math.pow(2, 14);\nvar N3$1 = Math.pow(2, 21);\nvar N4$1 = Math.pow(2, 28);\nvar N5$1 = Math.pow(2, 35);\nvar N6$1 = Math.pow(2, 42);\nvar N7$1 = Math.pow(2, 49);\nvar N8$1 = Math.pow(2, 56);\nvar N9$1 = Math.pow(2, 63);\n\nvar length$1 = function (value) {\n  return value < N1$1 ? 1 : value < N2$1 ? 2 : value < N3$1 ? 3 : value < N4$1 ? 4 : value < N5$1 ? 5 : value < N6$1 ? 6 : value < N7$1 ? 7 : value < N8$1 ? 8 : value < N9$1 ? 9 : 10;\n};\n\nvar varint$1 = {\n  encode: encode_1$1,\n  decode: decode$3,\n  encodingLength: length$1\n};\nvar convert = Convert; // converts (serializes) addresses\n\nfunction Convert(proto, a) {\n  if (a instanceof Uint8Array) {\n    return Convert.toString(proto, a);\n  } else {\n    return Convert.toBytes(proto, a);\n  }\n}\n\nConvert.toString = function convertToString(proto, buf) {\n  proto = protocolsTable(proto);\n\n  switch (proto.code) {\n    case 4: // ipv4\n\n    case 41:\n      // ipv6\n      return bytes2ip(buf);\n\n    case 6: // tcp\n\n    case 273: // udp\n\n    case 33: // dccp\n\n    case 132:\n      // sctp\n      return bytes2port(buf);\n\n    case 53: // dns\n\n    case 54: // dns4\n\n    case 55: // dns6\n\n    case 56: // dnsaddr\n\n    case 400: // unix\n\n    case 777:\n      // memory\n      return bytes2str(buf);\n\n    case 421:\n      // ipfs\n      return bytes2mh(buf);\n\n    case 444:\n      // onion\n      return bytes2onion(buf);\n\n    case 445:\n      // onion3\n      return bytes2onion(buf);\n\n    default:\n      return toString_1(buf, 'base16');\n    // no clue. convert to hex\n  }\n};\n\nConvert.toBytes = function convertToBytes(proto, str) {\n  proto = protocolsTable(proto);\n\n  switch (proto.code) {\n    case 4:\n      // ipv4\n      return ip2bytes(str);\n\n    case 41:\n      // ipv6\n      return ip2bytes(str);\n\n    case 6: // tcp\n\n    case 273: // udp\n\n    case 33: // dccp\n\n    case 132:\n      // sctp\n      return port2bytes(parseInt(str, 10));\n\n    case 53: // dns\n\n    case 54: // dns4\n\n    case 55: // dns6\n\n    case 56: // dnsaddr\n\n    case 400: // unix\n\n    case 777:\n      // memory\n      return str2bytes(str);\n\n    case 421:\n      // ipfs\n      return mh2bytes(str);\n\n    case 444:\n      // onion\n      return onion2bytes(str);\n\n    case 445:\n      // onion3\n      return onion32bytes(str);\n\n    default:\n      return fromString_1(str, 'base16');\n    // no clue. convert from hex\n  }\n};\n\nfunction ip2bytes(ipString) {\n  if (!ip$1.isIP(ipString)) {\n    throw new Error('invalid ip address');\n  }\n\n  return ip$1.toBytes(ipString);\n}\n\nfunction bytes2ip(ipBuff) {\n  const ipString = ip$1.toString(ipBuff);\n\n  if (!ipString || !ip$1.isIP(ipString)) {\n    throw new Error('invalid ip address');\n  }\n\n  return ipString;\n}\n\nfunction port2bytes(port) {\n  const buf = new ArrayBuffer(2);\n  const view = new DataView(buf);\n  view.setUint16(0, port);\n  return new Uint8Array(buf);\n}\n\nfunction bytes2port(buf) {\n  const view = new DataView(buf.buffer);\n  return view.getUint16(0);\n}\n\nfunction str2bytes(str) {\n  const buf = fromString_1(str);\n  const size = Uint8Array.from(varint$1.encode(buf.length));\n  return concat_1([size, buf], size.length + buf.length);\n}\n\nfunction bytes2str(buf) {\n  const size = varint$1.decode(buf);\n  buf = buf.slice(varint$1.decode.bytes);\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths');\n  }\n\n  return toString_1(buf);\n}\n\nfunction mh2bytes(hash) {\n  // the address is a varint prefixed multihash string representation\n  const mh = new src$4(hash).multihash;\n  const size = Uint8Array.from(varint$1.encode(mh.length));\n  return concat_1([size, mh], size.length + mh.length);\n}\n\nfunction bytes2mh(buf) {\n  const size = varint$1.decode(buf);\n  const address = buf.slice(varint$1.decode.bytes);\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths');\n  }\n\n  return toString_1(address, 'base58btc');\n}\n\nfunction onion2bytes(str) {\n  const addr = str.split(':');\n\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number');\n  }\n\n  if (addr[0].length !== 16) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion address.');\n  } // onion addresses do not include the multibase prefix, add it before decoding\n\n\n  const buf = src$1.decode('b' + addr[0]); // onion port number\n\n  const port = parseInt(addr[1], 10);\n\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)');\n  }\n\n  const portBuf = port2bytes(port);\n  return concat_1([buf, portBuf], buf.length + portBuf.length);\n}\n\nfunction onion32bytes(str) {\n  const addr = str.split(':');\n\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number');\n  }\n\n  if (addr[0].length !== 56) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion3 address.');\n  } // onion addresses do not include the multibase prefix, add it before decoding\n\n\n  const buf = src$1.decode('b' + addr[0]); // onion port number\n\n  const port = parseInt(addr[1], 10);\n\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)');\n  }\n\n  const portBuf = port2bytes(port);\n  return concat_1([buf, portBuf], buf.length + portBuf.length);\n}\n\nfunction bytes2onion(buf) {\n  const addrBytes = buf.slice(0, buf.length - 2);\n  const portBytes = buf.slice(buf.length - 2);\n  const addr = toString_1(addrBytes, 'base32');\n  const port = bytes2port(portBytes);\n  return addr + ':' + port;\n} // export codec\n\n\nvar codec = {\n  stringToStringTuples,\n  stringTuplesToString,\n  tuplesToStringTuples,\n  stringTuplesToTuples,\n  bytesToTuples,\n  tuplesToBytes,\n  bytesToString,\n  stringToBytes,\n  fromString: fromString$1,\n  fromBytes,\n  validateBytes,\n  isValidBytes,\n  cleanPath,\n  ParseError,\n  protoFromTuple,\n  sizeForAddr\n}; // string -> [[str name, str addr]... ]\n\nfunction stringToStringTuples(str) {\n  const tuples = [];\n  const parts = str.split('/').slice(1); // skip first empty elem\n\n  if (parts.length === 1 && parts[0] === '') {\n    return [];\n  }\n\n  for (let p = 0; p < parts.length; p++) {\n    const part = parts[p];\n    const proto = protocolsTable(part);\n\n    if (proto.size === 0) {\n      tuples.push([part]);\n      continue;\n    }\n\n    p++; // advance addr part\n\n    if (p >= parts.length) {\n      throw ParseError('invalid address: ' + str);\n    } // if it's a path proto, take the rest\n\n\n    if (proto.path) {\n      tuples.push([part, // TODO: should we need to check each path part to see if it's a proto?\n      // This would allow for other protocols to be added after a unix path,\n      // however it would have issues if the path had a protocol name in the path\n      cleanPath(parts.slice(p).join('/'))]);\n      break;\n    }\n\n    tuples.push([part, parts[p]]);\n  }\n\n  return tuples;\n} // [[str name, str addr]... ] -> string\n\n\nfunction stringTuplesToString(tuples) {\n  const parts = [];\n  tuples.map(tup => {\n    const proto = protoFromTuple(tup);\n    parts.push(proto.name);\n\n    if (tup.length > 1) {\n      parts.push(tup[1]);\n    }\n  });\n  return cleanPath(parts.join('/'));\n} // [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n\n\nfunction stringTuplesToTuples(tuples) {\n  return tuples.map(tup => {\n    if (!Array.isArray(tup)) {\n      tup = [tup];\n    }\n\n    const proto = protoFromTuple(tup);\n\n    if (tup.length > 1) {\n      return [proto.code, convert.toBytes(proto.code, tup[1])];\n    }\n\n    return [proto.code];\n  });\n} // [[int code, Uint8Array]... ] -> [[str name, str addr]... ]\n\n\nfunction tuplesToStringTuples(tuples) {\n  return tuples.map(tup => {\n    const proto = protoFromTuple(tup);\n\n    if (tup.length > 1) {\n      return [proto.code, convert.toString(proto.code, tup[1])];\n    }\n\n    return [proto.code];\n  });\n} // [[int code, Uint8Array ]... ] -> Uint8Array\n\n\nfunction tuplesToBytes(tuples) {\n  return fromBytes(concat_1(tuples.map(tup => {\n    const proto = protoFromTuple(tup);\n    let buf = Uint8Array.from(varint$1.encode(proto.code));\n\n    if (tup.length > 1) {\n      buf = concat_1([buf, tup[1]]); // add address buffer\n    }\n\n    return buf;\n  })));\n}\n\nfunction sizeForAddr(p, addr) {\n  if (p.size > 0) {\n    return p.size / 8;\n  } else if (p.size === 0) {\n    return 0;\n  } else {\n    const size = varint$1.decode(addr);\n    return size + varint$1.decode.bytes;\n  }\n} // Uint8Array -> [[int code, Uint8Array ]... ]\n\n\nfunction bytesToTuples(buf) {\n  const tuples = [];\n  let i = 0;\n\n  while (i < buf.length) {\n    const code = varint$1.decode(buf, i);\n    const n = varint$1.decode.bytes;\n    const p = protocolsTable(code);\n    const size = sizeForAddr(p, buf.slice(i + n));\n\n    if (size === 0) {\n      tuples.push([code]);\n      i += n;\n      continue;\n    }\n\n    const addr = buf.slice(i + n, i + n + size);\n    i += size + n;\n\n    if (i > buf.length) {\n      // did not end _exactly_ at buffer.length\n      throw ParseError('Invalid address Uint8Array: ' + toString_1(buf, 'base16'));\n    } // ok, tuple seems good.\n\n\n    tuples.push([code, addr]);\n  }\n\n  return tuples;\n} // Uint8Array -> String\n\n\nfunction bytesToString(buf) {\n  const a = bytesToTuples(buf);\n  const b = tuplesToStringTuples(a);\n  return stringTuplesToString(b);\n} // String -> Uint8Array\n\n\nfunction stringToBytes(str) {\n  str = cleanPath(str);\n  const a = stringToStringTuples(str);\n  const b = stringTuplesToTuples(a);\n  return tuplesToBytes(b);\n} // String -> Uint8Array\n\n\nfunction fromString$1(str) {\n  return stringToBytes(str);\n} // Uint8Array -> Uint8Array\n\n\nfunction fromBytes(buf) {\n  const err = validateBytes(buf);\n  if (err) throw err;\n  return Uint8Array.from(buf); // copy\n}\n\nfunction validateBytes(buf) {\n  try {\n    bytesToTuples(buf); // try to parse. will throw if breaks\n  } catch (err) {\n    return err;\n  }\n}\n\nfunction isValidBytes(buf) {\n  return validateBytes(buf) === undefined;\n}\n\nfunction cleanPath(str) {\n  return '/' + str.trim().split('/').filter(a => a).join('/');\n}\n\nfunction ParseError(str) {\n  return new Error('Error parsing address: ' + str);\n}\n\nfunction protoFromTuple(tup) {\n  const proto = protocolsTable(tup[0]);\n  return proto;\n}\n\nfunction withIs(Class, {\n  className,\n  symbolName\n}) {\n  const symbol = Symbol.for(symbolName);\n  const ClassIsWrapper = {\n    // The code below assigns the class wrapper to an object to trick\n    // JavaScript engines to show the name of the extended class when\n    // logging an instances.\n    // We are assigning an anonymous class (class wrapper) to the object\n    // with key `className` to keep the correct name.\n    // If this is not supported it falls back to logging `ClassIsWrapper`.\n    [className]: class extends Class {\n      constructor(...args) {\n        super(...args);\n        Object.defineProperty(this, symbol, {\n          value: true\n        });\n      }\n\n      get [Symbol.toStringTag]() {\n        return className;\n      }\n\n    }\n  }[className];\n\n  ClassIsWrapper[`is${className}`] = obj => !!(obj && obj[symbol]);\n\n  return ClassIsWrapper;\n}\n\nfunction withIsProto(Class, {\n  className,\n  symbolName,\n  withoutNew\n}) {\n  const symbol = Symbol.for(symbolName);\n  /* eslint-disable object-shorthand */\n\n  const ClassIsWrapper = {\n    [className]: function (...args) {\n      if (withoutNew && !(this instanceof ClassIsWrapper)) {\n        return new ClassIsWrapper(...args);\n      }\n\n      const _this = Class.call(this, ...args) || this;\n\n      if (_this && !_this[symbol]) {\n        Object.defineProperty(_this, symbol, {\n          value: true\n        });\n      }\n\n      return _this;\n    }\n  }[className];\n  /* eslint-enable object-shorthand */\n\n  ClassIsWrapper.prototype = Object.create(Class.prototype);\n  ClassIsWrapper.prototype.constructor = ClassIsWrapper;\n  Object.defineProperty(ClassIsWrapper.prototype, Symbol.toStringTag, {\n    get() {\n      return className;\n    }\n\n  });\n\n  ClassIsWrapper[`is${className}`] = obj => !!(obj && obj[symbol]);\n\n  return ClassIsWrapper;\n}\n\nvar classIs = withIs;\nvar proto = withIsProto;\nclassIs.proto = proto;\n\nfunction assign(obj, props) {\n  for (const key in props) {\n    Object.defineProperty(obj, key, {\n      value: props[key],\n      enumerable: true,\n      configurable: true\n    });\n  }\n\n  return obj;\n}\n\nfunction createError(err, code, props) {\n  if (!err || typeof err === 'string') {\n    throw new TypeError('Please pass an Error to err-code');\n  }\n\n  if (!props) {\n    props = {};\n  }\n\n  if (typeof code === 'object') {\n    props = code;\n    code = undefined;\n  }\n\n  if (code != null) {\n    props.code = code;\n  }\n\n  try {\n    return assign(err, props);\n  } catch (_) {\n    props.message = err.message;\n    props.stack = err.stack;\n\n    const ErrClass = function () {};\n\n    ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n    return assign(new ErrClass(), props);\n  }\n}\n\nvar errCode = createError;\nvar src$5 = createCommonjsModule(function (module, exports) {\n  const inspect = Symbol.for('nodejs.util.inspect.custom');\n  const resolvers = new Map();\n  /**\r\n   * Creates a [multiaddr](https://github.com/multiformats/multiaddr) from\r\n   * a Uint8Array, String or another Multiaddr instance\r\n   * public key.\r\n   *\r\n   * @class Multiaddr\r\n   * @param {(string | Uint8Array | Multiaddr)} addr - If String or Uint8Array, needs to adhere\r\n   * to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\r\n   * @example\r\n   * Multiaddr('/ip4/127.0.0.1/tcp/4001')\r\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\r\n   */\n\n  const Multiaddr = classIs.proto(function (addr) {\n    if (!(this instanceof Multiaddr)) {\n      return new Multiaddr(addr);\n    } // default\n\n\n    if (addr == null) {\n      addr = '';\n    }\n\n    if (addr instanceof Uint8Array) {\n      /**\r\n       * @type {Uint8Array} - The raw bytes representing this multiaddress\r\n       */\n      this.bytes = codec.fromBytes(addr);\n    } else if (typeof addr === 'string' || addr instanceof String) {\n      if (addr.length > 0 && addr.charAt(0) !== '/') {\n        throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n      }\n\n      this.bytes = codec.fromString(addr);\n    } else if (addr.bytes && addr.protos && addr.protoCodes) {\n      // Multiaddr\n      this.bytes = codec.fromBytes(addr.bytes); // validate + copy buffer\n    } else {\n      throw new Error('addr must be a string, Buffer, or another Multiaddr');\n    }\n  }, {\n    className: 'Multiaddr',\n    symbolName: '@multiformats/js-multiaddr/multiaddr'\n  });\n  /**\r\n   * Returns Multiaddr as a String\r\n   *\r\n   * @returns {string}\r\n   * @example\r\n   * Multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\r\n   * // '/ip4/127.0.0.1/tcp/4001'\r\n   */\n\n  Multiaddr.prototype.toString = function toString() {\n    return codec.bytesToString(this.bytes);\n  };\n  /**\r\n   * Returns Multiaddr as a JSON encoded object\r\n   *\r\n   * @returns {string}\r\n   * @example\r\n   * JSON.stringify(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\r\n   * // '/ip4/127.0.0.1/tcp/4001'\r\n   */\n\n\n  Multiaddr.prototype.toJSON = Multiaddr.prototype.toString;\n  /**\r\n   * Returns Multiaddr as a convinient options object to be used with net.createConnection\r\n   *\r\n   * @returns {{family: string, host: string, transport: string, port: number}}\r\n   * @example\r\n   * Multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\r\n   * // { family: 'ipv4', host: '127.0.0.1', transport: 'tcp', port: 4001 }\r\n   */\n\n  Multiaddr.prototype.toOptions = function toOptions() {\n    const opts = {};\n    const parsed = this.toString().split('/');\n    opts.family = parsed[1] === 'ip4' ? 'ipv4' : 'ipv6';\n    opts.host = parsed[2];\n    opts.transport = parsed[3];\n    opts.port = parseInt(parsed[4]);\n    return opts;\n  };\n  /**\r\n   * Returns Multiaddr as a human-readable string.\r\n   * For post Node.js v10.0.0.\r\n   * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\r\n   *\r\n   * @returns {string}\r\n   * @example\r\n   * console.log(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\r\n   * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\r\n   */\n\n\n  Multiaddr.prototype[inspect] = function inspectCustom() {\n    return '<Multiaddr ' + toString_1(this.bytes, 'base16') + ' - ' + codec.bytesToString(this.bytes) + '>';\n  };\n  /**\r\n   * Returns Multiaddr as a human-readable string.\r\n   * Fallback for pre Node.js v10.0.0.\r\n   * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\r\n   *\r\n   * @returns {string}\r\n   * @example\r\n   * Multiaddr('/ip4/127.0.0.1/tcp/4001').inspect()\r\n   * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\r\n   */\n\n\n  Multiaddr.prototype.inspect = function inspect() {\n    return '<Multiaddr ' + toString_1(this.bytes, 'base16') + ' - ' + codec.bytesToString(this.bytes) + '>';\n  };\n  /**\r\n   * @typedef {object} protocol\r\n   * @property {number} code\r\n   * @property {number} size\r\n   * @property {string} name\r\n   * @property {boolean} [resolvable]\r\n   * @property {boolean} [path]\r\n   */\n\n  /**\r\n   * Returns the protocols the Multiaddr is defined with, as an array of objects, in\r\n   * left-to-right order. Each object contains the protocol code, protocol name,\r\n   * and the size of its address space in bits.\r\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\r\n   *\r\n   * @returns {protocol[]} protocols - All the protocols the address is composed of\r\n   * @example\r\n   * Multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\r\n   * // [ { code: 4, size: 32, name: 'ip4' },\r\n   * //   { code: 6, size: 16, name: 'tcp' } ]\r\n   */\n\n\n  Multiaddr.prototype.protos = function protos() {\n    return this.protoCodes().map(code => Object.assign({}, protocolsTable(code)));\n  };\n  /**\r\n   * Returns the codes of the protocols in left-to-right order.\r\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\r\n   *\r\n   * @returns {Array<number>} protocol codes\r\n   * @example\r\n   * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\r\n   * // [ 4, 6 ]\r\n   */\n\n\n  Multiaddr.prototype.protoCodes = function protoCodes() {\n    const codes = [];\n    const buf = this.bytes;\n    let i = 0;\n\n    while (i < buf.length) {\n      const code = varint$1.decode(buf, i);\n      const n = varint$1.decode.bytes;\n      const p = protocolsTable(code);\n      const size = codec.sizeForAddr(p, buf.slice(i + n));\n      i += size + n;\n      codes.push(code);\n    }\n\n    return codes;\n  };\n  /**\r\n   * Returns the names of the protocols in left-to-right order.\r\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\r\n   *\r\n   * @returns {Array.<string>} protocol names\r\n   * @example\r\n   * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\r\n   * // [ 'ip4', 'tcp' ]\r\n   */\n\n\n  Multiaddr.prototype.protoNames = function protoNames() {\n    return this.protos().map(proto => proto.name);\n  };\n  /**\r\n   * Returns a tuple of parts\r\n   *\r\n   * @returns {[number, Uint8Array][]} tuples\r\n   * @example\r\n   * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").tuples()\r\n   * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\r\n   */\n\n\n  Multiaddr.prototype.tuples = function tuples() {\n    return codec.bytesToTuples(this.bytes);\n  };\n  /**\r\n   * Returns a tuple of string/number parts\r\n   * - tuples[][0] = code of protocol\r\n   * - tuples[][1] = contents of address\r\n   *\r\n   * @returns {[number, string|number][]} tuples\r\n   * @example\r\n   * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").stringTuples()\r\n   * // [ [ 4, '127.0.0.1' ], [ 6, 4001 ] ]\r\n   */\n\n\n  Multiaddr.prototype.stringTuples = function stringTuples() {\n    const t = codec.bytesToTuples(this.bytes);\n    return codec.tuplesToStringTuples(t);\n  };\n  /**\r\n   * Encapsulates a Multiaddr in another Multiaddr\r\n   *\r\n   * @param {Multiaddr} addr - Multiaddr to add into this Multiaddr\r\n   * @returns {Multiaddr}\r\n   * @example\r\n   * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\r\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\r\n   *\r\n   * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\r\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\r\n   *\r\n   * const mh3 = mh1.encapsulate(mh2)\r\n   * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\r\n   *\r\n   * mh3.toString()\r\n   * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\r\n   */\n\n\n  Multiaddr.prototype.encapsulate = function encapsulate(addr) {\n    addr = Multiaddr(addr);\n    return Multiaddr(this.toString() + addr.toString());\n  };\n  /**\r\n   * Decapsulates a Multiaddr from another Multiaddr\r\n   *\r\n   * @param {Multiaddr} addr - Multiaddr to remove from this Multiaddr\r\n   * @returns {Multiaddr}\r\n   * @example\r\n   * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\r\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\r\n   *\r\n   * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\r\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\r\n   *\r\n   * const mh3 = mh1.encapsulate(mh2)\r\n   * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\r\n   *\r\n   * mh3.decapsulate(mh2).toString()\r\n   * // '/ip4/8.8.8.8/tcp/1080'\r\n   */\n\n\n  Multiaddr.prototype.decapsulate = function decapsulate(addr) {\n    addr = addr.toString();\n    const s = this.toString();\n    const i = s.lastIndexOf(addr);\n\n    if (i < 0) {\n      throw new Error('Address ' + this + ' does not contain subaddress: ' + addr);\n    }\n\n    return Multiaddr(s.slice(0, i));\n  };\n  /**\r\n   * A more reliable version of `decapsulate` if you are targeting a\r\n   * specific code, such as 421 (the `p2p` protocol code). The last index of the code\r\n   * will be removed from the `Multiaddr`, and a new instance will be returned.\r\n   * If the code is not present, the original `Multiaddr` is returned.\r\n   *\r\n   * @param {number} code - The code of the protocol to decapsulate from this Multiaddr\r\n   * @returns {Multiaddr}\r\n   * @example\r\n   * const addr = Multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\r\n   * // <Multiaddr 0400... - /ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC>\r\n   *\r\n   * addr.decapsulateCode(421).toString()\r\n   * // '/ip4/0.0.0.0/tcp/8080'\r\n   *\r\n   * Multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\r\n   * // '/ip4/127.0.0.1/tcp/8080'\r\n   */\n\n\n  Multiaddr.prototype.decapsulateCode = function decapsulateCode(code) {\n    const tuples = this.tuples();\n\n    for (let i = tuples.length - 1; i >= 0; i--) {\n      if (tuples[i][0] === code) {\n        return Multiaddr(codec.tuplesToBytes(tuples.slice(0, i)));\n      }\n    }\n\n    return this;\n  };\n  /**\r\n   * Extract the peerId if the multiaddr contains one\r\n   *\r\n   * @returns {string | null} peerId - The id of the peer or null if invalid or missing from the ma\r\n   * @example\r\n   * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\r\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string>\r\n   *\r\n   * // should return QmValidBase58string or null if the id is missing or invalid\r\n   * const peerId = mh1.getPeerId()\r\n   */\n\n\n  Multiaddr.prototype.getPeerId = function getPeerId() {\n    let b58str = null;\n\n    try {\n      const tuples = this.stringTuples().filter(tuple => {\n        if (tuple[0] === protocolsTable.names.ipfs.code) {\n          return true;\n        }\n      }); // Get the last id\n\n      b58str = tuples.pop()[1]; // Get multihash, unwrap from CID if needed\n\n      b58str = toString_1(new src$4(b58str).multihash, 'base58btc');\n    } catch (e) {\n      b58str = null;\n    }\n\n    return b58str;\n  };\n  /**\r\n   * Extract the path if the multiaddr contains one\r\n   *\r\n   * @returns {string | null} path - The path of the multiaddr, or null if no path protocol is present\r\n   * @example\r\n   * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock')\r\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock>\r\n   *\r\n   * // should return utf8 string or null if the id is missing or invalid\r\n   * const path = mh1.getPath()\r\n   */\n\n\n  Multiaddr.prototype.getPath = function getPath() {\n    let path = null;\n\n    try {\n      path = this.stringTuples().filter(tuple => {\n        const proto = protocolsTable(tuple[0]);\n\n        if (proto.path) {\n          return true;\n        }\n      })[0][1];\n    } catch (e) {\n      path = null;\n    }\n\n    return path;\n  };\n  /**\r\n   * Checks if two Multiaddrs are the same\r\n   *\r\n   * @param {Multiaddr} addr\r\n   * @returns {Bool}\r\n   * @example\r\n   * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\r\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\r\n   *\r\n   * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\r\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\r\n   *\r\n   * mh1.equals(mh1)\r\n   * // true\r\n   *\r\n   * mh1.equals(mh2)\r\n   * // false\r\n   */\n\n\n  Multiaddr.prototype.equals = function equals(addr) {\n    return equals_1(this.bytes, addr.bytes);\n  };\n  /**\r\n   * Resolve multiaddr if containing resolvable hostname.\r\n   *\r\n   * @returns {Promise<Array<Multiaddr>>}\r\n   * @example\r\n   * Multiaddr.resolvers.set('dnsaddr', resolverFunction)\r\n   * const mh1 = Multiaddr('/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb')\r\n   * const resolvedMultiaddrs = await mh1.resolve()\r\n   * // [\r\n   * //   <Multiaddr 04934b5353060fa1a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/4001/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\r\n   * //   <Multiaddr 04934b53530601bbde03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/443/wss/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\r\n   * //   <Multiaddr 04934b535391020fa1cc03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/udp/4001/quic/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>\r\n   * // ]\r\n   */\n\n\n  Multiaddr.prototype.resolve = async function resolve() {\n    const resolvableProto = this.protos().find(p => p.resolvable); // Multiaddr is not resolvable?\n\n    if (!resolvableProto) {\n      return [this];\n    }\n\n    const resolver = resolvers.get(resolvableProto.name);\n\n    if (!resolver) {\n      throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER');\n    }\n\n    const addresses = await resolver(this);\n    return addresses.map(a => Multiaddr(a));\n  };\n  /**\r\n   * Gets a Multiaddrs node-friendly address object. Note that protocol information\r\n   * is left out: in Node (and most network systems) the protocol is unknowable\r\n   * given only the address.\r\n   *\r\n   * Has to be a ThinWaist Address, otherwise throws error\r\n   *\r\n   * @returns {{family: string, address: string, port: number}}\r\n   * @throws {Error} Throws error if Multiaddr is not a Thin Waist address\r\n   * @example\r\n   * Multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\r\n   * // {family: 'IPv4', address: '127.0.0.1', port: '4001'}\r\n   */\n\n\n  Multiaddr.prototype.nodeAddress = function nodeAddress() {\n    const codes = this.protoCodes();\n    const names = this.protoNames();\n    const parts = this.toString().split('/').slice(1);\n\n    if (parts.length < 4) {\n      throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}\".');\n    } else if (codes[0] !== 4 && codes[0] !== 41 && codes[0] !== 54 && codes[0] !== 55) {\n      throw new Error(`no protocol with name: \"'${names[0]}'\". Must have a valid family name: \"{ip4, ip6, dns4, dns6}\".`);\n    } else if (parts[2] !== 'tcp' && parts[2] !== 'udp') {\n      throw new Error(`no protocol with name: \"'${names[1]}'\". Must have a valid transport protocol: \"{tcp, udp}\".`);\n    }\n\n    return {\n      family: codes[0] === 41 || codes[0] === 55 ? 6 : 4,\n      address: parts[1],\n      // ip addr\n      port: parseInt(parts[3]) // tcp or udp port\n\n    };\n  };\n  /**\r\n   * Creates a Multiaddr from a node-friendly address object\r\n   *\r\n   * @param {{family: string, address: string, port: number}} addr\r\n   * @param {string} transport\r\n   * @returns {Multiaddr} multiaddr\r\n   * @throws {Error} Throws error if addr is not truthy\r\n   * @throws {Error} Throws error if transport is not truthy\r\n   * @example\r\n   * Multiaddr.fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\r\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\r\n   */\n\n\n  Multiaddr.fromNodeAddress = function fromNodeAddress(addr, transport) {\n    if (!addr) throw new Error('requires node address object');\n    if (!transport) throw new Error('requires transport protocol');\n    let ip;\n\n    switch (addr.family) {\n      case 'IPv4':\n        ip = 'ip4';\n        break;\n\n      case 'IPv6':\n        ip = 'ip6';\n        break;\n\n      default:\n        throw Error(`Invalid addr family. Got '${addr.family}' instead of 'IPv4' or 'IPv6'`);\n    }\n\n    return Multiaddr('/' + [ip, addr.address, transport, addr.port].join('/'));\n  }; // TODO find a better example, not sure about it's good enough\n\n  /**\r\n   * Returns if a Multiaddr is a Thin Waist address or not.\r\n   *\r\n   * Thin Waist is if a Multiaddr adheres to the standard combination of:\r\n   *\r\n   * `{IPv4, IPv6}/{TCP, UDP}`\r\n   *\r\n   * @param {Multiaddr} [addr] - Defaults to using `this` instance\r\n   * @returns {boolean} isThinWaistAddress\r\n   * @example\r\n   * const mh1 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\r\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\r\n   * const mh2 = Multiaddr('/ip4/192.168.2.1/tcp/5001')\r\n   * // <Multiaddr 04c0a80201061389 - /ip4/192.168.2.1/tcp/5001>\r\n   * const mh3 = mh1.encapsulate(mh2)\r\n   * // <Multiaddr 047f000001060fa104c0a80201061389 - /ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001>\r\n   * mh1.isThinWaistAddress()\r\n   * // true\r\n   * mh2.isThinWaistAddress()\r\n   * // true\r\n   * mh3.isThinWaistAddress()\r\n   * // false\r\n   */\n\n\n  Multiaddr.prototype.isThinWaistAddress = function isThinWaistAddress(addr) {\n    const protos = (addr || this).protos();\n\n    if (protos.length !== 2) {\n      return false;\n    }\n\n    if (protos[0].code !== 4 && protos[0].code !== 41) {\n      return false;\n    }\n\n    if (protos[1].code !== 6 && protos[1].code !== 273) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\r\n   * Object containing table, names and codes of all supported protocols.\r\n   * To get the protocol values from a Multiaddr, you can use\r\n   * [`.protos()`](#multiaddrprotos),\r\n   * [`.protoCodes()`](#multiaddrprotocodes) or\r\n   * [`.protoNames()`](#multiaddrprotonames)\r\n   *\r\n   * @instance\r\n   * @returns {{table: Array, names: Object, codes: Object}}\r\n   *\r\n   */\n\n\n  Multiaddr.protocols = protocolsTable;\n  /**\r\n   * Returns if something is a Multiaddr that is a name\r\n   *\r\n   * @param {Multiaddr} addr\r\n   * @returns {Bool} isName\r\n   */\n\n  Multiaddr.isName = function isName(addr) {\n    if (!Multiaddr.isMultiaddr(addr)) {\n      return false;\n    } // if a part of the multiaddr is resolvable, then return true\n\n\n    return addr.protos().some(proto => proto.resolvable);\n  };\n  /**\r\n   * Returns an array of multiaddrs, by resolving the multiaddr that is a name\r\n   *\r\n   * @async\r\n   * @param {Multiaddr} addr\r\n   * @returns {Multiaddr[]}\r\n   */\n\n\n  Multiaddr.resolve = function resolve(addr) {\n    if (!Multiaddr.isMultiaddr(addr) || !Multiaddr.isName(addr)) {\n      return Promise.reject(Error('not a valid name'));\n    }\n    /*\r\n     * Needs more consideration from spec design:\r\n     *   - what to return\r\n     *   - how to achieve it in the browser?\r\n     */\n\n\n    return Promise.reject(new Error('not implemented yet'));\n  };\n\n  Multiaddr.resolvers = resolvers;\n  module.exports = Multiaddr;\n});\nsrc$5.protocols.codes[406] = {\n  code: 406,\n  size: -1,\n  name: 'thread',\n  resolvable: false,\n  path: false\n};\nsrc$5.protocols.names['thread'] = {\n  code: 406,\n  size: -1,\n  name: 'thread',\n  resolvable: false,\n  path: false\n};\nsrc$5.protocols.table.push([406, -1, 'thead']);\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\nfunction thread2bytes(str) {\n  const buf = ThreadID.fromString(str).toBytes();\n  const size = varint.encode(buf.length);\n  return Uint8Array.from([...size, ...buf]);\n}\n\nfunction bytes2thread(buf) {\n  const size = varint.decode(buf);\n  buf = buf.slice(varint.decode.bytes);\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths');\n  }\n\n  return ThreadID.fromBytes(buf).toString();\n}\n\nfunction toString$2(prt, buf) {\n  const proto = src$5.protocols(prt);\n\n  switch (proto.code) {\n    case 406:\n      return bytes2thread(buf);\n\n    default:\n      return convert.toString(prt, buf);\n  }\n}\n\nfunction toBytes$1(prt, str) {\n  const proto = src$5.protocols(prt);\n\n  switch (proto.code) {\n    case 406:\n      return thread2bytes(str);\n\n    default:\n      return convert.toBytes(prt, str);\n  }\n}\n/* eslint-disable @typescript-eslint/no-use-before-define */\n// string -> [[str name, str addr]... ]\n\n\nfunction stringToStringTuples$1(str) {\n  const tuples = [];\n  const parts = str.split('/').slice(1); // skip first empty elem\n\n  if (parts.length === 1 && parts[0] === '') {\n    return [];\n  }\n\n  for (let p = 0; p < parts.length; p++) {\n    const part = parts[p];\n    const proto = src$5.protocols(part);\n\n    if (proto.size === 0) {\n      tuples.push([part]);\n      continue;\n    }\n\n    p++; // advance addr part\n\n    if (p >= parts.length) {\n      throw ParseError$1('invalid address: ' + str);\n    } // if it's a path proto, take the rest\n\n\n    if (proto.path) {\n      tuples.push([part, // TODO: should we need to check each path part to see if it's a proto?\n      // This would allow for other protocols to be added after a unix path,\n      // however it would have issues if the path had a protocol name in the path\n      cleanPath$1(parts.slice(p).join('/'))]);\n      break;\n    }\n\n    tuples.push([part, parts[p]]);\n  }\n\n  return tuples;\n} // [[str name, str addr]... ] -> string\n\n\nfunction stringTuplesToString$1(tuples) {\n  const parts = [];\n  tuples.map(tup => {\n    const proto = protoFromTuple$1(tup);\n    parts.push(proto.name);\n\n    if (tup.length > 1) {\n      parts.push(tup[1]);\n    }\n  });\n  return cleanPath$1(parts.join('/'));\n} // [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n\n\nfunction stringTuplesToTuples$1(tuples) {\n  return tuples.map(tup => {\n    if (!Array.isArray(tup)) {\n      tup = [tup];\n    }\n\n    const proto = protoFromTuple$1(tup);\n\n    if (tup.length > 1) {\n      return [proto.code, toBytes$1(proto.code, tup[1])];\n    }\n\n    return [proto.code];\n  });\n} // [[int code, Uint8Array]... ] -> [[str name, str addr]... ]\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n\nfunction tuplesToStringTuples$1(tuples) {\n  return tuples.map(tup => {\n    const proto = protoFromTuple$1(tup);\n\n    if (tup.length > 1) {\n      return [proto.code, toString$2(proto.code, tup[1])];\n    }\n\n    return [proto.code];\n  });\n} // [[int code, Uint8Array ]... ] -> Uint8Array\n\n\nfunction tuplesToBytes$1(tuples) {\n  return fromBytes$1(new Uint8Array(tuples.flatMap(tup => {\n    const proto = protoFromTuple$1(tup);\n    let buf = Uint8Array.from(varint.encode(proto.code));\n\n    if (tup.length > 1) {\n      buf = new Uint8Array([...buf, ...tup[1]]); // add address bytes\n    }\n\n    return [...buf];\n  })));\n}\n\nfunction sizeForAddr$1(p, addr) {\n  if (p.size > 0) {\n    return p.size / 8;\n  } else if (p.size === 0) {\n    return 0;\n  } else {\n    const size = varint.decode(addr);\n    return size + varint.decode.bytes;\n  }\n} // Uint8Array -> [[int code, Uint8Array ]... ]\n\n\nfunction bytesToTuples$1(buf) {\n  const tuples = [];\n  let i = 0;\n\n  while (i < buf.length) {\n    const code = varint.decode(buf, i);\n    const n = varint.decode.bytes;\n    const p = src$5.protocols(code);\n    const size = sizeForAddr$1(p, buf.slice(i + n));\n\n    if (size === 0) {\n      tuples.push([code]);\n      i += n;\n      continue;\n    }\n\n    const addr = buf.slice(i + n, i + n + size);\n    i += size + n;\n\n    if (i > buf.length) {\n      // did not end _exactly_ at buf.length\n      throw ParseError$1('Invalid address Uint8Array');\n    } // ok, tuple seems good.\n\n\n    tuples.push([code, addr]);\n  }\n\n  return tuples;\n} // Uint8Array -> String\n\n\nfunction bytesToString$1(buf) {\n  const a = bytesToTuples$1(buf);\n  const b = tuplesToStringTuples$1(a);\n  return stringTuplesToString$1(b);\n} // String -> Uint8Array\n\n\nfunction stringToBytes$1(str) {\n  str = cleanPath$1(str);\n  const a = stringToStringTuples$1(str);\n  const b = stringTuplesToTuples$1(a);\n  return tuplesToBytes$1(b);\n} // String -> Uint8Array\n\n\nfunction fromString$2(str) {\n  return stringToBytes$1(str);\n} // Uint8Array -> Uint8Array\n\n\nfunction fromBytes$1(buf) {\n  const err = validateBytes$1(buf);\n  if (err) throw err;\n  return Uint8Array.from(buf); // copy\n}\n\nfunction validateBytes$1(buf) {\n  try {\n    bytesToTuples$1(buf); // try to parse. will throw if breaks\n  } catch (err) {\n    return err;\n  }\n}\n\nfunction cleanPath$1(str) {\n  return '/' + str.trim().split('/').filter(a => a).join('/');\n}\n\nfunction ParseError$1(str) {\n  return new Error('Error parsing address: ' + str);\n}\n\nfunction protoFromTuple$1(tup) {\n  const proto = src$5.protocols(tup[0]);\n  return proto;\n}\n\nfunction bytesFromAddr(addr) {\n  // default\n  if (addr == null) {\n    addr = '';\n  }\n\n  let bytes = new Uint8Array(0);\n\n  if (addr instanceof Uint8Array) {\n    bytes = fromBytes$1(addr);\n  } else if (typeof addr === 'string') {\n    if (addr.length > 0 && addr.charAt(0) !== '/') {\n      throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n    }\n\n    bytes = fromString$2(addr);\n  } else if (addr.bytes && addr.protos && addr.protoCodes) {\n    // Multiaddr\n    bytes = fromBytes$1(addr.bytes); // validate + copy bytes\n  } else {\n    throw new Error('addr must be a string, Uint8Array, or another Multiaddr');\n  }\n\n  return bytes;\n}\n\nfunction stringFromBytes(bytes) {\n  return bytesToString$1(bytes);\n}\n\nfunction bytesToTuples$2(bytes) {\n  const t = bytesToTuples$1(bytes);\n  return tuplesToStringTuples$1(t);\n}\n\nfunction bytesToOptions(bytes) {\n  const parsed = stringFromBytes(bytes).split('/');\n  const opts = {\n    family: parsed[1] === 'ip4' ? 'ipv4' : 'ipv6',\n    host: parsed[2],\n    transport: parsed[3],\n    port: parseInt(parsed[4])\n  };\n  return opts;\n}\n\nexport { bytesFromAddr, bytesToOptions, bytesToTuples$2 as bytesToTuples, stringFromBytes };","map":{"version":3,"sources":["E:/anipfspace/node_modules/@textile/multiaddr/dist/esm/index.js"],"names":["ThreadID","encode_1","encode","MSB","REST","MSBALL","INT","Math","pow","num","out","offset","Number","MAX_SAFE_INTEGER","bytes","RangeError","oldOffset","decode","read","MSB$1","REST$1","buf","res","shift","counter","b","l","length","N1","N2","N3","N4","N5","N6","N7","N8","N9","value","varint","encodingLength","word","options","includeBoundaries","v4","v6seg","v6","replace","trim","v46Exact","RegExp","v4exact","v6exact","ip","exact","ipRegex","isIp","string","test","version","undefined","isIp_1","base","ALPHABET","TypeError","BASE_MAP","Uint8Array","j","i","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","log","iFACTOR","source","ArrayBuffer","isView","buffer","byteOffset","byteLength","Array","isArray","from","zeroes","pbegin","pend","size","b58","carry","it1","Error","it2","str","repeat","decodeUnsafe","psz","b256","it3","it4","vch","src","createCommonjsModule","fn","module","exports","isBufferBrowser","isBuffer","arg","copy","fill","readUInt8","inherits_browser","Object","create","inherits","ctor","superCtor","super_","prototype","constructor","enumerable","writable","configurable","TempCtor","util","getOwnPropertyDescriptors","obj","keys","descriptors","getOwnPropertyDescriptor","formatRegExp","format","f","isString","objects","arguments","push","inspect","join","args","len","String","JSON","stringify","_","isNull","isObject","deprecate","msg","process","noDeprecation","apply","warned","deprecated","throwDeprecation","traceDeprecation","console","trace","error","debugs","debugEnviron","debuglog","set","isUndefined","env","NODE_DEBUG","toUpperCase","pid","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styles","styleType","style","arrayToHash","array","hash","forEach","val","idx","recurseTimes","isFunction","ret","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","indexOf","formatError","name","isRegExp","toString","call","isDate","Date","braces","n","toUTCString","output","formatArray","map","key","formatProperty","pop","reduceToSingleString","simple","isNumber","hasOwnProperty","match","desc","get","split","line","substr","reduce","prev","cur","ar","isNullOrUndefined","isSymbol","re","objectToString","d","e","isPrimitive","o","pad","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","origin","add","prop","kCustomPromisifiedSymbol","Symbol","promisify","original","defineProperty","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackifyOnRejected","reason","cb","newReason","callbackify","callbackified","maybeCb","self","then","nextTick","rej","TextEncoder_1","TextEncoder","TextDecoder_1","TextDecoder","lib","TextEncoder$1","TextDecoder$1","textDecoder","decodeText","textEncoder","encodeText","text","concat","arrs","arr","util$1","encodeText$1","Base","code","factory","alphabet","codeBuf","codec","char","base$1","decode$1","bitsPerChar","codes","end","bits","written","SyntaxError","encode$1","data","mask","rfc4648","input","rfc4648_1","rfc4648$1","decodeText$1","encodeText$2","identity","constants","names","tupple","constants_1","names$1","TextDecoder$2","utf8Decoder","uint8ArrayToAsciiString","fromCharCode","encoding","toString_1","isIP","isV4","isV6","toBytes","buff","result","byte","parseInt","sections","isv4","v4Buffer","slice","splice","unshift","argv","toString$1","view","DataView","getUint16","ip$1","Protocols","proto","V","lengthPrefixedVarSize","table","row","p","object","resolvable","path","Boolean","protocolsTable","src$1","multibase","nameOrCode","validEncode","enc","prefix","includes","toLowerCase","substring","isEncoded","encodingFromData","freeze","names$2","constants$1","names$3","TextEncoder$2","utf8Encoder","asciiStringToUint8Array","fromString","fromString_1","concat$1","arrays","acc","curr","concat_1","names$4","codes$1","toHexString","fromHexString","toB58String","fromB58String","encoded","decode$2","isValidCode","digest","encode$2","hashfn","coerceCode","isAppCode","validate","multihash","subarray","src$2","baseTable","baseTable_1","baseTable$1","nameTable","Map","encodingName","intTable","util$2","numberToUint8Array","uint8ArrayToNumber","varintUint8ArrayEncode","varintEncode","hexString","baseTable$2","varintEncode$1","varintTable","varintTable_1","baseTable$3","constants$2","entries","constant","constants_1$1","baseTable$4","tableByCode","print","addPrefix","multicodecStrOrCode","rmPrefix","getCodec","prefixedData","codecName","getName","getNumber","getCode","getCodeVarint","getVarint","src$3","CIDUtil","checkCIDComponents","other","multibaseName","errorMsg","message","cidUtil","equals","a","equals_1","codecs","codecInts","symbol","for","CID","isCID","cid","baseName","validateCID","v","_bytes","toV0","toV1","toBaseEncodedString","toJSON","src$4","encode_1$1","encode$3","MSB$2","REST$2","MSBALL$1","INT$1","decode$3","read$1","MSB$3","REST$3","N1$1","N2$1","N3$1","N4$1","N5$1","N6$1","N7$1","N8$1","N9$1","length$1","varint$1","convert","Convert","convertToString","bytes2ip","bytes2port","bytes2str","bytes2mh","bytes2onion","convertToBytes","ip2bytes","port2bytes","str2bytes","mh2bytes","onion2bytes","onion32bytes","ipString","ipBuff","port","setUint16","mh","address","addr","portBuf","addrBytes","portBytes","stringToStringTuples","stringTuplesToString","tuplesToStringTuples","stringTuplesToTuples","bytesToTuples","tuplesToBytes","bytesToString","stringToBytes","fromString$1","fromBytes","validateBytes","isValidBytes","cleanPath","ParseError","protoFromTuple","sizeForAddr","tuples","parts","part","tup","filter","withIs","Class","className","symbolName","ClassIsWrapper","toStringTag","withIsProto","withoutNew","_this","classIs","assign","props","createError","stack","ErrClass","errCode","src$5","resolvers","Multiaddr","protos","protoCodes","toOptions","parsed","family","host","transport","inspectCustom","protoNames","stringTuples","t","encapsulate","decapsulate","s","lastIndexOf","decapsulateCode","getPeerId","b58str","tuple","ipfs","getPath","resolvableProto","find","resolver","addresses","nodeAddress","fromNodeAddress","isThinWaistAddress","protocols","isName","isMultiaddr","some","thread2bytes","bytes2thread","toString$2","prt","toBytes$1","stringToStringTuples$1","ParseError$1","cleanPath$1","stringTuplesToString$1","protoFromTuple$1","stringTuplesToTuples$1","tuplesToStringTuples$1","tuplesToBytes$1","fromBytes$1","flatMap","sizeForAddr$1","bytesToTuples$1","bytesToString$1","stringToBytes$1","fromString$2","validateBytes$1","bytesFromAddr","stringFromBytes","bytesToTuples$2","bytesToOptions"],"mappings":"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","sourcesContent":["import { ThreadID } from '@textile/threads-id';\r\n\r\nvar encode_1 = encode;\r\n\r\nvar MSB = 0x80\r\n  , REST = 0x7F\r\n  , MSBALL = ~REST\r\n  , INT = Math.pow(2, 31);\r\n\r\nfunction encode(num, out, offset) {\r\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\r\n    encode.bytes = 0;\r\n    throw new RangeError('Could not encode varint')\r\n  }\r\n  out = out || [];\r\n  offset = offset || 0;\r\n  var oldOffset = offset;\r\n\r\n  while(num >= INT) {\r\n    out[offset++] = (num & 0xFF) | MSB;\r\n    num /= 128;\r\n  }\r\n  while(num & MSBALL) {\r\n    out[offset++] = (num & 0xFF) | MSB;\r\n    num >>>= 7;\r\n  }\r\n  out[offset] = num | 0;\r\n  \r\n  encode.bytes = offset - oldOffset + 1;\r\n  \r\n  return out\r\n}\r\n\r\nvar decode = read;\r\n\r\nvar MSB$1 = 0x80\r\n  , REST$1 = 0x7F;\r\n\r\nfunction read(buf, offset) {\r\n  var res    = 0\r\n    , offset = offset || 0\r\n    , shift  = 0\r\n    , counter = offset\r\n    , b\r\n    , l = buf.length;\r\n\r\n  do {\r\n    if (counter >= l || shift > 49) {\r\n      read.bytes = 0;\r\n      throw new RangeError('Could not decode varint')\r\n    }\r\n    b = buf[counter++];\r\n    res += shift < 28\r\n      ? (b & REST$1) << shift\r\n      : (b & REST$1) * Math.pow(2, shift);\r\n    shift += 7;\r\n  } while (b >= MSB$1)\r\n\r\n  read.bytes = counter - offset;\r\n\r\n  return res\r\n}\r\n\r\nvar N1 = Math.pow(2,  7);\r\nvar N2 = Math.pow(2, 14);\r\nvar N3 = Math.pow(2, 21);\r\nvar N4 = Math.pow(2, 28);\r\nvar N5 = Math.pow(2, 35);\r\nvar N6 = Math.pow(2, 42);\r\nvar N7 = Math.pow(2, 49);\r\nvar N8 = Math.pow(2, 56);\r\nvar N9 = Math.pow(2, 63);\r\n\r\nvar length = function (value) {\r\n  return (\r\n    value < N1 ? 1\r\n  : value < N2 ? 2\r\n  : value < N3 ? 3\r\n  : value < N4 ? 4\r\n  : value < N5 ? 5\r\n  : value < N6 ? 6\r\n  : value < N7 ? 7\r\n  : value < N8 ? 8\r\n  : value < N9 ? 9\r\n  :              10\r\n  )\r\n};\r\n\r\nvar varint = {\r\n    encode: encode_1\r\n  , decode: decode\r\n  , encodingLength: length\r\n};\r\n\r\nconst word = '[a-fA-F\\\\d:]';\r\nconst b = options => options && options.includeBoundaries ?\r\n\t`(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))` :\r\n\t'';\r\n\r\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\r\n\r\nconst v6seg = '[a-fA-F\\\\d]{1,4}';\r\nconst v6 = `\r\n(\r\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\r\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\r\n(?:${v6seg}:){5}(?::${v4}|(:${v6seg}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\r\n(?:${v6seg}:){4}(?:(:${v6seg}){0,1}:${v4}|(:${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\r\n(?:${v6seg}:){3}(?:(:${v6seg}){0,2}:${v4}|(:${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\r\n(?:${v6seg}:){2}(?:(:${v6seg}){0,3}:${v4}|(:${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\r\n(?:${v6seg}:){1}(?:(:${v6seg}){0,4}:${v4}|(:${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\r\n(?::((?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\r\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\r\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\r\n\r\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\r\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\r\nconst v4exact = new RegExp(`^${v4}$`);\r\nconst v6exact = new RegExp(`^${v6}$`);\r\n\r\nconst ip = options => options && options.exact ?\r\n\tv46Exact :\r\n\tnew RegExp(`(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(options)})`, 'g');\r\n\r\nip.v4 = options => options && options.exact ? v4exact : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\r\nip.v6 = options => options && options.exact ? v6exact : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\r\n\r\nvar ipRegex = ip;\r\n\r\nconst isIp = string => ipRegex({exact: true}).test(string);\r\nisIp.v4 = string => ipRegex.v4({exact: true}).test(string);\r\nisIp.v6 = string => ipRegex.v6({exact: true}).test(string);\r\nisIp.version = string => isIp(string) ? (isIp.v4(string) ? 4 : 6) : undefined;\r\n\r\nvar isIp_1 = isIp;\r\n\r\n// base-x encoding / decoding\r\n// Copyright (c) 2018 base-x contributors\r\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\r\n// Distributed under the MIT software license, see the accompanying\r\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\r\nfunction base (ALPHABET) {\r\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\r\n  var BASE_MAP = new Uint8Array(256);\r\n  for (var j = 0; j < BASE_MAP.length; j++) {\r\n    BASE_MAP[j] = 255;\r\n  }\r\n  for (var i = 0; i < ALPHABET.length; i++) {\r\n    var x = ALPHABET.charAt(i);\r\n    var xc = x.charCodeAt(0);\r\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\r\n    BASE_MAP[xc] = i;\r\n  }\r\n  var BASE = ALPHABET.length;\r\n  var LEADER = ALPHABET.charAt(0);\r\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\r\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\r\n  function encode (source) {\r\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\r\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\r\n    } else if (Array.isArray(source)) {\r\n      source = Uint8Array.from(source);\r\n    }\r\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\r\n    if (source.length === 0) { return '' }\r\n        // Skip & count leading zeroes.\r\n    var zeroes = 0;\r\n    var length = 0;\r\n    var pbegin = 0;\r\n    var pend = source.length;\r\n    while (pbegin !== pend && source[pbegin] === 0) {\r\n      pbegin++;\r\n      zeroes++;\r\n    }\r\n        // Allocate enough space in big-endian base58 representation.\r\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\r\n    var b58 = new Uint8Array(size);\r\n        // Process the bytes.\r\n    while (pbegin !== pend) {\r\n      var carry = source[pbegin];\r\n            // Apply \"b58 = b58 * 256 + ch\".\r\n      var i = 0;\r\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\r\n        carry += (256 * b58[it1]) >>> 0;\r\n        b58[it1] = (carry % BASE) >>> 0;\r\n        carry = (carry / BASE) >>> 0;\r\n      }\r\n      if (carry !== 0) { throw new Error('Non-zero carry') }\r\n      length = i;\r\n      pbegin++;\r\n    }\r\n        // Skip leading zeroes in base58 result.\r\n    var it2 = size - length;\r\n    while (it2 !== size && b58[it2] === 0) {\r\n      it2++;\r\n    }\r\n        // Translate the result into a string.\r\n    var str = LEADER.repeat(zeroes);\r\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\r\n    return str\r\n  }\r\n  function decodeUnsafe (source) {\r\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\r\n    if (source.length === 0) { return new Uint8Array() }\r\n    var psz = 0;\r\n        // Skip leading spaces.\r\n    if (source[psz] === ' ') { return }\r\n        // Skip and count leading '1's.\r\n    var zeroes = 0;\r\n    var length = 0;\r\n    while (source[psz] === LEADER) {\r\n      zeroes++;\r\n      psz++;\r\n    }\r\n        // Allocate enough space in big-endian base256 representation.\r\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\r\n    var b256 = new Uint8Array(size);\r\n        // Process the characters.\r\n    while (source[psz]) {\r\n            // Decode character\r\n      var carry = BASE_MAP[source.charCodeAt(psz)];\r\n            // Invalid character\r\n      if (carry === 255) { return }\r\n      var i = 0;\r\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\r\n        carry += (BASE * b256[it3]) >>> 0;\r\n        b256[it3] = (carry % 256) >>> 0;\r\n        carry = (carry / 256) >>> 0;\r\n      }\r\n      if (carry !== 0) { throw new Error('Non-zero carry') }\r\n      length = i;\r\n      psz++;\r\n    }\r\n        // Skip trailing spaces.\r\n    if (source[psz] === ' ') { return }\r\n        // Skip leading zeroes in b256.\r\n    var it4 = size - length;\r\n    while (it4 !== size && b256[it4] === 0) {\r\n      it4++;\r\n    }\r\n    var vch = new Uint8Array(zeroes + (size - it4));\r\n    var j = zeroes;\r\n    while (it4 !== size) {\r\n      vch[j++] = b256[it4++];\r\n    }\r\n    return vch\r\n  }\r\n  function decode (string) {\r\n    var buffer = decodeUnsafe(string);\r\n    if (buffer) { return buffer }\r\n    throw new Error('Non-base' + BASE + ' character')\r\n  }\r\n  return {\r\n    encode: encode,\r\n    decodeUnsafe: decodeUnsafe,\r\n    decode: decode\r\n  }\r\n}\r\nvar src = base;\r\n\r\nfunction createCommonjsModule(fn) {\r\n  var module = { exports: {} };\r\n\treturn fn(module, module.exports), module.exports;\r\n}\r\n\r\nvar isBufferBrowser = function isBuffer(arg) {\r\n  return arg && typeof arg === 'object'\r\n    && typeof arg.copy === 'function'\r\n    && typeof arg.fill === 'function'\r\n    && typeof arg.readUInt8 === 'function';\r\n};\r\n\r\nvar inherits_browser = createCommonjsModule(function (module) {\r\nif (typeof Object.create === 'function') {\r\n  // implementation from standard node.js 'util' module\r\n  module.exports = function inherits(ctor, superCtor) {\r\n    ctor.super_ = superCtor;\r\n    ctor.prototype = Object.create(superCtor.prototype, {\r\n      constructor: {\r\n        value: ctor,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n  };\r\n} else {\r\n  // old school shim for old browsers\r\n  module.exports = function inherits(ctor, superCtor) {\r\n    ctor.super_ = superCtor;\r\n    var TempCtor = function () {};\r\n    TempCtor.prototype = superCtor.prototype;\r\n    ctor.prototype = new TempCtor();\r\n    ctor.prototype.constructor = ctor;\r\n  };\r\n}\r\n});\r\n\r\nvar util = createCommonjsModule(function (module, exports) {\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\r\n  function getOwnPropertyDescriptors(obj) {\r\n    var keys = Object.keys(obj);\r\n    var descriptors = {};\r\n    for (var i = 0; i < keys.length; i++) {\r\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\r\n    }\r\n    return descriptors;\r\n  };\r\n\r\nvar formatRegExp = /%[sdj%]/g;\r\nexports.format = function(f) {\r\n  if (!isString(f)) {\r\n    var objects = [];\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      objects.push(inspect(arguments[i]));\r\n    }\r\n    return objects.join(' ');\r\n  }\r\n\r\n  var i = 1;\r\n  var args = arguments;\r\n  var len = args.length;\r\n  var str = String(f).replace(formatRegExp, function(x) {\r\n    if (x === '%%') return '%';\r\n    if (i >= len) return x;\r\n    switch (x) {\r\n      case '%s': return String(args[i++]);\r\n      case '%d': return Number(args[i++]);\r\n      case '%j':\r\n        try {\r\n          return JSON.stringify(args[i++]);\r\n        } catch (_) {\r\n          return '[Circular]';\r\n        }\r\n      default:\r\n        return x;\r\n    }\r\n  });\r\n  for (var x = args[i]; i < len; x = args[++i]) {\r\n    if (isNull(x) || !isObject(x)) {\r\n      str += ' ' + x;\r\n    } else {\r\n      str += ' ' + inspect(x);\r\n    }\r\n  }\r\n  return str;\r\n};\r\n\r\n\r\n// Mark that a method should not be used.\r\n// Returns a modified function which warns once by default.\r\n// If --no-deprecation is set, then it is a no-op.\r\nexports.deprecate = function(fn, msg) {\r\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\r\n    return fn;\r\n  }\r\n\r\n  // Allow for deprecating things in the process of starting up.\r\n  if (typeof process === 'undefined') {\r\n    return function() {\r\n      return exports.deprecate(fn, msg).apply(this, arguments);\r\n    };\r\n  }\r\n\r\n  var warned = false;\r\n  function deprecated() {\r\n    if (!warned) {\r\n      if (process.throwDeprecation) {\r\n        throw new Error(msg);\r\n      } else if (process.traceDeprecation) {\r\n        console.trace(msg);\r\n      } else {\r\n        console.error(msg);\r\n      }\r\n      warned = true;\r\n    }\r\n    return fn.apply(this, arguments);\r\n  }\r\n\r\n  return deprecated;\r\n};\r\n\r\n\r\nvar debugs = {};\r\nvar debugEnviron;\r\nexports.debuglog = function(set) {\r\n  if (isUndefined(debugEnviron))\r\n    debugEnviron = process.env.NODE_DEBUG || '';\r\n  set = set.toUpperCase();\r\n  if (!debugs[set]) {\r\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\r\n      var pid = process.pid;\r\n      debugs[set] = function() {\r\n        var msg = exports.format.apply(exports, arguments);\r\n        console.error('%s %d: %s', set, pid, msg);\r\n      };\r\n    } else {\r\n      debugs[set] = function() {};\r\n    }\r\n  }\r\n  return debugs[set];\r\n};\r\n\r\n\r\n/**\r\n * Echos the value of a value. Trys to print the value out\r\n * in the best way possible given the different types.\r\n *\r\n * @param {Object} obj The object to print out.\r\n * @param {Object} opts Optional options object that alters the output.\r\n */\r\n/* legacy: obj, showHidden, depth, colors*/\r\nfunction inspect(obj, opts) {\r\n  // default options\r\n  var ctx = {\r\n    seen: [],\r\n    stylize: stylizeNoColor\r\n  };\r\n  // legacy...\r\n  if (arguments.length >= 3) ctx.depth = arguments[2];\r\n  if (arguments.length >= 4) ctx.colors = arguments[3];\r\n  if (isBoolean(opts)) {\r\n    // legacy...\r\n    ctx.showHidden = opts;\r\n  } else if (opts) {\r\n    // got an \"options\" object\r\n    exports._extend(ctx, opts);\r\n  }\r\n  // set default options\r\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\r\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\r\n  if (isUndefined(ctx.colors)) ctx.colors = false;\r\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\r\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\r\n  return formatValue(ctx, obj, ctx.depth);\r\n}\r\nexports.inspect = inspect;\r\n\r\n\r\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\r\ninspect.colors = {\r\n  'bold' : [1, 22],\r\n  'italic' : [3, 23],\r\n  'underline' : [4, 24],\r\n  'inverse' : [7, 27],\r\n  'white' : [37, 39],\r\n  'grey' : [90, 39],\r\n  'black' : [30, 39],\r\n  'blue' : [34, 39],\r\n  'cyan' : [36, 39],\r\n  'green' : [32, 39],\r\n  'magenta' : [35, 39],\r\n  'red' : [31, 39],\r\n  'yellow' : [33, 39]\r\n};\r\n\r\n// Don't use 'blue' not visible on cmd.exe\r\ninspect.styles = {\r\n  'special': 'cyan',\r\n  'number': 'yellow',\r\n  'boolean': 'yellow',\r\n  'undefined': 'grey',\r\n  'null': 'bold',\r\n  'string': 'green',\r\n  'date': 'magenta',\r\n  // \"name\": intentionally not styling\r\n  'regexp': 'red'\r\n};\r\n\r\n\r\nfunction stylizeWithColor(str, styleType) {\r\n  var style = inspect.styles[styleType];\r\n\r\n  if (style) {\r\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\r\n           '\\u001b[' + inspect.colors[style][1] + 'm';\r\n  } else {\r\n    return str;\r\n  }\r\n}\r\n\r\n\r\nfunction stylizeNoColor(str, styleType) {\r\n  return str;\r\n}\r\n\r\n\r\nfunction arrayToHash(array) {\r\n  var hash = {};\r\n\r\n  array.forEach(function(val, idx) {\r\n    hash[val] = true;\r\n  });\r\n\r\n  return hash;\r\n}\r\n\r\n\r\nfunction formatValue(ctx, value, recurseTimes) {\r\n  // Provide a hook for user-specified inspect functions.\r\n  // Check that value is an object with an inspect function on it\r\n  if (ctx.customInspect &&\r\n      value &&\r\n      isFunction(value.inspect) &&\r\n      // Filter out the util module, it's inspect function is special\r\n      value.inspect !== exports.inspect &&\r\n      // Also filter out any prototype objects using the circular check.\r\n      !(value.constructor && value.constructor.prototype === value)) {\r\n    var ret = value.inspect(recurseTimes, ctx);\r\n    if (!isString(ret)) {\r\n      ret = formatValue(ctx, ret, recurseTimes);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  // Primitive types cannot have properties\r\n  var primitive = formatPrimitive(ctx, value);\r\n  if (primitive) {\r\n    return primitive;\r\n  }\r\n\r\n  // Look up the keys of the object.\r\n  var keys = Object.keys(value);\r\n  var visibleKeys = arrayToHash(keys);\r\n\r\n  if (ctx.showHidden) {\r\n    keys = Object.getOwnPropertyNames(value);\r\n  }\r\n\r\n  // IE doesn't make error fields non-enumerable\r\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\r\n  if (isError(value)\r\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\r\n    return formatError(value);\r\n  }\r\n\r\n  // Some type of object without properties can be shortcutted.\r\n  if (keys.length === 0) {\r\n    if (isFunction(value)) {\r\n      var name = value.name ? ': ' + value.name : '';\r\n      return ctx.stylize('[Function' + name + ']', 'special');\r\n    }\r\n    if (isRegExp(value)) {\r\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\r\n    }\r\n    if (isDate(value)) {\r\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\r\n    }\r\n    if (isError(value)) {\r\n      return formatError(value);\r\n    }\r\n  }\r\n\r\n  var base = '', array = false, braces = ['{', '}'];\r\n\r\n  // Make Array say that they are Array\r\n  if (isArray(value)) {\r\n    array = true;\r\n    braces = ['[', ']'];\r\n  }\r\n\r\n  // Make functions say that they are functions\r\n  if (isFunction(value)) {\r\n    var n = value.name ? ': ' + value.name : '';\r\n    base = ' [Function' + n + ']';\r\n  }\r\n\r\n  // Make RegExps say that they are RegExps\r\n  if (isRegExp(value)) {\r\n    base = ' ' + RegExp.prototype.toString.call(value);\r\n  }\r\n\r\n  // Make dates with properties first say the date\r\n  if (isDate(value)) {\r\n    base = ' ' + Date.prototype.toUTCString.call(value);\r\n  }\r\n\r\n  // Make error with message first say the error\r\n  if (isError(value)) {\r\n    base = ' ' + formatError(value);\r\n  }\r\n\r\n  if (keys.length === 0 && (!array || value.length == 0)) {\r\n    return braces[0] + base + braces[1];\r\n  }\r\n\r\n  if (recurseTimes < 0) {\r\n    if (isRegExp(value)) {\r\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\r\n    } else {\r\n      return ctx.stylize('[Object]', 'special');\r\n    }\r\n  }\r\n\r\n  ctx.seen.push(value);\r\n\r\n  var output;\r\n  if (array) {\r\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\r\n  } else {\r\n    output = keys.map(function(key) {\r\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\r\n    });\r\n  }\r\n\r\n  ctx.seen.pop();\r\n\r\n  return reduceToSingleString(output, base, braces);\r\n}\r\n\r\n\r\nfunction formatPrimitive(ctx, value) {\r\n  if (isUndefined(value))\r\n    return ctx.stylize('undefined', 'undefined');\r\n  if (isString(value)) {\r\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\r\n                                             .replace(/'/g, \"\\\\'\")\r\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\r\n    return ctx.stylize(simple, 'string');\r\n  }\r\n  if (isNumber(value))\r\n    return ctx.stylize('' + value, 'number');\r\n  if (isBoolean(value))\r\n    return ctx.stylize('' + value, 'boolean');\r\n  // For some reason typeof null is \"object\", so special case here.\r\n  if (isNull(value))\r\n    return ctx.stylize('null', 'null');\r\n}\r\n\r\n\r\nfunction formatError(value) {\r\n  return '[' + Error.prototype.toString.call(value) + ']';\r\n}\r\n\r\n\r\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\r\n  var output = [];\r\n  for (var i = 0, l = value.length; i < l; ++i) {\r\n    if (hasOwnProperty(value, String(i))) {\r\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\r\n          String(i), true));\r\n    } else {\r\n      output.push('');\r\n    }\r\n  }\r\n  keys.forEach(function(key) {\r\n    if (!key.match(/^\\d+$/)) {\r\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\r\n          key, true));\r\n    }\r\n  });\r\n  return output;\r\n}\r\n\r\n\r\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\r\n  var name, str, desc;\r\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\r\n  if (desc.get) {\r\n    if (desc.set) {\r\n      str = ctx.stylize('[Getter/Setter]', 'special');\r\n    } else {\r\n      str = ctx.stylize('[Getter]', 'special');\r\n    }\r\n  } else {\r\n    if (desc.set) {\r\n      str = ctx.stylize('[Setter]', 'special');\r\n    }\r\n  }\r\n  if (!hasOwnProperty(visibleKeys, key)) {\r\n    name = '[' + key + ']';\r\n  }\r\n  if (!str) {\r\n    if (ctx.seen.indexOf(desc.value) < 0) {\r\n      if (isNull(recurseTimes)) {\r\n        str = formatValue(ctx, desc.value, null);\r\n      } else {\r\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\r\n      }\r\n      if (str.indexOf('\\n') > -1) {\r\n        if (array) {\r\n          str = str.split('\\n').map(function(line) {\r\n            return '  ' + line;\r\n          }).join('\\n').substr(2);\r\n        } else {\r\n          str = '\\n' + str.split('\\n').map(function(line) {\r\n            return '   ' + line;\r\n          }).join('\\n');\r\n        }\r\n      }\r\n    } else {\r\n      str = ctx.stylize('[Circular]', 'special');\r\n    }\r\n  }\r\n  if (isUndefined(name)) {\r\n    if (array && key.match(/^\\d+$/)) {\r\n      return str;\r\n    }\r\n    name = JSON.stringify('' + key);\r\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\r\n      name = name.substr(1, name.length - 2);\r\n      name = ctx.stylize(name, 'name');\r\n    } else {\r\n      name = name.replace(/'/g, \"\\\\'\")\r\n                 .replace(/\\\\\"/g, '\"')\r\n                 .replace(/(^\"|\"$)/g, \"'\");\r\n      name = ctx.stylize(name, 'string');\r\n    }\r\n  }\r\n\r\n  return name + ': ' + str;\r\n}\r\n\r\n\r\nfunction reduceToSingleString(output, base, braces) {\r\n  var length = output.reduce(function(prev, cur) {\r\n    if (cur.indexOf('\\n') >= 0) ;\r\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\r\n  }, 0);\r\n\r\n  if (length > 60) {\r\n    return braces[0] +\r\n           (base === '' ? '' : base + '\\n ') +\r\n           ' ' +\r\n           output.join(',\\n  ') +\r\n           ' ' +\r\n           braces[1];\r\n  }\r\n\r\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\r\n}\r\n\r\n\r\n// NOTE: These type checking functions intentionally don't use `instanceof`\r\n// because it is fragile and can be easily faked with `Object.create()`.\r\nfunction isArray(ar) {\r\n  return Array.isArray(ar);\r\n}\r\nexports.isArray = isArray;\r\n\r\nfunction isBoolean(arg) {\r\n  return typeof arg === 'boolean';\r\n}\r\nexports.isBoolean = isBoolean;\r\n\r\nfunction isNull(arg) {\r\n  return arg === null;\r\n}\r\nexports.isNull = isNull;\r\n\r\nfunction isNullOrUndefined(arg) {\r\n  return arg == null;\r\n}\r\nexports.isNullOrUndefined = isNullOrUndefined;\r\n\r\nfunction isNumber(arg) {\r\n  return typeof arg === 'number';\r\n}\r\nexports.isNumber = isNumber;\r\n\r\nfunction isString(arg) {\r\n  return typeof arg === 'string';\r\n}\r\nexports.isString = isString;\r\n\r\nfunction isSymbol(arg) {\r\n  return typeof arg === 'symbol';\r\n}\r\nexports.isSymbol = isSymbol;\r\n\r\nfunction isUndefined(arg) {\r\n  return arg === void 0;\r\n}\r\nexports.isUndefined = isUndefined;\r\n\r\nfunction isRegExp(re) {\r\n  return isObject(re) && objectToString(re) === '[object RegExp]';\r\n}\r\nexports.isRegExp = isRegExp;\r\n\r\nfunction isObject(arg) {\r\n  return typeof arg === 'object' && arg !== null;\r\n}\r\nexports.isObject = isObject;\r\n\r\nfunction isDate(d) {\r\n  return isObject(d) && objectToString(d) === '[object Date]';\r\n}\r\nexports.isDate = isDate;\r\n\r\nfunction isError(e) {\r\n  return isObject(e) &&\r\n      (objectToString(e) === '[object Error]' || e instanceof Error);\r\n}\r\nexports.isError = isError;\r\n\r\nfunction isFunction(arg) {\r\n  return typeof arg === 'function';\r\n}\r\nexports.isFunction = isFunction;\r\n\r\nfunction isPrimitive(arg) {\r\n  return arg === null ||\r\n         typeof arg === 'boolean' ||\r\n         typeof arg === 'number' ||\r\n         typeof arg === 'string' ||\r\n         typeof arg === 'symbol' ||  // ES6 symbol\r\n         typeof arg === 'undefined';\r\n}\r\nexports.isPrimitive = isPrimitive;\r\n\r\nexports.isBuffer = isBufferBrowser;\r\n\r\nfunction objectToString(o) {\r\n  return Object.prototype.toString.call(o);\r\n}\r\n\r\n\r\nfunction pad(n) {\r\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\r\n}\r\n\r\n\r\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\r\n              'Oct', 'Nov', 'Dec'];\r\n\r\n// 26 Feb 16:19:34\r\nfunction timestamp() {\r\n  var d = new Date();\r\n  var time = [pad(d.getHours()),\r\n              pad(d.getMinutes()),\r\n              pad(d.getSeconds())].join(':');\r\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\r\n}\r\n\r\n\r\n// log is just a thin wrapper to console.log that prepends a timestamp\r\nexports.log = function() {\r\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\r\n};\r\n\r\n\r\n/**\r\n * Inherit the prototype methods from one constructor into another.\r\n *\r\n * The Function.prototype.inherits from lang.js rewritten as a standalone\r\n * function (not on Function.prototype). NOTE: If this file is to be loaded\r\n * during bootstrapping this function needs to be rewritten using some native\r\n * functions as prototype setup using normal JavaScript does not work as\r\n * expected during bootstrapping (see mirror.js in r114903).\r\n *\r\n * @param {function} ctor Constructor function which needs to inherit the\r\n *     prototype.\r\n * @param {function} superCtor Constructor function to inherit prototype from.\r\n */\r\nexports.inherits = inherits_browser;\r\n\r\nexports._extend = function(origin, add) {\r\n  // Don't do anything if add isn't an object\r\n  if (!add || !isObject(add)) return origin;\r\n\r\n  var keys = Object.keys(add);\r\n  var i = keys.length;\r\n  while (i--) {\r\n    origin[keys[i]] = add[keys[i]];\r\n  }\r\n  return origin;\r\n};\r\n\r\nfunction hasOwnProperty(obj, prop) {\r\n  return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\n\r\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\r\n\r\nexports.promisify = function promisify(original) {\r\n  if (typeof original !== 'function')\r\n    throw new TypeError('The \"original\" argument must be of type Function');\r\n\r\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\r\n    var fn = original[kCustomPromisifiedSymbol];\r\n    if (typeof fn !== 'function') {\r\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\r\n    }\r\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\r\n      value: fn, enumerable: false, writable: false, configurable: true\r\n    });\r\n    return fn;\r\n  }\r\n\r\n  function fn() {\r\n    var promiseResolve, promiseReject;\r\n    var promise = new Promise(function (resolve, reject) {\r\n      promiseResolve = resolve;\r\n      promiseReject = reject;\r\n    });\r\n\r\n    var args = [];\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      args.push(arguments[i]);\r\n    }\r\n    args.push(function (err, value) {\r\n      if (err) {\r\n        promiseReject(err);\r\n      } else {\r\n        promiseResolve(value);\r\n      }\r\n    });\r\n\r\n    try {\r\n      original.apply(this, args);\r\n    } catch (err) {\r\n      promiseReject(err);\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\r\n\r\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\r\n    value: fn, enumerable: false, writable: false, configurable: true\r\n  });\r\n  return Object.defineProperties(\r\n    fn,\r\n    getOwnPropertyDescriptors(original)\r\n  );\r\n};\r\n\r\nexports.promisify.custom = kCustomPromisifiedSymbol;\r\n\r\nfunction callbackifyOnRejected(reason, cb) {\r\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\r\n  // Because `null` is a special error value in callbacks which means \"no error\r\n  // occurred\", we error-wrap so the callback consumer can distinguish between\r\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\r\n  if (!reason) {\r\n    var newReason = new Error('Promise was rejected with a falsy value');\r\n    newReason.reason = reason;\r\n    reason = newReason;\r\n  }\r\n  return cb(reason);\r\n}\r\n\r\nfunction callbackify(original) {\r\n  if (typeof original !== 'function') {\r\n    throw new TypeError('The \"original\" argument must be of type Function');\r\n  }\r\n\r\n  // We DO NOT return the promise as it gives the user a false sense that\r\n  // the promise is actually somehow related to the callback's execution\r\n  // and that the callback throwing will reject the promise.\r\n  function callbackified() {\r\n    var args = [];\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      args.push(arguments[i]);\r\n    }\r\n\r\n    var maybeCb = args.pop();\r\n    if (typeof maybeCb !== 'function') {\r\n      throw new TypeError('The last argument must be of type Function');\r\n    }\r\n    var self = this;\r\n    var cb = function() {\r\n      return maybeCb.apply(self, arguments);\r\n    };\r\n    // In true node style we process the callback on `nextTick` with all the\r\n    // implications (stack, `uncaughtException`, `async_hooks`)\r\n    original.apply(this, args)\r\n      .then(function(ret) { process.nextTick(cb, null, ret); },\r\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb); });\r\n  }\r\n\r\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\r\n  Object.defineProperties(callbackified,\r\n                          getOwnPropertyDescriptors(original));\r\n  return callbackified;\r\n}\r\nexports.callbackify = callbackify;\r\n});\r\n\r\nvar TextEncoder_1 =\r\n  typeof TextEncoder !== \"undefined\" ? TextEncoder : util.TextEncoder;\r\n\r\nvar TextDecoder_1 =\r\n  typeof TextDecoder !== \"undefined\" ? TextDecoder : util.TextDecoder;\r\n\r\nvar lib = {\r\n\tTextEncoder: TextEncoder_1,\r\n\tTextDecoder: TextDecoder_1\r\n};\r\n\r\n// @ts-ignore\r\nconst { TextEncoder: TextEncoder$1, TextDecoder: TextDecoder$1 } = lib;\r\n\r\nconst textDecoder = new TextDecoder$1();\r\n/**\r\n * @param {ArrayBufferView|ArrayBuffer} bytes\r\n * @returns {string}\r\n */\r\nconst decodeText = (bytes) => textDecoder.decode(bytes);\r\n\r\nconst textEncoder = new TextEncoder$1();\r\n/**\r\n * @param {string} text\r\n * @returns {Uint8Array}\r\n */\r\nconst encodeText = (text) => textEncoder.encode(text);\r\n\r\n/**\r\n * Returns a new Uint8Array created by concatenating the passed Arrays\r\n *\r\n * @param {Array<ArrayLike<number>>} arrs\r\n * @param {number} length\r\n * @returns {Uint8Array}\r\n */\r\nfunction concat (arrs, length) {\r\n  const output = new Uint8Array(length);\r\n  let offset = 0;\r\n\r\n  for (const arr of arrs) {\r\n    output.set(arr, offset);\r\n    offset += arr.length;\r\n  }\r\n\r\n  return output\r\n}\r\n\r\nvar util$1 = { decodeText, encodeText, concat };\r\n\r\nconst { encodeText: encodeText$1 } = util$1;\r\n\r\n/** @typedef {import('./types').CodecFactory} CodecFactory */\r\n/** @typedef {import(\"./types\").BaseName} BaseName */\r\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\r\n\r\n/**\r\n * Class to encode/decode in the supported Bases\r\n *\r\n */\r\nclass Base {\r\n  /**\r\n   * @param {BaseName} name\r\n   * @param {BaseCode} code\r\n   * @param {CodecFactory} factory\r\n   * @param {string} alphabet\r\n   */\r\n  constructor (name, code, factory, alphabet) {\r\n    this.name = name;\r\n    this.code = code;\r\n    this.codeBuf = encodeText$1(this.code);\r\n    this.alphabet = alphabet;\r\n    this.codec = factory(alphabet);\r\n  }\r\n\r\n  /**\r\n   * @param {Uint8Array} buf\r\n   * @returns {string}\r\n   */\r\n  encode (buf) {\r\n    return this.codec.encode(buf)\r\n  }\r\n\r\n  /**\r\n   * @param {string} string\r\n   * @returns {Uint8Array}\r\n   */\r\n  decode (string) {\r\n    for (const char of string) {\r\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\r\n        throw new Error(`invalid character '${char}' in '${string}'`)\r\n      }\r\n    }\r\n    return this.codec.decode(string)\r\n  }\r\n}\r\n\r\nvar base$1 = Base;\r\n\r\n/** @typedef {import('./types').CodecFactory} CodecFactory */\r\n\r\n/**\r\n * @param {string} string\r\n * @param {string} alphabet\r\n * @param {number} bitsPerChar\r\n * @returns {Uint8Array}\r\n */\r\nconst decode$1 = (string, alphabet, bitsPerChar) => {\r\n  // Build the character lookup table:\r\n  const codes = {};\r\n  for (let i = 0; i < alphabet.length; ++i) {\r\n    codes[alphabet[i]] = i;\r\n  }\r\n\r\n  // Count the padding bytes:\r\n  let end = string.length;\r\n  while (string[end - 1] === '=') {\r\n    --end;\r\n  }\r\n\r\n  // Allocate the output:\r\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0);\r\n\r\n  // Parse the data:\r\n  let bits = 0; // Number of bits currently in the buffer\r\n  let buffer = 0; // Bits waiting to be written out, MSB first\r\n  let written = 0; // Next byte to write\r\n  for (let i = 0; i < end; ++i) {\r\n    // Read one character from the string:\r\n    const value = codes[string[i]];\r\n    if (value === undefined) {\r\n      throw new SyntaxError('Invalid character ' + string[i])\r\n    }\r\n\r\n    // Append the bits to the buffer:\r\n    buffer = (buffer << bitsPerChar) | value;\r\n    bits += bitsPerChar;\r\n\r\n    // Write out some bits if the buffer has a byte's worth:\r\n    if (bits >= 8) {\r\n      bits -= 8;\r\n      out[written++] = 0xff & (buffer >> bits);\r\n    }\r\n  }\r\n\r\n  // Verify that we have received just enough bits:\r\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\r\n    throw new SyntaxError('Unexpected end of data')\r\n  }\r\n\r\n  return out\r\n};\r\n\r\n/**\r\n * @param {Uint8Array} data\r\n * @param {string} alphabet\r\n * @param {number} bitsPerChar\r\n * @returns {string}\r\n */\r\nconst encode$1 = (data, alphabet, bitsPerChar) => {\r\n  const pad = alphabet[alphabet.length - 1] === '=';\r\n  const mask = (1 << bitsPerChar) - 1;\r\n  let out = '';\r\n\r\n  let bits = 0; // Number of bits currently in the buffer\r\n  let buffer = 0; // Bits waiting to be written out, MSB first\r\n  for (let i = 0; i < data.length; ++i) {\r\n    // Slurp data into the buffer:\r\n    buffer = (buffer << 8) | data[i];\r\n    bits += 8;\r\n\r\n    // Write out as much as we can:\r\n    while (bits > bitsPerChar) {\r\n      bits -= bitsPerChar;\r\n      out += alphabet[mask & (buffer >> bits)];\r\n    }\r\n  }\r\n\r\n  // Partial character:\r\n  if (bits) {\r\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))];\r\n  }\r\n\r\n  // Add padding characters until we hit a byte boundary:\r\n  if (pad) {\r\n    while ((out.length * bitsPerChar) & 7) {\r\n      out += '=';\r\n    }\r\n  }\r\n\r\n  return out\r\n};\r\n\r\n/**\r\n * RFC4648 Factory\r\n *\r\n * @param {number} bitsPerChar\r\n * @returns {CodecFactory}\r\n */\r\nconst rfc4648 = (bitsPerChar) => (alphabet) => {\r\n  return {\r\n    /**\r\n     * @param {Uint8Array} input\r\n     * @returns {string}\r\n     */\r\n    encode (input) {\r\n      return encode$1(input, alphabet, bitsPerChar)\r\n    },\r\n    /**\r\n     * @param {string} input\r\n     * @returns {Uint8Array}\r\n     */\r\n    decode (input) {\r\n      return decode$1(input, alphabet, bitsPerChar)\r\n    }\r\n  }\r\n};\r\n\r\nvar rfc4648_1 = { rfc4648 };\r\n\r\nconst { rfc4648: rfc4648$1 } = rfc4648_1;\r\nconst { decodeText: decodeText$1, encodeText: encodeText$2 } = util$1;\r\n\r\n/** @typedef {import('./types').CodecFactory} CodecFactory */\r\n/** @typedef {import('./types').Codec} Codec */\r\n/** @typedef {import('./types').BaseName} BaseName */\r\n/** @typedef {import('./types').BaseCode} BaseCode */\r\n\r\n/** @type {CodecFactory} */\r\nconst identity = () => {\r\n  return {\r\n    encode: decodeText$1,\r\n    decode: encodeText$2\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * name, code, implementation, alphabet\r\n *\r\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\r\n */\r\nconst constants = [\r\n  ['identity', '\\x00', identity, ''],\r\n  ['base2', '0', rfc4648$1(1), '01'],\r\n  ['base8', '7', rfc4648$1(3), '01234567'],\r\n  ['base10', '9', src, '0123456789'],\r\n  ['base16', 'f', rfc4648$1(4), '0123456789abcdef'],\r\n  ['base16upper', 'F', rfc4648$1(4), '0123456789ABCDEF'],\r\n  ['base32hex', 'v', rfc4648$1(5), '0123456789abcdefghijklmnopqrstuv'],\r\n  ['base32hexupper', 'V', rfc4648$1(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'],\r\n  ['base32hexpad', 't', rfc4648$1(5), '0123456789abcdefghijklmnopqrstuv='],\r\n  ['base32hexpadupper', 'T', rfc4648$1(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='],\r\n  ['base32', 'b', rfc4648$1(5), 'abcdefghijklmnopqrstuvwxyz234567'],\r\n  ['base32upper', 'B', rfc4648$1(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'],\r\n  ['base32pad', 'c', rfc4648$1(5), 'abcdefghijklmnopqrstuvwxyz234567='],\r\n  ['base32padupper', 'C', rfc4648$1(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='],\r\n  ['base32z', 'h', rfc4648$1(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'],\r\n  ['base36', 'k', src, '0123456789abcdefghijklmnopqrstuvwxyz'],\r\n  ['base36upper', 'K', src, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\r\n  ['base58btc', 'z', src, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\r\n  ['base58flickr', 'Z', src, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\r\n  ['base64', 'm', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\r\n  ['base64pad', 'M', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\r\n  ['base64url', 'u', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\r\n  ['base64urlpad', 'U', rfc4648$1(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\r\n];\r\n\r\n/** @type {Record<BaseName,Base>} */\r\nconst names = constants.reduce((prev, tupple) => {\r\n  prev[tupple[0]] = new base$1(tupple[0], tupple[1], tupple[2], tupple[3]);\r\n  return prev\r\n}, /** @type {Record<BaseName,Base>} */({}));\r\n\r\n/** @type {Record<BaseCode,Base>} */\r\nconst codes = constants.reduce((prev, tupple) => {\r\n  prev[tupple[1]] = names[tupple[0]];\r\n  return prev\r\n}, /** @type {Record<BaseCode,Base>} */({}));\r\n\r\nvar constants_1 = {\r\n  names,\r\n  codes\r\n};\r\n\r\nconst { names: names$1 } = constants_1;\r\nconst { TextDecoder: TextDecoder$2 } = lib;\r\nconst utf8Decoder = new TextDecoder$2('utf8');\r\n\r\n/**\r\n * Turns a Uint8Array of bytes into a string with each\r\n * character being the char code of the corresponding byte\r\n *\r\n * @param {Uint8Array} array The array to turn into a string\r\n * @returns {String}\r\n */\r\nfunction uint8ArrayToAsciiString (array) {\r\n  let string = '';\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    string += String.fromCharCode(array[i]);\r\n  }\r\n  return string\r\n}\r\n\r\n/**\r\n * Turns a `Uint8Array` into a string.\r\n *\r\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\r\n *\r\n * Also `ascii` which is similar to node's 'binary' encoding.\r\n *\r\n * @param {Uint8Array} array The array to turn into a string\r\n * @param {String} [encoding=utf8] The encoding to use\r\n * @returns {String}\r\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\r\n */\r\nfunction toString (array, encoding = 'utf8') {\r\n  if (encoding === 'utf8' || encoding === 'utf-8') {\r\n    return utf8Decoder.decode(array)\r\n  }\r\n\r\n  if (encoding === 'ascii') {\r\n    return uint8ArrayToAsciiString(array)\r\n  }\r\n\r\n  const codec = names$1[encoding];\r\n\r\n  if (!codec) {\r\n    throw new Error('Unknown base')\r\n  }\r\n\r\n  return codec.encode(array)\r\n}\r\n\r\nvar toString_1 = toString;\r\n\r\nconst isIP = isIp_1;\r\nconst isV4 = isIp_1.v4;\r\nconst isV6 = isIp_1.v6;\r\n\r\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\r\nconst toBytes = function (ip, buff, offset) {\r\n  offset = ~~offset;\r\n\r\n  var result;\r\n\r\n  if (isV4(ip)) {\r\n    result = buff || new Uint8Array(offset + 4);\r\n    ip.split(/\\./g).map(function (byte) {\r\n      result[offset++] = parseInt(byte, 10) & 0xff;\r\n    });\r\n  } else if (isV6(ip)) {\r\n    var sections = ip.split(':', 8);\r\n\r\n    var i;\r\n    for (i = 0; i < sections.length; i++) {\r\n      var isv4 = isV4(sections[i]);\r\n      var v4Buffer;\r\n\r\n      if (isv4) {\r\n        v4Buffer = toBytes(sections[i]);\r\n        sections[i] = toString_1(v4Buffer.slice(0, 2), 'base16');\r\n      }\r\n\r\n      if (v4Buffer && ++i < 8) {\r\n        sections.splice(i, 0, toString_1(v4Buffer.slice(2, 4), 'base16'));\r\n      }\r\n    }\r\n\r\n    if (sections[0] === '') {\r\n      while (sections.length < 8) sections.unshift('0');\r\n    } else if (sections[sections.length - 1] === '') {\r\n      while (sections.length < 8) sections.push('0');\r\n    } else if (sections.length < 8) {\r\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\r\n      var argv = [i, '1'];\r\n      for (i = 9 - sections.length; i > 0; i--) {\r\n        argv.push('0');\r\n      }\r\n      sections.splice.apply(sections, argv);\r\n    }\r\n\r\n    result = buff || new Uint8Array(offset + 16);\r\n    for (i = 0; i < sections.length; i++) {\r\n      var word = parseInt(sections[i], 16);\r\n      result[offset++] = (word >> 8) & 0xff;\r\n      result[offset++] = word & 0xff;\r\n    }\r\n  }\r\n\r\n  if (!result) {\r\n    throw Error('Invalid ip address: ' + ip)\r\n  }\r\n\r\n  return result\r\n};\r\n\r\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\r\nconst toString$1 = function (buff, offset, length) {\r\n  offset = ~~offset;\r\n  length = length || (buff.length - offset);\r\n\r\n  var result = [];\r\n  var string;\r\n  const view = new DataView(buff.buffer);\r\n  if (length === 4) {\r\n    // IPv4\r\n    for (let i = 0; i < length; i++) {\r\n      result.push(buff[offset + i]);\r\n    }\r\n    string = result.join('.');\r\n  } else if (length === 16) {\r\n    // IPv6\r\n    for (let i = 0; i < length; i += 2) {\r\n      result.push(view.getUint16(offset + i).toString(16));\r\n    }\r\n    string = result.join(':');\r\n    string = string.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3');\r\n    string = string.replace(/:{3,4}/, '::');\r\n  }\r\n\r\n  return string\r\n};\r\n\r\nvar ip$1 = {\r\n  isIP,\r\n  isV4,\r\n  isV6,\r\n  toBytes,\r\n  toString: toString$1\r\n};\r\n\r\nfunction Protocols (proto) {\r\n  if (typeof (proto) === 'number') {\r\n    if (Protocols.codes[proto]) {\r\n      return Protocols.codes[proto]\r\n    }\r\n\r\n    throw new Error('no protocol with code: ' + proto)\r\n  } else if (typeof (proto) === 'string' || proto instanceof String) {\r\n    if (Protocols.names[proto]) {\r\n      return Protocols.names[proto]\r\n    }\r\n\r\n    throw new Error('no protocol with name: ' + proto)\r\n  }\r\n\r\n  throw new Error('invalid protocol id type: ' + proto)\r\n}\r\n\r\nconst V = -1;\r\nProtocols.lengthPrefixedVarSize = V;\r\nProtocols.V = V;\r\n\r\nProtocols.table = [\r\n  [4, 32, 'ip4'],\r\n  [6, 16, 'tcp'],\r\n  [33, 16, 'dccp'],\r\n  [41, 128, 'ip6'],\r\n  [42, V, 'ip6zone'],\r\n  [53, V, 'dns', 'resolvable'],\r\n  [54, V, 'dns4', 'resolvable'],\r\n  [55, V, 'dns6', 'resolvable'],\r\n  [56, V, 'dnsaddr', 'resolvable'],\r\n  [132, 16, 'sctp'],\r\n  [273, 16, 'udp'],\r\n  [275, 0, 'p2p-webrtc-star'],\r\n  [276, 0, 'p2p-webrtc-direct'],\r\n  [277, 0, 'p2p-stardust'],\r\n  [290, 0, 'p2p-circuit'],\r\n  [301, 0, 'udt'],\r\n  [302, 0, 'utp'],\r\n  [400, V, 'unix', false, 'path'],\r\n  // `ipfs` is added before `p2p` for legacy support.\r\n  // All text representations will default to `p2p`, but `ipfs` will\r\n  // still be supported\r\n  [421, V, 'ipfs'],\r\n  // `p2p` is the preferred name for 421, and is now the default\r\n  [421, V, 'p2p'],\r\n  [443, 0, 'https'],\r\n  [444, 96, 'onion'],\r\n  [445, 296, 'onion3'],\r\n  [446, V, 'garlic64'],\r\n  [460, 0, 'quic'],\r\n  [477, 0, 'ws'],\r\n  [478, 0, 'wss'],\r\n  [479, 0, 'p2p-websocket-star'],\r\n  [480, 0, 'http'],\r\n  [777, V, 'memory']\r\n];\r\n\r\nProtocols.names = {};\r\nProtocols.codes = {};\r\n\r\n// populate tables\r\nProtocols.table.map(row => {\r\n  const proto = p.apply(null, row);\r\n  Protocols.codes[proto.code] = proto;\r\n  Protocols.names[proto.name] = proto;\r\n});\r\n\r\nProtocols.object = p;\r\n\r\nfunction p (code, size, name, resolvable, path) {\r\n  return {\r\n    code,\r\n    size,\r\n    name,\r\n    resolvable: Boolean(resolvable),\r\n    path: Boolean(path)\r\n  }\r\n}\r\n\r\nvar protocolsTable = Protocols;\r\n\r\n/**\r\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\r\n *\r\n */\r\n\r\nvar src$1 = createCommonjsModule(function (module, exports) {\r\n\r\n\r\nconst { encodeText, decodeText, concat } = util$1;\r\n\r\n/** @typedef {import('./base')} Base */\r\n/** @typedef {import(\"./types\").BaseNameOrCode} BaseNameOrCode */\r\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\r\n\r\n/**\r\n * Create a new Uint8Array with the multibase varint+code.\r\n *\r\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\r\n * @param {Uint8Array} buf - The data to be prefixed with multibase.\r\n * @returns {Uint8Array}\r\n * @throws {Error} Will throw if the encoding is not supported\r\n */\r\nfunction multibase (nameOrCode, buf) {\r\n  if (!buf) {\r\n    throw new Error('requires an encoded Uint8Array')\r\n  }\r\n  const { name, codeBuf } = encoding(nameOrCode);\r\n  validEncode(name, buf);\r\n\r\n  return concat([codeBuf, buf], codeBuf.length + buf.length)\r\n}\r\n\r\n/**\r\n * Encode data with the specified base and add the multibase prefix.\r\n *\r\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\r\n * @param {Uint8Array} buf - The data to be encoded.\r\n * @returns {Uint8Array}\r\n * @throws {Error} Will throw if the encoding is not supported\r\n *\r\n */\r\nfunction encode (nameOrCode, buf) {\r\n  const enc = encoding(nameOrCode);\r\n  const data = encodeText(enc.encode(buf));\r\n\r\n  return concat([enc.codeBuf, data], enc.codeBuf.length + data.length)\r\n}\r\n\r\n/**\r\n * Takes a Uint8Array or string encoded with multibase header, decodes it and\r\n * returns the decoded buffer\r\n *\r\n * @param {Uint8Array|string} data\r\n * @returns {Uint8Array}\r\n * @throws {Error} Will throw if the encoding is not supported\r\n *\r\n */\r\nfunction decode (data) {\r\n  if (data instanceof Uint8Array) {\r\n    data = decodeText(data);\r\n  }\r\n  const prefix = data[0];\r\n\r\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\r\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\r\n    data = data.toLowerCase();\r\n  }\r\n  const enc = encoding(/** @type {BaseCode} */(data[0]));\r\n  return enc.decode(data.substring(1))\r\n}\r\n\r\n/**\r\n * Is the given data multibase encoded?\r\n *\r\n * @param {Uint8Array|string} data\r\n * @returns {false | string}\r\n */\r\nfunction isEncoded (data) {\r\n  if (data instanceof Uint8Array) {\r\n    data = decodeText(data);\r\n  }\r\n\r\n  // Ensure bufOrString is a string\r\n  if (Object.prototype.toString.call(data) !== '[object String]') {\r\n    return false\r\n  }\r\n\r\n  try {\r\n    const enc = encoding(/** @type {BaseCode} */(data[0]));\r\n    return enc.name\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Validate encoded data\r\n *\r\n * @param {BaseNameOrCode} name\r\n * @param {Uint8Array} buf\r\n * @returns {void}\r\n * @throws {Error} Will throw if the encoding is not supported\r\n */\r\nfunction validEncode (name, buf) {\r\n  const enc = encoding(name);\r\n  enc.decode(decodeText(buf));\r\n}\r\n\r\n/**\r\n * Get the encoding by name or code\r\n *\r\n * @param {BaseNameOrCode} nameOrCode\r\n * @returns {Base}\r\n * @throws {Error} Will throw if the encoding is not supported\r\n */\r\nfunction encoding (nameOrCode) {\r\n  if (constants_1.names[nameOrCode]) {\r\n    return constants_1.names[nameOrCode]\r\n  } else if (constants_1.codes[nameOrCode]) {\r\n    return constants_1.codes[nameOrCode]\r\n  } else {\r\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\r\n  }\r\n}\r\n\r\n/**\r\n * Get encoding from data\r\n *\r\n * @param {string|Uint8Array} data\r\n * @returns {Base}\r\n * @throws {Error} Will throw if the encoding is not supported\r\n */\r\nfunction encodingFromData (data) {\r\n  if (data instanceof Uint8Array) {\r\n    data = decodeText(data);\r\n  }\r\n\r\n  return encoding(/** @type {BaseCode} */(data[0]))\r\n}\r\n\r\nexports = module.exports = multibase;\r\nexports.encode = encode;\r\nexports.decode = decode;\r\nexports.isEncoded = isEncoded;\r\nexports.encoding = encoding;\r\nexports.encodingFromData = encodingFromData;\r\nexports.names = Object.freeze(constants_1.names);\r\nexports.codes = Object.freeze(constants_1.codes);\r\n});\r\n\r\n/* eslint quote-props: off */\r\n\r\n/**\r\n * Names for all available hashes\r\n *\r\n * @typedef { \"identity\" | \"sha1\" | \"sha2-256\" | \"sha2-512\" | \"sha3-512\" | \"sha3-384\" | \"sha3-256\" | \"sha3-224\" | \"shake-128\" | \"shake-256\" | \"keccak-224\" | \"keccak-256\" | \"keccak-384\" | \"keccak-512\" | \"blake3\" | \"murmur3-128\" | \"murmur3-32\" | \"dbl-sha2-256\" | \"md4\" | \"md5\" | \"bmt\" | \"sha2-256-trunc254-padded\" | \"ripemd-128\" | \"ripemd-160\" | \"ripemd-256\" | \"ripemd-320\" | \"x11\" | \"kangarootwelve\" | \"sm3-256\" | \"blake2b-8\" | \"blake2b-16\" | \"blake2b-24\" | \"blake2b-32\" | \"blake2b-40\" | \"blake2b-48\" | \"blake2b-56\" | \"blake2b-64\" | \"blake2b-72\" | \"blake2b-80\" | \"blake2b-88\" | \"blake2b-96\" | \"blake2b-104\" | \"blake2b-112\" | \"blake2b-120\" | \"blake2b-128\" | \"blake2b-136\" | \"blake2b-144\" | \"blake2b-152\" | \"blake2b-160\" | \"blake2b-168\" | \"blake2b-176\" | \"blake2b-184\" | \"blake2b-192\" | \"blake2b-200\" | \"blake2b-208\" | \"blake2b-216\" | \"blake2b-224\" | \"blake2b-232\" | \"blake2b-240\" | \"blake2b-248\" | \"blake2b-256\" | \"blake2b-264\" | \"blake2b-272\" | \"blake2b-280\" | \"blake2b-288\" | \"blake2b-296\" | \"blake2b-304\" | \"blake2b-312\" | \"blake2b-320\" | \"blake2b-328\" | \"blake2b-336\" | \"blake2b-344\" | \"blake2b-352\" | \"blake2b-360\" | \"blake2b-368\" | \"blake2b-376\" | \"blake2b-384\" | \"blake2b-392\" | \"blake2b-400\" | \"blake2b-408\" | \"blake2b-416\" | \"blake2b-424\" | \"blake2b-432\" | \"blake2b-440\" | \"blake2b-448\" | \"blake2b-456\" | \"blake2b-464\" | \"blake2b-472\" | \"blake2b-480\" | \"blake2b-488\" | \"blake2b-496\" | \"blake2b-504\" | \"blake2b-512\" | \"blake2s-8\" | \"blake2s-16\" | \"blake2s-24\" | \"blake2s-32\" | \"blake2s-40\" | \"blake2s-48\" | \"blake2s-56\" | \"blake2s-64\" | \"blake2s-72\" | \"blake2s-80\" | \"blake2s-88\" | \"blake2s-96\" | \"blake2s-104\" | \"blake2s-112\" | \"blake2s-120\" | \"blake2s-128\" | \"blake2s-136\" | \"blake2s-144\" | \"blake2s-152\" | \"blake2s-160\" | \"blake2s-168\" | \"blake2s-176\" | \"blake2s-184\" | \"blake2s-192\" | \"blake2s-200\" | \"blake2s-208\" | \"blake2s-216\" | \"blake2s-224\" | \"blake2s-232\" | \"blake2s-240\" | \"blake2s-248\" | \"blake2s-256\" | \"skein256-8\" | \"skein256-16\" | \"skein256-24\" | \"skein256-32\" | \"skein256-40\" | \"skein256-48\" | \"skein256-56\" | \"skein256-64\" | \"skein256-72\" | \"skein256-80\" | \"skein256-88\" | \"skein256-96\" | \"skein256-104\" | \"skein256-112\" | \"skein256-120\" | \"skein256-128\" | \"skein256-136\" | \"skein256-144\" | \"skein256-152\" | \"skein256-160\" | \"skein256-168\" | \"skein256-176\" | \"skein256-184\" | \"skein256-192\" | \"skein256-200\" | \"skein256-208\" | \"skein256-216\" | \"skein256-224\" | \"skein256-232\" | \"skein256-240\" | \"skein256-248\" | \"skein256-256\" | \"skein512-8\" | \"skein512-16\" | \"skein512-24\" | \"skein512-32\" | \"skein512-40\" | \"skein512-48\" | \"skein512-56\" | \"skein512-64\" | \"skein512-72\" | \"skein512-80\" | \"skein512-88\" | \"skein512-96\" | \"skein512-104\" | \"skein512-112\" | \"skein512-120\" | \"skein512-128\" | \"skein512-136\" | \"skein512-144\" | \"skein512-152\" | \"skein512-160\" | \"skein512-168\" | \"skein512-176\" | \"skein512-184\" | \"skein512-192\" | \"skein512-200\" | \"skein512-208\" | \"skein512-216\" | \"skein512-224\" | \"skein512-232\" | \"skein512-240\" | \"skein512-248\" | \"skein512-256\" | \"skein512-264\" | \"skein512-272\" | \"skein512-280\" | \"skein512-288\" | \"skein512-296\" | \"skein512-304\" | \"skein512-312\" | \"skein512-320\" | \"skein512-328\" | \"skein512-336\" | \"skein512-344\" | \"skein512-352\" | \"skein512-360\" | \"skein512-368\" | \"skein512-376\" | \"skein512-384\" | \"skein512-392\" | \"skein512-400\" | \"skein512-408\" | \"skein512-416\" | \"skein512-424\" | \"skein512-432\" | \"skein512-440\" | \"skein512-448\" | \"skein512-456\" | \"skein512-464\" | \"skein512-472\" | \"skein512-480\" | \"skein512-488\" | \"skein512-496\" | \"skein512-504\" | \"skein512-512\" | \"skein1024-8\" | \"skein1024-16\" | \"skein1024-24\" | \"skein1024-32\" | \"skein1024-40\" | \"skein1024-48\" | \"skein1024-56\" | \"skein1024-64\" | \"skein1024-72\" | \"skein1024-80\" | \"skein1024-88\" | \"skein1024-96\" | \"skein1024-104\" | \"skein1024-112\" | \"skein1024-120\" | \"skein1024-128\" | \"skein1024-136\" | \"skein1024-144\" | \"skein1024-152\" | \"skein1024-160\" | \"skein1024-168\" | \"skein1024-176\" | \"skein1024-184\" | \"skein1024-192\" | \"skein1024-200\" | \"skein1024-208\" | \"skein1024-216\" | \"skein1024-224\" | \"skein1024-232\" | \"skein1024-240\" | \"skein1024-248\" | \"skein1024-256\" | \"skein1024-264\" | \"skein1024-272\" | \"skein1024-280\" | \"skein1024-288\" | \"skein1024-296\" | \"skein1024-304\" | \"skein1024-312\" | \"skein1024-320\" | \"skein1024-328\" | \"skein1024-336\" | \"skein1024-344\" | \"skein1024-352\" | \"skein1024-360\" | \"skein1024-368\" | \"skein1024-376\" | \"skein1024-384\" | \"skein1024-392\" | \"skein1024-400\" | \"skein1024-408\" | \"skein1024-416\" | \"skein1024-424\" | \"skein1024-432\" | \"skein1024-440\" | \"skein1024-448\" | \"skein1024-456\" | \"skein1024-464\" | \"skein1024-472\" | \"skein1024-480\" | \"skein1024-488\" | \"skein1024-496\" | \"skein1024-504\" | \"skein1024-512\" | \"skein1024-520\" | \"skein1024-528\" | \"skein1024-536\" | \"skein1024-544\" | \"skein1024-552\" | \"skein1024-560\" | \"skein1024-568\" | \"skein1024-576\" | \"skein1024-584\" | \"skein1024-592\" | \"skein1024-600\" | \"skein1024-608\" | \"skein1024-616\" | \"skein1024-624\" | \"skein1024-632\" | \"skein1024-640\" | \"skein1024-648\" | \"skein1024-656\" | \"skein1024-664\" | \"skein1024-672\" | \"skein1024-680\" | \"skein1024-688\" | \"skein1024-696\" | \"skein1024-704\" | \"skein1024-712\" | \"skein1024-720\" | \"skein1024-728\" | \"skein1024-736\" | \"skein1024-744\" | \"skein1024-752\" | \"skein1024-760\" | \"skein1024-768\" | \"skein1024-776\" | \"skein1024-784\" | \"skein1024-792\" | \"skein1024-800\" | \"skein1024-808\" | \"skein1024-816\" | \"skein1024-824\" | \"skein1024-832\" | \"skein1024-840\" | \"skein1024-848\" | \"skein1024-856\" | \"skein1024-864\" | \"skein1024-872\" | \"skein1024-880\" | \"skein1024-888\" | \"skein1024-896\" | \"skein1024-904\" | \"skein1024-912\" | \"skein1024-920\" | \"skein1024-928\" | \"skein1024-936\" | \"skein1024-944\" | \"skein1024-952\" | \"skein1024-960\" | \"skein1024-968\" | \"skein1024-976\" | \"skein1024-984\" | \"skein1024-992\" | \"skein1024-1000\" | \"skein1024-1008\" | \"skein1024-1016\" | \"skein1024-1024\" | \"poseidon-bls12_381-a2-fc1\" | \"poseidon-bls12_381-a2-fc1-sc\" } HashName\r\n */\r\n/**\r\n * Codes for all available hashes\r\n *\r\n * @typedef { 0x00 | 0x11 | 0x12 | 0x13 | 0x14 | 0x15 | 0x16 | 0x17 | 0x18 | 0x19 | 0x1a | 0x1b | 0x1c | 0x1d | 0x1e | 0x22 | 0x23 | 0x56 | 0xd4 | 0xd5 | 0xd6 | 0x1012 | 0x1052 | 0x1053 | 0x1054 | 0x1055 | 0x1100 | 0x1d01 | 0x534d | 0xb201 | 0xb202 | 0xb203 | 0xb204 | 0xb205 | 0xb206 | 0xb207 | 0xb208 | 0xb209 | 0xb20a | 0xb20b | 0xb20c | 0xb20d | 0xb20e | 0xb20f | 0xb210 | 0xb211 | 0xb212 | 0xb213 | 0xb214 | 0xb215 | 0xb216 | 0xb217 | 0xb218 | 0xb219 | 0xb21a | 0xb21b | 0xb21c | 0xb21d | 0xb21e | 0xb21f | 0xb220 | 0xb221 | 0xb222 | 0xb223 | 0xb224 | 0xb225 | 0xb226 | 0xb227 | 0xb228 | 0xb229 | 0xb22a | 0xb22b | 0xb22c | 0xb22d | 0xb22e | 0xb22f | 0xb230 | 0xb231 | 0xb232 | 0xb233 | 0xb234 | 0xb235 | 0xb236 | 0xb237 | 0xb238 | 0xb239 | 0xb23a | 0xb23b | 0xb23c | 0xb23d | 0xb23e | 0xb23f | 0xb240 | 0xb241 | 0xb242 | 0xb243 | 0xb244 | 0xb245 | 0xb246 | 0xb247 | 0xb248 | 0xb249 | 0xb24a | 0xb24b | 0xb24c | 0xb24d | 0xb24e | 0xb24f | 0xb250 | 0xb251 | 0xb252 | 0xb253 | 0xb254 | 0xb255 | 0xb256 | 0xb257 | 0xb258 | 0xb259 | 0xb25a | 0xb25b | 0xb25c | 0xb25d | 0xb25e | 0xb25f | 0xb260 | 0xb301 | 0xb302 | 0xb303 | 0xb304 | 0xb305 | 0xb306 | 0xb307 | 0xb308 | 0xb309 | 0xb30a | 0xb30b | 0xb30c | 0xb30d | 0xb30e | 0xb30f | 0xb310 | 0xb311 | 0xb312 | 0xb313 | 0xb314 | 0xb315 | 0xb316 | 0xb317 | 0xb318 | 0xb319 | 0xb31a | 0xb31b | 0xb31c | 0xb31d | 0xb31e | 0xb31f | 0xb320 | 0xb321 | 0xb322 | 0xb323 | 0xb324 | 0xb325 | 0xb326 | 0xb327 | 0xb328 | 0xb329 | 0xb32a | 0xb32b | 0xb32c | 0xb32d | 0xb32e | 0xb32f | 0xb330 | 0xb331 | 0xb332 | 0xb333 | 0xb334 | 0xb335 | 0xb336 | 0xb337 | 0xb338 | 0xb339 | 0xb33a | 0xb33b | 0xb33c | 0xb33d | 0xb33e | 0xb33f | 0xb340 | 0xb341 | 0xb342 | 0xb343 | 0xb344 | 0xb345 | 0xb346 | 0xb347 | 0xb348 | 0xb349 | 0xb34a | 0xb34b | 0xb34c | 0xb34d | 0xb34e | 0xb34f | 0xb350 | 0xb351 | 0xb352 | 0xb353 | 0xb354 | 0xb355 | 0xb356 | 0xb357 | 0xb358 | 0xb359 | 0xb35a | 0xb35b | 0xb35c | 0xb35d | 0xb35e | 0xb35f | 0xb360 | 0xb361 | 0xb362 | 0xb363 | 0xb364 | 0xb365 | 0xb366 | 0xb367 | 0xb368 | 0xb369 | 0xb36a | 0xb36b | 0xb36c | 0xb36d | 0xb36e | 0xb36f | 0xb370 | 0xb371 | 0xb372 | 0xb373 | 0xb374 | 0xb375 | 0xb376 | 0xb377 | 0xb378 | 0xb379 | 0xb37a | 0xb37b | 0xb37c | 0xb37d | 0xb37e | 0xb37f | 0xb380 | 0xb381 | 0xb382 | 0xb383 | 0xb384 | 0xb385 | 0xb386 | 0xb387 | 0xb388 | 0xb389 | 0xb38a | 0xb38b | 0xb38c | 0xb38d | 0xb38e | 0xb38f | 0xb390 | 0xb391 | 0xb392 | 0xb393 | 0xb394 | 0xb395 | 0xb396 | 0xb397 | 0xb398 | 0xb399 | 0xb39a | 0xb39b | 0xb39c | 0xb39d | 0xb39e | 0xb39f | 0xb3a0 | 0xb3a1 | 0xb3a2 | 0xb3a3 | 0xb3a4 | 0xb3a5 | 0xb3a6 | 0xb3a7 | 0xb3a8 | 0xb3a9 | 0xb3aa | 0xb3ab | 0xb3ac | 0xb3ad | 0xb3ae | 0xb3af | 0xb3b0 | 0xb3b1 | 0xb3b2 | 0xb3b3 | 0xb3b4 | 0xb3b5 | 0xb3b6 | 0xb3b7 | 0xb3b8 | 0xb3b9 | 0xb3ba | 0xb3bb | 0xb3bc | 0xb3bd | 0xb3be | 0xb3bf | 0xb3c0 | 0xb3c1 | 0xb3c2 | 0xb3c3 | 0xb3c4 | 0xb3c5 | 0xb3c6 | 0xb3c7 | 0xb3c8 | 0xb3c9 | 0xb3ca | 0xb3cb | 0xb3cc | 0xb3cd | 0xb3ce | 0xb3cf | 0xb3d0 | 0xb3d1 | 0xb3d2 | 0xb3d3 | 0xb3d4 | 0xb3d5 | 0xb3d6 | 0xb3d7 | 0xb3d8 | 0xb3d9 | 0xb3da | 0xb3db | 0xb3dc | 0xb3dd | 0xb3de | 0xb3df | 0xb3e0 | 0xb401 | 0xb402 } HashCode\r\n */\r\n\r\n/**\r\n * @type { Object<HashName,HashCode> }\r\n */\r\nconst names$2 = Object.freeze({\r\n  'identity': 0x00,\r\n  'sha1': 0x11,\r\n  'sha2-256': 0x12,\r\n  'sha2-512': 0x13,\r\n  'sha3-512': 0x14,\r\n  'sha3-384': 0x15,\r\n  'sha3-256': 0x16,\r\n  'sha3-224': 0x17,\r\n  'shake-128': 0x18,\r\n  'shake-256': 0x19,\r\n  'keccak-224': 0x1a,\r\n  'keccak-256': 0x1b,\r\n  'keccak-384': 0x1c,\r\n  'keccak-512': 0x1d,\r\n  'blake3': 0x1e,\r\n  'murmur3-128': 0x22,\r\n  'murmur3-32': 0x23,\r\n  'dbl-sha2-256': 0x56,\r\n  'md4': 0xd4,\r\n  'md5': 0xd5,\r\n  'bmt': 0xd6,\r\n  'sha2-256-trunc254-padded': 0x1012,\r\n  'ripemd-128': 0x1052,\r\n  'ripemd-160': 0x1053,\r\n  'ripemd-256': 0x1054,\r\n  'ripemd-320': 0x1055,\r\n  'x11': 0x1100,\r\n  'kangarootwelve': 0x1d01,\r\n  'sm3-256': 0x534d,\r\n  'blake2b-8': 0xb201,\r\n  'blake2b-16': 0xb202,\r\n  'blake2b-24': 0xb203,\r\n  'blake2b-32': 0xb204,\r\n  'blake2b-40': 0xb205,\r\n  'blake2b-48': 0xb206,\r\n  'blake2b-56': 0xb207,\r\n  'blake2b-64': 0xb208,\r\n  'blake2b-72': 0xb209,\r\n  'blake2b-80': 0xb20a,\r\n  'blake2b-88': 0xb20b,\r\n  'blake2b-96': 0xb20c,\r\n  'blake2b-104': 0xb20d,\r\n  'blake2b-112': 0xb20e,\r\n  'blake2b-120': 0xb20f,\r\n  'blake2b-128': 0xb210,\r\n  'blake2b-136': 0xb211,\r\n  'blake2b-144': 0xb212,\r\n  'blake2b-152': 0xb213,\r\n  'blake2b-160': 0xb214,\r\n  'blake2b-168': 0xb215,\r\n  'blake2b-176': 0xb216,\r\n  'blake2b-184': 0xb217,\r\n  'blake2b-192': 0xb218,\r\n  'blake2b-200': 0xb219,\r\n  'blake2b-208': 0xb21a,\r\n  'blake2b-216': 0xb21b,\r\n  'blake2b-224': 0xb21c,\r\n  'blake2b-232': 0xb21d,\r\n  'blake2b-240': 0xb21e,\r\n  'blake2b-248': 0xb21f,\r\n  'blake2b-256': 0xb220,\r\n  'blake2b-264': 0xb221,\r\n  'blake2b-272': 0xb222,\r\n  'blake2b-280': 0xb223,\r\n  'blake2b-288': 0xb224,\r\n  'blake2b-296': 0xb225,\r\n  'blake2b-304': 0xb226,\r\n  'blake2b-312': 0xb227,\r\n  'blake2b-320': 0xb228,\r\n  'blake2b-328': 0xb229,\r\n  'blake2b-336': 0xb22a,\r\n  'blake2b-344': 0xb22b,\r\n  'blake2b-352': 0xb22c,\r\n  'blake2b-360': 0xb22d,\r\n  'blake2b-368': 0xb22e,\r\n  'blake2b-376': 0xb22f,\r\n  'blake2b-384': 0xb230,\r\n  'blake2b-392': 0xb231,\r\n  'blake2b-400': 0xb232,\r\n  'blake2b-408': 0xb233,\r\n  'blake2b-416': 0xb234,\r\n  'blake2b-424': 0xb235,\r\n  'blake2b-432': 0xb236,\r\n  'blake2b-440': 0xb237,\r\n  'blake2b-448': 0xb238,\r\n  'blake2b-456': 0xb239,\r\n  'blake2b-464': 0xb23a,\r\n  'blake2b-472': 0xb23b,\r\n  'blake2b-480': 0xb23c,\r\n  'blake2b-488': 0xb23d,\r\n  'blake2b-496': 0xb23e,\r\n  'blake2b-504': 0xb23f,\r\n  'blake2b-512': 0xb240,\r\n  'blake2s-8': 0xb241,\r\n  'blake2s-16': 0xb242,\r\n  'blake2s-24': 0xb243,\r\n  'blake2s-32': 0xb244,\r\n  'blake2s-40': 0xb245,\r\n  'blake2s-48': 0xb246,\r\n  'blake2s-56': 0xb247,\r\n  'blake2s-64': 0xb248,\r\n  'blake2s-72': 0xb249,\r\n  'blake2s-80': 0xb24a,\r\n  'blake2s-88': 0xb24b,\r\n  'blake2s-96': 0xb24c,\r\n  'blake2s-104': 0xb24d,\r\n  'blake2s-112': 0xb24e,\r\n  'blake2s-120': 0xb24f,\r\n  'blake2s-128': 0xb250,\r\n  'blake2s-136': 0xb251,\r\n  'blake2s-144': 0xb252,\r\n  'blake2s-152': 0xb253,\r\n  'blake2s-160': 0xb254,\r\n  'blake2s-168': 0xb255,\r\n  'blake2s-176': 0xb256,\r\n  'blake2s-184': 0xb257,\r\n  'blake2s-192': 0xb258,\r\n  'blake2s-200': 0xb259,\r\n  'blake2s-208': 0xb25a,\r\n  'blake2s-216': 0xb25b,\r\n  'blake2s-224': 0xb25c,\r\n  'blake2s-232': 0xb25d,\r\n  'blake2s-240': 0xb25e,\r\n  'blake2s-248': 0xb25f,\r\n  'blake2s-256': 0xb260,\r\n  'skein256-8': 0xb301,\r\n  'skein256-16': 0xb302,\r\n  'skein256-24': 0xb303,\r\n  'skein256-32': 0xb304,\r\n  'skein256-40': 0xb305,\r\n  'skein256-48': 0xb306,\r\n  'skein256-56': 0xb307,\r\n  'skein256-64': 0xb308,\r\n  'skein256-72': 0xb309,\r\n  'skein256-80': 0xb30a,\r\n  'skein256-88': 0xb30b,\r\n  'skein256-96': 0xb30c,\r\n  'skein256-104': 0xb30d,\r\n  'skein256-112': 0xb30e,\r\n  'skein256-120': 0xb30f,\r\n  'skein256-128': 0xb310,\r\n  'skein256-136': 0xb311,\r\n  'skein256-144': 0xb312,\r\n  'skein256-152': 0xb313,\r\n  'skein256-160': 0xb314,\r\n  'skein256-168': 0xb315,\r\n  'skein256-176': 0xb316,\r\n  'skein256-184': 0xb317,\r\n  'skein256-192': 0xb318,\r\n  'skein256-200': 0xb319,\r\n  'skein256-208': 0xb31a,\r\n  'skein256-216': 0xb31b,\r\n  'skein256-224': 0xb31c,\r\n  'skein256-232': 0xb31d,\r\n  'skein256-240': 0xb31e,\r\n  'skein256-248': 0xb31f,\r\n  'skein256-256': 0xb320,\r\n  'skein512-8': 0xb321,\r\n  'skein512-16': 0xb322,\r\n  'skein512-24': 0xb323,\r\n  'skein512-32': 0xb324,\r\n  'skein512-40': 0xb325,\r\n  'skein512-48': 0xb326,\r\n  'skein512-56': 0xb327,\r\n  'skein512-64': 0xb328,\r\n  'skein512-72': 0xb329,\r\n  'skein512-80': 0xb32a,\r\n  'skein512-88': 0xb32b,\r\n  'skein512-96': 0xb32c,\r\n  'skein512-104': 0xb32d,\r\n  'skein512-112': 0xb32e,\r\n  'skein512-120': 0xb32f,\r\n  'skein512-128': 0xb330,\r\n  'skein512-136': 0xb331,\r\n  'skein512-144': 0xb332,\r\n  'skein512-152': 0xb333,\r\n  'skein512-160': 0xb334,\r\n  'skein512-168': 0xb335,\r\n  'skein512-176': 0xb336,\r\n  'skein512-184': 0xb337,\r\n  'skein512-192': 0xb338,\r\n  'skein512-200': 0xb339,\r\n  'skein512-208': 0xb33a,\r\n  'skein512-216': 0xb33b,\r\n  'skein512-224': 0xb33c,\r\n  'skein512-232': 0xb33d,\r\n  'skein512-240': 0xb33e,\r\n  'skein512-248': 0xb33f,\r\n  'skein512-256': 0xb340,\r\n  'skein512-264': 0xb341,\r\n  'skein512-272': 0xb342,\r\n  'skein512-280': 0xb343,\r\n  'skein512-288': 0xb344,\r\n  'skein512-296': 0xb345,\r\n  'skein512-304': 0xb346,\r\n  'skein512-312': 0xb347,\r\n  'skein512-320': 0xb348,\r\n  'skein512-328': 0xb349,\r\n  'skein512-336': 0xb34a,\r\n  'skein512-344': 0xb34b,\r\n  'skein512-352': 0xb34c,\r\n  'skein512-360': 0xb34d,\r\n  'skein512-368': 0xb34e,\r\n  'skein512-376': 0xb34f,\r\n  'skein512-384': 0xb350,\r\n  'skein512-392': 0xb351,\r\n  'skein512-400': 0xb352,\r\n  'skein512-408': 0xb353,\r\n  'skein512-416': 0xb354,\r\n  'skein512-424': 0xb355,\r\n  'skein512-432': 0xb356,\r\n  'skein512-440': 0xb357,\r\n  'skein512-448': 0xb358,\r\n  'skein512-456': 0xb359,\r\n  'skein512-464': 0xb35a,\r\n  'skein512-472': 0xb35b,\r\n  'skein512-480': 0xb35c,\r\n  'skein512-488': 0xb35d,\r\n  'skein512-496': 0xb35e,\r\n  'skein512-504': 0xb35f,\r\n  'skein512-512': 0xb360,\r\n  'skein1024-8': 0xb361,\r\n  'skein1024-16': 0xb362,\r\n  'skein1024-24': 0xb363,\r\n  'skein1024-32': 0xb364,\r\n  'skein1024-40': 0xb365,\r\n  'skein1024-48': 0xb366,\r\n  'skein1024-56': 0xb367,\r\n  'skein1024-64': 0xb368,\r\n  'skein1024-72': 0xb369,\r\n  'skein1024-80': 0xb36a,\r\n  'skein1024-88': 0xb36b,\r\n  'skein1024-96': 0xb36c,\r\n  'skein1024-104': 0xb36d,\r\n  'skein1024-112': 0xb36e,\r\n  'skein1024-120': 0xb36f,\r\n  'skein1024-128': 0xb370,\r\n  'skein1024-136': 0xb371,\r\n  'skein1024-144': 0xb372,\r\n  'skein1024-152': 0xb373,\r\n  'skein1024-160': 0xb374,\r\n  'skein1024-168': 0xb375,\r\n  'skein1024-176': 0xb376,\r\n  'skein1024-184': 0xb377,\r\n  'skein1024-192': 0xb378,\r\n  'skein1024-200': 0xb379,\r\n  'skein1024-208': 0xb37a,\r\n  'skein1024-216': 0xb37b,\r\n  'skein1024-224': 0xb37c,\r\n  'skein1024-232': 0xb37d,\r\n  'skein1024-240': 0xb37e,\r\n  'skein1024-248': 0xb37f,\r\n  'skein1024-256': 0xb380,\r\n  'skein1024-264': 0xb381,\r\n  'skein1024-272': 0xb382,\r\n  'skein1024-280': 0xb383,\r\n  'skein1024-288': 0xb384,\r\n  'skein1024-296': 0xb385,\r\n  'skein1024-304': 0xb386,\r\n  'skein1024-312': 0xb387,\r\n  'skein1024-320': 0xb388,\r\n  'skein1024-328': 0xb389,\r\n  'skein1024-336': 0xb38a,\r\n  'skein1024-344': 0xb38b,\r\n  'skein1024-352': 0xb38c,\r\n  'skein1024-360': 0xb38d,\r\n  'skein1024-368': 0xb38e,\r\n  'skein1024-376': 0xb38f,\r\n  'skein1024-384': 0xb390,\r\n  'skein1024-392': 0xb391,\r\n  'skein1024-400': 0xb392,\r\n  'skein1024-408': 0xb393,\r\n  'skein1024-416': 0xb394,\r\n  'skein1024-424': 0xb395,\r\n  'skein1024-432': 0xb396,\r\n  'skein1024-440': 0xb397,\r\n  'skein1024-448': 0xb398,\r\n  'skein1024-456': 0xb399,\r\n  'skein1024-464': 0xb39a,\r\n  'skein1024-472': 0xb39b,\r\n  'skein1024-480': 0xb39c,\r\n  'skein1024-488': 0xb39d,\r\n  'skein1024-496': 0xb39e,\r\n  'skein1024-504': 0xb39f,\r\n  'skein1024-512': 0xb3a0,\r\n  'skein1024-520': 0xb3a1,\r\n  'skein1024-528': 0xb3a2,\r\n  'skein1024-536': 0xb3a3,\r\n  'skein1024-544': 0xb3a4,\r\n  'skein1024-552': 0xb3a5,\r\n  'skein1024-560': 0xb3a6,\r\n  'skein1024-568': 0xb3a7,\r\n  'skein1024-576': 0xb3a8,\r\n  'skein1024-584': 0xb3a9,\r\n  'skein1024-592': 0xb3aa,\r\n  'skein1024-600': 0xb3ab,\r\n  'skein1024-608': 0xb3ac,\r\n  'skein1024-616': 0xb3ad,\r\n  'skein1024-624': 0xb3ae,\r\n  'skein1024-632': 0xb3af,\r\n  'skein1024-640': 0xb3b0,\r\n  'skein1024-648': 0xb3b1,\r\n  'skein1024-656': 0xb3b2,\r\n  'skein1024-664': 0xb3b3,\r\n  'skein1024-672': 0xb3b4,\r\n  'skein1024-680': 0xb3b5,\r\n  'skein1024-688': 0xb3b6,\r\n  'skein1024-696': 0xb3b7,\r\n  'skein1024-704': 0xb3b8,\r\n  'skein1024-712': 0xb3b9,\r\n  'skein1024-720': 0xb3ba,\r\n  'skein1024-728': 0xb3bb,\r\n  'skein1024-736': 0xb3bc,\r\n  'skein1024-744': 0xb3bd,\r\n  'skein1024-752': 0xb3be,\r\n  'skein1024-760': 0xb3bf,\r\n  'skein1024-768': 0xb3c0,\r\n  'skein1024-776': 0xb3c1,\r\n  'skein1024-784': 0xb3c2,\r\n  'skein1024-792': 0xb3c3,\r\n  'skein1024-800': 0xb3c4,\r\n  'skein1024-808': 0xb3c5,\r\n  'skein1024-816': 0xb3c6,\r\n  'skein1024-824': 0xb3c7,\r\n  'skein1024-832': 0xb3c8,\r\n  'skein1024-840': 0xb3c9,\r\n  'skein1024-848': 0xb3ca,\r\n  'skein1024-856': 0xb3cb,\r\n  'skein1024-864': 0xb3cc,\r\n  'skein1024-872': 0xb3cd,\r\n  'skein1024-880': 0xb3ce,\r\n  'skein1024-888': 0xb3cf,\r\n  'skein1024-896': 0xb3d0,\r\n  'skein1024-904': 0xb3d1,\r\n  'skein1024-912': 0xb3d2,\r\n  'skein1024-920': 0xb3d3,\r\n  'skein1024-928': 0xb3d4,\r\n  'skein1024-936': 0xb3d5,\r\n  'skein1024-944': 0xb3d6,\r\n  'skein1024-952': 0xb3d7,\r\n  'skein1024-960': 0xb3d8,\r\n  'skein1024-968': 0xb3d9,\r\n  'skein1024-976': 0xb3da,\r\n  'skein1024-984': 0xb3db,\r\n  'skein1024-992': 0xb3dc,\r\n  'skein1024-1000': 0xb3dd,\r\n  'skein1024-1008': 0xb3de,\r\n  'skein1024-1016': 0xb3df,\r\n  'skein1024-1024': 0xb3e0,\r\n  'poseidon-bls12_381-a2-fc1': 0xb401,\r\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402\r\n});\r\n\r\nvar constants$1 = { names: names$2 };\r\n\r\nconst { names: names$3 } = constants_1;\r\nconst { TextEncoder: TextEncoder$2 } = lib;\r\nconst utf8Encoder = new TextEncoder$2();\r\n\r\n/**\r\n * Interperets each character in a string as a byte and\r\n * returns a Uint8Array of those bytes.\r\n *\r\n * @param {String} string The string to turn into an array\r\n * @returns {Uint8Array}\r\n */\r\nfunction asciiStringToUint8Array (string) {\r\n  const array = new Uint8Array(string.length);\r\n\r\n  for (let i = 0; i < string.length; i++) {\r\n    array[i] = string.charCodeAt(i);\r\n  }\r\n\r\n  return array\r\n}\r\n\r\n/**\r\n * Create a `Uint8Array` from the passed string\r\n *\r\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\r\n *\r\n * Also `ascii` which is similar to node's 'binary' encoding.\r\n *\r\n * @param {String} string\r\n * @param {String} [encoding=utf8] utf8, base16, base64, base64urlpad, etc\r\n * @returns {Uint8Array}\r\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\r\n */\r\nfunction fromString (string, encoding = 'utf8') {\r\n  if (encoding === 'utf8' || encoding === 'utf-8') {\r\n    return utf8Encoder.encode(string)\r\n  }\r\n\r\n  if (encoding === 'ascii') {\r\n    return asciiStringToUint8Array(string)\r\n  }\r\n\r\n  const codec = names$3[encoding];\r\n\r\n  if (!codec) {\r\n    throw new Error('Unknown base')\r\n  }\r\n\r\n  return codec.decode(string)\r\n}\r\n\r\nvar fromString_1 = fromString;\r\n\r\n/**\r\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\r\n *\r\n * @param {Array<ArrayLike<number>>} arrays\r\n * @param {Number} length\r\n * @returns {Uint8Array}\r\n */\r\nfunction concat$1 (arrays, length) {\r\n  if (!length) {\r\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\r\n  }\r\n\r\n  const output = new Uint8Array(length);\r\n  let offset = 0;\r\n\r\n  for (const arr of arrays) {\r\n    output.set(arr, offset);\r\n    offset += arr.length;\r\n  }\r\n\r\n  return output\r\n}\r\n\r\nvar concat_1 = concat$1;\r\n\r\n/**\r\n * Multihash implementation in JavaScript.\r\n *\r\n * @module multihash\r\n */\r\n\r\n\r\n\r\nconst { names: names$4 } = constants$1;\r\n\r\n\r\n\r\n\r\nconst codes$1 = /** @type {import('./types').CodeNameMap} */({});\r\n\r\n// eslint-disable-next-line guard-for-in\r\nfor (const key in names$4) {\r\n  codes$1[names$4[key]] = key;\r\n}\r\n\r\n/**\r\n * Convert the given multihash to a hex encoded string.\r\n *\r\n * @param {Uint8Array} hash\r\n * @returns {string}\r\n */\r\nfunction toHexString (hash) {\r\n  if (!(hash instanceof Uint8Array)) {\r\n    throw new Error('must be passed a Uint8Array')\r\n  }\r\n\r\n  return toString_1(hash, 'base16')\r\n}\r\n\r\n/**\r\n * Convert the given hex encoded string to a multihash.\r\n *\r\n * @param {string} hash\r\n * @returns {Uint8Array}\r\n */\r\nfunction fromHexString (hash) {\r\n  return fromString_1(hash, 'base16')\r\n}\r\n\r\n/**\r\n * Convert the given multihash to a base58 encoded string.\r\n *\r\n * @param {Uint8Array} hash\r\n * @returns {string}\r\n */\r\nfunction toB58String (hash) {\r\n  if (!(hash instanceof Uint8Array)) {\r\n    throw new Error('must be passed a Uint8Array')\r\n  }\r\n\r\n  return toString_1(src$1.encode('base58btc', hash)).slice(1)\r\n}\r\n\r\n/**\r\n * Convert the given base58 encoded string to a multihash.\r\n *\r\n * @param {string|Uint8Array} hash\r\n * @returns {Uint8Array}\r\n */\r\nfunction fromB58String (hash) {\r\n  const encoded = hash instanceof Uint8Array\r\n    ? toString_1(hash)\r\n    : hash;\r\n\r\n  return src$1.decode('z' + encoded)\r\n}\r\n\r\n/**\r\n * Decode a hash from the given multihash.\r\n *\r\n * @param {Uint8Array} bytes\r\n * @returns {{code: HashCode, name: HashName, length: number, digest: Uint8Array}} result\r\n */\r\nfunction decode$2 (bytes) {\r\n  if (!(bytes instanceof Uint8Array)) {\r\n    throw new Error('multihash must be a Uint8Array')\r\n  }\r\n\r\n  if (bytes.length < 2) {\r\n    throw new Error('multihash too short. must be > 2 bytes.')\r\n  }\r\n\r\n  const code = varint.decode(bytes);\r\n  if (!isValidCode(code)) {\r\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\r\n  }\r\n  bytes = bytes.slice(varint.decode.bytes);\r\n\r\n  const len = varint.decode(bytes);\r\n  if (len < 0) {\r\n    throw new Error(`multihash invalid length: ${len}`)\r\n  }\r\n  bytes = bytes.slice(varint.decode.bytes);\r\n\r\n  if (bytes.length !== len) {\r\n    throw new Error(`multihash length inconsistent: 0x${toString_1(bytes, 'base16')}`)\r\n  }\r\n\r\n  return {\r\n    code,\r\n    name: codes$1[code],\r\n    length: len,\r\n    digest: bytes\r\n  }\r\n}\r\n\r\n/**\r\n * Encode a hash digest along with the specified function code.\r\n *\r\n * > **Note:** the length is derived from the length of the digest itself.\r\n *\r\n * @param {Uint8Array} digest\r\n * @param {HashName | HashCode} code\r\n * @param {number} [length]\r\n * @returns {Uint8Array}\r\n */\r\nfunction encode$2 (digest, code, length) {\r\n  if (!digest || code === undefined) {\r\n    throw new Error('multihash encode requires at least two args: digest, code')\r\n  }\r\n\r\n  // ensure it's a hashfunction code.\r\n  const hashfn = coerceCode(code);\r\n\r\n  if (!(digest instanceof Uint8Array)) {\r\n    throw new Error('digest should be a Uint8Array')\r\n  }\r\n\r\n  if (length == null) {\r\n    length = digest.length;\r\n  }\r\n\r\n  if (length && digest.length !== length) {\r\n    throw new Error('digest length should be equal to specified length.')\r\n  }\r\n\r\n  const hash = varint.encode(hashfn);\r\n  const len = varint.encode(length);\r\n  return concat_1([hash, len, digest], hash.length + len.length + digest.length)\r\n}\r\n\r\n/**\r\n * Converts a hash function name into the matching code.\r\n * If passed a number it will return the number if it's a valid code.\r\n *\r\n * @param {HashName | number} name\r\n * @returns {number}\r\n */\r\nfunction coerceCode (name) {\r\n  let code = name;\r\n\r\n  if (typeof name === 'string') {\r\n    if (names$4[name] === undefined) {\r\n      throw new Error(`Unrecognized hash function named: ${name}`)\r\n    }\r\n    code = names$4[name];\r\n  }\r\n\r\n  if (typeof code !== 'number') {\r\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\r\n  }\r\n\r\n  if (codes$1[code] === undefined && !isAppCode(code)) {\r\n    throw new Error(`Unrecognized function code: ${code}`)\r\n  }\r\n\r\n  return code\r\n}\r\n\r\n/**\r\n * Checks if a code is part of the app range\r\n *\r\n * @param {number} code\r\n * @returns {boolean}\r\n */\r\nfunction isAppCode (code) {\r\n  return code > 0 && code < 0x10\r\n}\r\n\r\n/**\r\n * Checks whether a multihash code is valid.\r\n *\r\n * @param {HashCode} code\r\n * @returns {boolean}\r\n */\r\nfunction isValidCode (code) {\r\n  if (isAppCode(code)) {\r\n    return true\r\n  }\r\n\r\n  if (codes$1[code]) {\r\n    return true\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\r\n *\r\n * @param {Uint8Array} multihash\r\n * @returns {void}\r\n * @throws {Error}\r\n */\r\nfunction validate (multihash) {\r\n  decode$2(multihash); // throws if bad.\r\n}\r\n\r\n/**\r\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\r\n *\r\n * @param {Uint8Array} multihash\r\n * @returns {Uint8Array}\r\n * @throws {Error}\r\n */\r\nfunction prefix (multihash) {\r\n  validate(multihash);\r\n\r\n  return multihash.subarray(0, 2)\r\n}\r\n\r\nvar src$2 = {\r\n  names: names$4,\r\n  codes: Object.freeze(codes$1),\r\n  toHexString,\r\n  fromHexString,\r\n  toB58String,\r\n  fromB58String,\r\n  decode: decode$2,\r\n  encode: encode$2,\r\n  coerceCode,\r\n  isAppCode,\r\n  validate,\r\n  prefix,\r\n  isValidCode\r\n};\r\n\r\n// DO NOT CHANGE THIS FILE. IT IS GENERATED BY tools/update-table.js\r\n\r\n/**\r\n * @type {import('./generated-types').NameNumberMap}\r\n */\r\nconst baseTable = Object.freeze({\r\n  'identity': 0x00,\r\n  'cidv1': 0x01,\r\n  'cidv2': 0x02,\r\n  'cidv3': 0x03,\r\n  'ip4': 0x04,\r\n  'tcp': 0x06,\r\n  'sha1': 0x11,\r\n  'sha2-256': 0x12,\r\n  'sha2-512': 0x13,\r\n  'sha3-512': 0x14,\r\n  'sha3-384': 0x15,\r\n  'sha3-256': 0x16,\r\n  'sha3-224': 0x17,\r\n  'shake-128': 0x18,\r\n  'shake-256': 0x19,\r\n  'keccak-224': 0x1a,\r\n  'keccak-256': 0x1b,\r\n  'keccak-384': 0x1c,\r\n  'keccak-512': 0x1d,\r\n  'blake3': 0x1e,\r\n  'dccp': 0x21,\r\n  'murmur3-128': 0x22,\r\n  'murmur3-32': 0x23,\r\n  'ip6': 0x29,\r\n  'ip6zone': 0x2a,\r\n  'path': 0x2f,\r\n  'multicodec': 0x30,\r\n  'multihash': 0x31,\r\n  'multiaddr': 0x32,\r\n  'multibase': 0x33,\r\n  'dns': 0x35,\r\n  'dns4': 0x36,\r\n  'dns6': 0x37,\r\n  'dnsaddr': 0x38,\r\n  'protobuf': 0x50,\r\n  'cbor': 0x51,\r\n  'raw': 0x55,\r\n  'dbl-sha2-256': 0x56,\r\n  'rlp': 0x60,\r\n  'bencode': 0x63,\r\n  'dag-pb': 0x70,\r\n  'dag-cbor': 0x71,\r\n  'libp2p-key': 0x72,\r\n  'git-raw': 0x78,\r\n  'torrent-info': 0x7b,\r\n  'torrent-file': 0x7c,\r\n  'leofcoin-block': 0x81,\r\n  'leofcoin-tx': 0x82,\r\n  'leofcoin-pr': 0x83,\r\n  'sctp': 0x84,\r\n  'dag-jose': 0x85,\r\n  'dag-cose': 0x86,\r\n  'eth-block': 0x90,\r\n  'eth-block-list': 0x91,\r\n  'eth-tx-trie': 0x92,\r\n  'eth-tx': 0x93,\r\n  'eth-tx-receipt-trie': 0x94,\r\n  'eth-tx-receipt': 0x95,\r\n  'eth-state-trie': 0x96,\r\n  'eth-account-snapshot': 0x97,\r\n  'eth-storage-trie': 0x98,\r\n  'bitcoin-block': 0xb0,\r\n  'bitcoin-tx': 0xb1,\r\n  'bitcoin-witness-commitment': 0xb2,\r\n  'zcash-block': 0xc0,\r\n  'zcash-tx': 0xc1,\r\n  'docid': 0xce,\r\n  'stellar-block': 0xd0,\r\n  'stellar-tx': 0xd1,\r\n  'md4': 0xd4,\r\n  'md5': 0xd5,\r\n  'bmt': 0xd6,\r\n  'decred-block': 0xe0,\r\n  'decred-tx': 0xe1,\r\n  'ipld-ns': 0xe2,\r\n  'ipfs-ns': 0xe3,\r\n  'swarm-ns': 0xe4,\r\n  'ipns-ns': 0xe5,\r\n  'zeronet': 0xe6,\r\n  'secp256k1-pub': 0xe7,\r\n  'bls12_381-g1-pub': 0xea,\r\n  'bls12_381-g2-pub': 0xeb,\r\n  'x25519-pub': 0xec,\r\n  'ed25519-pub': 0xed,\r\n  'bls12_381-g1g2-pub': 0xee,\r\n  'dash-block': 0xf0,\r\n  'dash-tx': 0xf1,\r\n  'swarm-manifest': 0xfa,\r\n  'swarm-feed': 0xfb,\r\n  'udp': 0x0111,\r\n  'p2p-webrtc-star': 0x0113,\r\n  'p2p-webrtc-direct': 0x0114,\r\n  'p2p-stardust': 0x0115,\r\n  'p2p-circuit': 0x0122,\r\n  'dag-json': 0x0129,\r\n  'udt': 0x012d,\r\n  'utp': 0x012e,\r\n  'unix': 0x0190,\r\n  'p2p': 0x01a5,\r\n  'ipfs': 0x01a5,\r\n  'https': 0x01bb,\r\n  'onion': 0x01bc,\r\n  'onion3': 0x01bd,\r\n  'garlic64': 0x01be,\r\n  'garlic32': 0x01bf,\r\n  'tls': 0x01c0,\r\n  'quic': 0x01cc,\r\n  'ws': 0x01dd,\r\n  'wss': 0x01de,\r\n  'p2p-websocket-star': 0x01df,\r\n  'http': 0x01e0,\r\n  'json': 0x0200,\r\n  'messagepack': 0x0201,\r\n  'libp2p-peer-record': 0x0301,\r\n  'sha2-256-trunc254-padded': 0x1012,\r\n  'ripemd-128': 0x1052,\r\n  'ripemd-160': 0x1053,\r\n  'ripemd-256': 0x1054,\r\n  'ripemd-320': 0x1055,\r\n  'x11': 0x1100,\r\n  'p256-pub': 0x1200,\r\n  'p384-pub': 0x1201,\r\n  'p521-pub': 0x1202,\r\n  'ed448-pub': 0x1203,\r\n  'x448-pub': 0x1204,\r\n  'ed25519-priv': 0x1300,\r\n  'kangarootwelve': 0x1d01,\r\n  'sm3-256': 0x534d,\r\n  'blake2b-8': 0xb201,\r\n  'blake2b-16': 0xb202,\r\n  'blake2b-24': 0xb203,\r\n  'blake2b-32': 0xb204,\r\n  'blake2b-40': 0xb205,\r\n  'blake2b-48': 0xb206,\r\n  'blake2b-56': 0xb207,\r\n  'blake2b-64': 0xb208,\r\n  'blake2b-72': 0xb209,\r\n  'blake2b-80': 0xb20a,\r\n  'blake2b-88': 0xb20b,\r\n  'blake2b-96': 0xb20c,\r\n  'blake2b-104': 0xb20d,\r\n  'blake2b-112': 0xb20e,\r\n  'blake2b-120': 0xb20f,\r\n  'blake2b-128': 0xb210,\r\n  'blake2b-136': 0xb211,\r\n  'blake2b-144': 0xb212,\r\n  'blake2b-152': 0xb213,\r\n  'blake2b-160': 0xb214,\r\n  'blake2b-168': 0xb215,\r\n  'blake2b-176': 0xb216,\r\n  'blake2b-184': 0xb217,\r\n  'blake2b-192': 0xb218,\r\n  'blake2b-200': 0xb219,\r\n  'blake2b-208': 0xb21a,\r\n  'blake2b-216': 0xb21b,\r\n  'blake2b-224': 0xb21c,\r\n  'blake2b-232': 0xb21d,\r\n  'blake2b-240': 0xb21e,\r\n  'blake2b-248': 0xb21f,\r\n  'blake2b-256': 0xb220,\r\n  'blake2b-264': 0xb221,\r\n  'blake2b-272': 0xb222,\r\n  'blake2b-280': 0xb223,\r\n  'blake2b-288': 0xb224,\r\n  'blake2b-296': 0xb225,\r\n  'blake2b-304': 0xb226,\r\n  'blake2b-312': 0xb227,\r\n  'blake2b-320': 0xb228,\r\n  'blake2b-328': 0xb229,\r\n  'blake2b-336': 0xb22a,\r\n  'blake2b-344': 0xb22b,\r\n  'blake2b-352': 0xb22c,\r\n  'blake2b-360': 0xb22d,\r\n  'blake2b-368': 0xb22e,\r\n  'blake2b-376': 0xb22f,\r\n  'blake2b-384': 0xb230,\r\n  'blake2b-392': 0xb231,\r\n  'blake2b-400': 0xb232,\r\n  'blake2b-408': 0xb233,\r\n  'blake2b-416': 0xb234,\r\n  'blake2b-424': 0xb235,\r\n  'blake2b-432': 0xb236,\r\n  'blake2b-440': 0xb237,\r\n  'blake2b-448': 0xb238,\r\n  'blake2b-456': 0xb239,\r\n  'blake2b-464': 0xb23a,\r\n  'blake2b-472': 0xb23b,\r\n  'blake2b-480': 0xb23c,\r\n  'blake2b-488': 0xb23d,\r\n  'blake2b-496': 0xb23e,\r\n  'blake2b-504': 0xb23f,\r\n  'blake2b-512': 0xb240,\r\n  'blake2s-8': 0xb241,\r\n  'blake2s-16': 0xb242,\r\n  'blake2s-24': 0xb243,\r\n  'blake2s-32': 0xb244,\r\n  'blake2s-40': 0xb245,\r\n  'blake2s-48': 0xb246,\r\n  'blake2s-56': 0xb247,\r\n  'blake2s-64': 0xb248,\r\n  'blake2s-72': 0xb249,\r\n  'blake2s-80': 0xb24a,\r\n  'blake2s-88': 0xb24b,\r\n  'blake2s-96': 0xb24c,\r\n  'blake2s-104': 0xb24d,\r\n  'blake2s-112': 0xb24e,\r\n  'blake2s-120': 0xb24f,\r\n  'blake2s-128': 0xb250,\r\n  'blake2s-136': 0xb251,\r\n  'blake2s-144': 0xb252,\r\n  'blake2s-152': 0xb253,\r\n  'blake2s-160': 0xb254,\r\n  'blake2s-168': 0xb255,\r\n  'blake2s-176': 0xb256,\r\n  'blake2s-184': 0xb257,\r\n  'blake2s-192': 0xb258,\r\n  'blake2s-200': 0xb259,\r\n  'blake2s-208': 0xb25a,\r\n  'blake2s-216': 0xb25b,\r\n  'blake2s-224': 0xb25c,\r\n  'blake2s-232': 0xb25d,\r\n  'blake2s-240': 0xb25e,\r\n  'blake2s-248': 0xb25f,\r\n  'blake2s-256': 0xb260,\r\n  'skein256-8': 0xb301,\r\n  'skein256-16': 0xb302,\r\n  'skein256-24': 0xb303,\r\n  'skein256-32': 0xb304,\r\n  'skein256-40': 0xb305,\r\n  'skein256-48': 0xb306,\r\n  'skein256-56': 0xb307,\r\n  'skein256-64': 0xb308,\r\n  'skein256-72': 0xb309,\r\n  'skein256-80': 0xb30a,\r\n  'skein256-88': 0xb30b,\r\n  'skein256-96': 0xb30c,\r\n  'skein256-104': 0xb30d,\r\n  'skein256-112': 0xb30e,\r\n  'skein256-120': 0xb30f,\r\n  'skein256-128': 0xb310,\r\n  'skein256-136': 0xb311,\r\n  'skein256-144': 0xb312,\r\n  'skein256-152': 0xb313,\r\n  'skein256-160': 0xb314,\r\n  'skein256-168': 0xb315,\r\n  'skein256-176': 0xb316,\r\n  'skein256-184': 0xb317,\r\n  'skein256-192': 0xb318,\r\n  'skein256-200': 0xb319,\r\n  'skein256-208': 0xb31a,\r\n  'skein256-216': 0xb31b,\r\n  'skein256-224': 0xb31c,\r\n  'skein256-232': 0xb31d,\r\n  'skein256-240': 0xb31e,\r\n  'skein256-248': 0xb31f,\r\n  'skein256-256': 0xb320,\r\n  'skein512-8': 0xb321,\r\n  'skein512-16': 0xb322,\r\n  'skein512-24': 0xb323,\r\n  'skein512-32': 0xb324,\r\n  'skein512-40': 0xb325,\r\n  'skein512-48': 0xb326,\r\n  'skein512-56': 0xb327,\r\n  'skein512-64': 0xb328,\r\n  'skein512-72': 0xb329,\r\n  'skein512-80': 0xb32a,\r\n  'skein512-88': 0xb32b,\r\n  'skein512-96': 0xb32c,\r\n  'skein512-104': 0xb32d,\r\n  'skein512-112': 0xb32e,\r\n  'skein512-120': 0xb32f,\r\n  'skein512-128': 0xb330,\r\n  'skein512-136': 0xb331,\r\n  'skein512-144': 0xb332,\r\n  'skein512-152': 0xb333,\r\n  'skein512-160': 0xb334,\r\n  'skein512-168': 0xb335,\r\n  'skein512-176': 0xb336,\r\n  'skein512-184': 0xb337,\r\n  'skein512-192': 0xb338,\r\n  'skein512-200': 0xb339,\r\n  'skein512-208': 0xb33a,\r\n  'skein512-216': 0xb33b,\r\n  'skein512-224': 0xb33c,\r\n  'skein512-232': 0xb33d,\r\n  'skein512-240': 0xb33e,\r\n  'skein512-248': 0xb33f,\r\n  'skein512-256': 0xb340,\r\n  'skein512-264': 0xb341,\r\n  'skein512-272': 0xb342,\r\n  'skein512-280': 0xb343,\r\n  'skein512-288': 0xb344,\r\n  'skein512-296': 0xb345,\r\n  'skein512-304': 0xb346,\r\n  'skein512-312': 0xb347,\r\n  'skein512-320': 0xb348,\r\n  'skein512-328': 0xb349,\r\n  'skein512-336': 0xb34a,\r\n  'skein512-344': 0xb34b,\r\n  'skein512-352': 0xb34c,\r\n  'skein512-360': 0xb34d,\r\n  'skein512-368': 0xb34e,\r\n  'skein512-376': 0xb34f,\r\n  'skein512-384': 0xb350,\r\n  'skein512-392': 0xb351,\r\n  'skein512-400': 0xb352,\r\n  'skein512-408': 0xb353,\r\n  'skein512-416': 0xb354,\r\n  'skein512-424': 0xb355,\r\n  'skein512-432': 0xb356,\r\n  'skein512-440': 0xb357,\r\n  'skein512-448': 0xb358,\r\n  'skein512-456': 0xb359,\r\n  'skein512-464': 0xb35a,\r\n  'skein512-472': 0xb35b,\r\n  'skein512-480': 0xb35c,\r\n  'skein512-488': 0xb35d,\r\n  'skein512-496': 0xb35e,\r\n  'skein512-504': 0xb35f,\r\n  'skein512-512': 0xb360,\r\n  'skein1024-8': 0xb361,\r\n  'skein1024-16': 0xb362,\r\n  'skein1024-24': 0xb363,\r\n  'skein1024-32': 0xb364,\r\n  'skein1024-40': 0xb365,\r\n  'skein1024-48': 0xb366,\r\n  'skein1024-56': 0xb367,\r\n  'skein1024-64': 0xb368,\r\n  'skein1024-72': 0xb369,\r\n  'skein1024-80': 0xb36a,\r\n  'skein1024-88': 0xb36b,\r\n  'skein1024-96': 0xb36c,\r\n  'skein1024-104': 0xb36d,\r\n  'skein1024-112': 0xb36e,\r\n  'skein1024-120': 0xb36f,\r\n  'skein1024-128': 0xb370,\r\n  'skein1024-136': 0xb371,\r\n  'skein1024-144': 0xb372,\r\n  'skein1024-152': 0xb373,\r\n  'skein1024-160': 0xb374,\r\n  'skein1024-168': 0xb375,\r\n  'skein1024-176': 0xb376,\r\n  'skein1024-184': 0xb377,\r\n  'skein1024-192': 0xb378,\r\n  'skein1024-200': 0xb379,\r\n  'skein1024-208': 0xb37a,\r\n  'skein1024-216': 0xb37b,\r\n  'skein1024-224': 0xb37c,\r\n  'skein1024-232': 0xb37d,\r\n  'skein1024-240': 0xb37e,\r\n  'skein1024-248': 0xb37f,\r\n  'skein1024-256': 0xb380,\r\n  'skein1024-264': 0xb381,\r\n  'skein1024-272': 0xb382,\r\n  'skein1024-280': 0xb383,\r\n  'skein1024-288': 0xb384,\r\n  'skein1024-296': 0xb385,\r\n  'skein1024-304': 0xb386,\r\n  'skein1024-312': 0xb387,\r\n  'skein1024-320': 0xb388,\r\n  'skein1024-328': 0xb389,\r\n  'skein1024-336': 0xb38a,\r\n  'skein1024-344': 0xb38b,\r\n  'skein1024-352': 0xb38c,\r\n  'skein1024-360': 0xb38d,\r\n  'skein1024-368': 0xb38e,\r\n  'skein1024-376': 0xb38f,\r\n  'skein1024-384': 0xb390,\r\n  'skein1024-392': 0xb391,\r\n  'skein1024-400': 0xb392,\r\n  'skein1024-408': 0xb393,\r\n  'skein1024-416': 0xb394,\r\n  'skein1024-424': 0xb395,\r\n  'skein1024-432': 0xb396,\r\n  'skein1024-440': 0xb397,\r\n  'skein1024-448': 0xb398,\r\n  'skein1024-456': 0xb399,\r\n  'skein1024-464': 0xb39a,\r\n  'skein1024-472': 0xb39b,\r\n  'skein1024-480': 0xb39c,\r\n  'skein1024-488': 0xb39d,\r\n  'skein1024-496': 0xb39e,\r\n  'skein1024-504': 0xb39f,\r\n  'skein1024-512': 0xb3a0,\r\n  'skein1024-520': 0xb3a1,\r\n  'skein1024-528': 0xb3a2,\r\n  'skein1024-536': 0xb3a3,\r\n  'skein1024-544': 0xb3a4,\r\n  'skein1024-552': 0xb3a5,\r\n  'skein1024-560': 0xb3a6,\r\n  'skein1024-568': 0xb3a7,\r\n  'skein1024-576': 0xb3a8,\r\n  'skein1024-584': 0xb3a9,\r\n  'skein1024-592': 0xb3aa,\r\n  'skein1024-600': 0xb3ab,\r\n  'skein1024-608': 0xb3ac,\r\n  'skein1024-616': 0xb3ad,\r\n  'skein1024-624': 0xb3ae,\r\n  'skein1024-632': 0xb3af,\r\n  'skein1024-640': 0xb3b0,\r\n  'skein1024-648': 0xb3b1,\r\n  'skein1024-656': 0xb3b2,\r\n  'skein1024-664': 0xb3b3,\r\n  'skein1024-672': 0xb3b4,\r\n  'skein1024-680': 0xb3b5,\r\n  'skein1024-688': 0xb3b6,\r\n  'skein1024-696': 0xb3b7,\r\n  'skein1024-704': 0xb3b8,\r\n  'skein1024-712': 0xb3b9,\r\n  'skein1024-720': 0xb3ba,\r\n  'skein1024-728': 0xb3bb,\r\n  'skein1024-736': 0xb3bc,\r\n  'skein1024-744': 0xb3bd,\r\n  'skein1024-752': 0xb3be,\r\n  'skein1024-760': 0xb3bf,\r\n  'skein1024-768': 0xb3c0,\r\n  'skein1024-776': 0xb3c1,\r\n  'skein1024-784': 0xb3c2,\r\n  'skein1024-792': 0xb3c3,\r\n  'skein1024-800': 0xb3c4,\r\n  'skein1024-808': 0xb3c5,\r\n  'skein1024-816': 0xb3c6,\r\n  'skein1024-824': 0xb3c7,\r\n  'skein1024-832': 0xb3c8,\r\n  'skein1024-840': 0xb3c9,\r\n  'skein1024-848': 0xb3ca,\r\n  'skein1024-856': 0xb3cb,\r\n  'skein1024-864': 0xb3cc,\r\n  'skein1024-872': 0xb3cd,\r\n  'skein1024-880': 0xb3ce,\r\n  'skein1024-888': 0xb3cf,\r\n  'skein1024-896': 0xb3d0,\r\n  'skein1024-904': 0xb3d1,\r\n  'skein1024-912': 0xb3d2,\r\n  'skein1024-920': 0xb3d3,\r\n  'skein1024-928': 0xb3d4,\r\n  'skein1024-936': 0xb3d5,\r\n  'skein1024-944': 0xb3d6,\r\n  'skein1024-952': 0xb3d7,\r\n  'skein1024-960': 0xb3d8,\r\n  'skein1024-968': 0xb3d9,\r\n  'skein1024-976': 0xb3da,\r\n  'skein1024-984': 0xb3db,\r\n  'skein1024-992': 0xb3dc,\r\n  'skein1024-1000': 0xb3dd,\r\n  'skein1024-1008': 0xb3de,\r\n  'skein1024-1016': 0xb3df,\r\n  'skein1024-1024': 0xb3e0,\r\n  'poseidon-bls12_381-a2-fc1': 0xb401,\r\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402,\r\n  'zeroxcert-imprint-256': 0xce11,\r\n  'fil-commitment-unsealed': 0xf101,\r\n  'fil-commitment-sealed': 0xf102,\r\n  'holochain-adr-v0': 0x807124,\r\n  'holochain-adr-v1': 0x817124,\r\n  'holochain-key-v0': 0x947124,\r\n  'holochain-key-v1': 0x957124,\r\n  'holochain-sig-v0': 0xa27124,\r\n  'holochain-sig-v1': 0xa37124,\r\n  'skynet-ns': 0xb19910\r\n});\r\n\r\nvar baseTable_1 = { baseTable };\r\n\r\n/** @typedef {import('./generated-types').CodecName} CodecName */\r\n/** @typedef {import('./generated-types').CodecNumber} CodecNumber */\r\n\r\nconst { baseTable: baseTable$1 } = baseTable_1;\r\n\r\n/**\r\n * @type {Map<CodecNumber,CodecName>}\r\n */\r\nconst nameTable = new Map();\r\n\r\nfor (const encodingName in baseTable$1) {\r\n  const code = baseTable$1[encodingName];\r\n  nameTable.set(code, /** @type {CodecName} */(encodingName));\r\n}\r\n\r\nvar intTable = Object.freeze(nameTable);\r\n\r\nvar util$2 = {\r\n  numberToUint8Array,\r\n  uint8ArrayToNumber,\r\n  varintUint8ArrayEncode,\r\n  varintEncode\r\n};\r\n\r\nfunction uint8ArrayToNumber (buf) {\r\n  return parseInt(toString_1(buf, 'base16'), 16)\r\n}\r\n\r\nfunction numberToUint8Array (num) {\r\n  let hexString = num.toString(16);\r\n  if (hexString.length % 2 === 1) {\r\n    hexString = '0' + hexString;\r\n  }\r\n  return fromString_1(hexString, 'base16')\r\n}\r\n\r\nfunction varintUint8ArrayEncode (input) {\r\n  return Uint8Array.from(varint.encode(uint8ArrayToNumber(input)))\r\n}\r\n\r\nfunction varintEncode (num) {\r\n  return Uint8Array.from(varint.encode(num))\r\n}\r\n\r\n/** @typedef {import('./generated-types').NameUint8ArrayMap} NameUint8ArrayMap */\r\n\r\nconst { baseTable: baseTable$2 } = baseTable_1;\r\nconst varintEncode$1 = util$2.varintEncode;\r\n\r\nconst varintTable = /** @type {NameUint8ArrayMap} */ ({});\r\n\r\nfor (const encodingName in baseTable$2) {\r\n  const code = baseTable$2[encodingName];\r\n  varintTable[encodingName] = varintEncode$1(code);\r\n}\r\n\r\nvar varintTable_1 = Object.freeze(varintTable);\r\n\r\n/** @typedef {import('./generated-types').ConstantNumberMap} ConstantNumberMap */\r\n\r\nconst { baseTable: baseTable$3 } = baseTable_1;\r\n\r\nconst constants$2 = /** @type {ConstantNumberMap} */({});\r\n\r\nfor (const [name, code] of Object.entries(baseTable$3)) {\r\n  const constant = name.toUpperCase().replace(/-/g, '_');\r\n  constants$2[constant] = code;\r\n}\r\n\r\nvar constants_1$1 = Object.freeze(constants$2);\r\n\r\n/** @typedef {import('./generated-types').CodecName} CodecName */\r\n/** @typedef {import('./generated-types').NumberNameMap} NumberNameMap */\r\n\r\nconst { baseTable: baseTable$4 } = baseTable_1;\r\n\r\nconst tableByCode = /** @type {NumberNameMap} */({});\r\n\r\nfor (const [name, code] of Object.entries(baseTable$4)) {\r\n  if (tableByCode[code] === undefined) {\r\n    tableByCode[code] = /** @type {CodecName} **/(name);\r\n  }\r\n}\r\n\r\nvar print = /** @type {NumberNameMap} */(Object.freeze(tableByCode));\r\n\r\n/**\r\n * Implementation of the multicodec specification.\r\n *\r\n * @module multicodec\r\n * @example\r\n * const multicodec = require('multicodec')\r\n *\r\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\r\n * // prefixedProtobuf 0x50...\r\n *\r\n */\r\n\r\n/** @typedef {import('./generated-types').CodecName} CodecName */\r\n/** @typedef {import('./generated-types').CodecNumber} CodecNumber */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Prefix a buffer with a multicodec-packed.\r\n *\r\n * @param {CodecName|Uint8Array} multicodecStrOrCode\r\n * @param {Uint8Array} data\r\n * @returns {Uint8Array}\r\n */\r\nfunction addPrefix (multicodecStrOrCode, data) {\r\n  let prefix;\r\n\r\n  if (multicodecStrOrCode instanceof Uint8Array) {\r\n    prefix = util$2.varintUint8ArrayEncode(multicodecStrOrCode);\r\n  } else {\r\n    if (varintTable_1[multicodecStrOrCode]) {\r\n      prefix = varintTable_1[multicodecStrOrCode];\r\n    } else {\r\n      throw new Error('multicodec not recognized')\r\n    }\r\n  }\r\n  return concat_1([prefix, data], prefix.length + data.length)\r\n}\r\n\r\n/**\r\n * Decapsulate the multicodec-packed prefix from the data.\r\n *\r\n * @param {Uint8Array} data\r\n * @returns {Uint8Array}\r\n */\r\nfunction rmPrefix (data) {\r\n  varint.decode(data);\r\n  return data.slice(varint.decode.bytes)\r\n}\r\n\r\n/**\r\n * Get the codec of the prefixed data.\r\n *\r\n * @param {Uint8Array} prefixedData\r\n * @returns {CodecName}\r\n */\r\nfunction getCodec (prefixedData) {\r\n  const code = varint.decode(prefixedData);\r\n  const codecName = intTable.get(code);\r\n  if (codecName === undefined) {\r\n    throw new Error(`Code ${code} not found`)\r\n  }\r\n  return codecName\r\n}\r\n\r\n/**\r\n * Get the name of the codec.\r\n *\r\n * @param {CodecNumber} codec\r\n * @returns {CodecName|undefined}\r\n */\r\nfunction getName (codec) {\r\n  return intTable.get(codec)\r\n}\r\n\r\n/**\r\n * Get the code of the codec\r\n *\r\n * @param {CodecName} name\r\n * @returns {CodecNumber}\r\n */\r\nfunction getNumber (name) {\r\n  const code = varintTable_1[name];\r\n  if (code === undefined) {\r\n    throw new Error('Codec `' + name + '` not found')\r\n  }\r\n  return varint.decode(code)\r\n}\r\n\r\n/**\r\n * Get the code of the prefixed data.\r\n *\r\n * @param {Uint8Array} prefixedData\r\n * @returns {CodecNumber}\r\n */\r\nfunction getCode (prefixedData) {\r\n  return varint.decode(prefixedData)\r\n}\r\n\r\n/**\r\n * Get the code as varint of a codec name.\r\n *\r\n * @param {CodecName} codecName\r\n * @returns {Uint8Array}\r\n */\r\nfunction getCodeVarint (codecName) {\r\n  const code = varintTable_1[codecName];\r\n  if (code === undefined) {\r\n    throw new Error('Codec `' + codecName + '` not found')\r\n  }\r\n  return code\r\n}\r\n\r\n/**\r\n * Get the varint of a code.\r\n *\r\n * @param {CodecNumber} code\r\n * @returns {Array.<number>}\r\n */\r\nfunction getVarint (code) {\r\n  return varint.encode(code)\r\n}\r\n\r\n// Make the constants top-level constants\r\n\r\n\r\n// Human friendly names for printing, e.g. in error messages\r\n\r\n\r\nvar src$3 = {\r\n  addPrefix,\r\n  rmPrefix,\r\n  getCodec,\r\n  getName,\r\n  getNumber,\r\n  getCode,\r\n  getCodeVarint,\r\n  getVarint,\r\n  print,\r\n  ...constants_1$1\r\n};\r\n\r\nconst CIDUtil = {\r\n  /**\r\n   * Test if the given input is a valid CID object.\r\n   * Returns an error message if it is not.\r\n   * Returns undefined if it is a valid CID.\r\n   *\r\n   * @param {any} other\r\n   * @returns {string|undefined}\r\n   */\r\n  checkCIDComponents: function (other) {\r\n    if (other == null) {\r\n      return 'null values are not valid CIDs'\r\n    }\r\n\r\n    if (!(other.version === 0 || other.version === 1)) {\r\n      return 'Invalid version, must be a number equal to 1 or 0'\r\n    }\r\n\r\n    if (typeof other.codec !== 'string') {\r\n      return 'codec must be string'\r\n    }\r\n\r\n    if (other.version === 0) {\r\n      if (other.codec !== 'dag-pb') {\r\n        return \"codec must be 'dag-pb' for CIDv0\"\r\n      }\r\n      if (other.multibaseName !== 'base58btc') {\r\n        return \"multibaseName must be 'base58btc' for CIDv0\"\r\n      }\r\n    }\r\n\r\n    if (!(other.multihash instanceof Uint8Array)) {\r\n      return 'multihash must be a Uint8Array'\r\n    }\r\n\r\n    try {\r\n      src$2.validate(other.multihash);\r\n    } catch (err) {\r\n      let errorMsg = err.message;\r\n      if (!errorMsg) { // Just in case mh.validate() throws an error with empty error message\r\n        errorMsg = 'Multihash validation failed';\r\n      }\r\n      return errorMsg\r\n    }\r\n  }\r\n};\r\n\r\nvar cidUtil = CIDUtil;\r\n\r\n/**\r\n * Returns true if the two passed Uint8Arrays have the same content\r\n *\r\n * @param {Uint8Array} a\r\n * @param {Uint8Array} b\r\n * @returns {boolean}\r\n */\r\nfunction equals (a, b) {\r\n  if (a === b) {\r\n    return true\r\n  }\r\n\r\n  if (a.byteLength !== b.byteLength) {\r\n    return false\r\n  }\r\n\r\n  for (let i = 0; i < a.byteLength; i++) {\r\n    if (a[i] !== b[i]) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nvar equals_1 = equals;\r\n\r\nconst { baseTable: codecs } = baseTable_1;\r\n\r\n\r\n\r\n\r\n\r\nconst codecInts = Object.keys(codecs).reduce((p, name) => {\r\n  p[codecs[name]] = name;\r\n  return p\r\n}, {});\r\n\r\nconst symbol = Symbol.for('@ipld/js-cid/CID');\r\n\r\n/**\r\n * @typedef {Object} SerializedCID\r\n * @property {string} codec\r\n * @property {number} version\r\n * @property {Uint8Array} hash\r\n */\r\n/**\r\n * @typedef {0|1} CIDVersion\r\n * @typedef {import('multibase').BaseNameOrCode} BaseNameOrCode\r\n */\r\n\r\n/**\r\n * Class representing a CID `<mbase><version><mcodec><mhash>`\r\n * , as defined in [ipld/cid](https://github.com/multiformats/cid).\r\n *\r\n * @class CID\r\n */\r\nclass CID {\r\n  /**\r\n   * Create a new CID.\r\n   *\r\n   * The algorithm for argument input is roughly:\r\n   * ```\r\n   * if (cid)\r\n   *   -> create a copy\r\n   * else if (str)\r\n   *   if (1st char is on multibase table) -> CID String\r\n   *   else -> bs58 encoded multihash\r\n   * else if (Uint8Array)\r\n   *   if (1st byte is 0 or 1) -> CID\r\n   *   else -> multihash\r\n   * else if (Number)\r\n   *   -> construct CID by parts\r\n   * ```\r\n   *\r\n   * @param {CIDVersion | string | Uint8Array | CID} version\r\n   * @param {string|number} [codec]\r\n   * @param {Uint8Array} [multihash]\r\n   * @param {string} [multibaseName]\r\n   *\r\n   * @example\r\n   * new CID(<version>, <codec>, <multihash>, <multibaseName>)\r\n   * new CID(<cidStr>)\r\n   * new CID(<cid.bytes>)\r\n   * new CID(<multihash>)\r\n   * new CID(<bs58 encoded multihash>)\r\n   * new CID(<cid>)\r\n   */\r\n  constructor (version, codec, multihash, multibaseName) {\r\n    Object.defineProperty(this, symbol, { value: true });\r\n    if (CID.isCID(version)) {\r\n      // version is an exising CID instance\r\n      const cid = /** @type {CID} */(version);\r\n      this.version = cid.version;\r\n      this.codec = cid.codec;\r\n      this.multihash = cid.multihash;\r\n      // Default guard for when a CID < 0.7 is passed with no multibaseName\r\n      this.multibaseName = cid.multibaseName || (cid.version === 0 ? 'base58btc' : 'base32');\r\n      return\r\n    }\r\n\r\n    if (typeof version === 'string') {\r\n      // e.g. 'base32' or false\r\n      const baseName = src$1.isEncoded(version);\r\n      if (baseName) {\r\n        // version is a CID String encoded with multibase, so v1\r\n        const cid = src$1.decode(version);\r\n        this.version = parseInt(cid[0].toString(), 16);\r\n        this.codec = src$3.getCodec(cid.slice(1));\r\n        this.multihash = src$3.rmPrefix(cid.slice(1));\r\n        this.multibaseName = baseName;\r\n      } else {\r\n        // version is a base58btc string multihash, so v0\r\n        this.version = 0;\r\n        this.codec = 'dag-pb';\r\n        this.multihash = src$2.fromB58String(version);\r\n        this.multibaseName = 'base58btc';\r\n      }\r\n      CID.validateCID(this);\r\n      Object.defineProperty(this, 'string', { value: version });\r\n      return\r\n    }\r\n\r\n    if (version instanceof Uint8Array) {\r\n      const v = parseInt(version[0].toString(), 16);\r\n      if (v === 1) {\r\n        // version is a CID Uint8Array\r\n        const cid = version;\r\n        this.version = v;\r\n        this.codec = src$3.getCodec(cid.slice(1));\r\n        this.multihash = src$3.rmPrefix(cid.slice(1));\r\n        this.multibaseName = 'base32';\r\n      } else {\r\n        // version is a raw multihash Uint8Array, so v0\r\n        this.version = 0;\r\n        this.codec = 'dag-pb';\r\n        this.multihash = version;\r\n        this.multibaseName = 'base58btc';\r\n      }\r\n      CID.validateCID(this);\r\n      return\r\n    }\r\n\r\n    // otherwise, assemble the CID from the parameters\r\n\r\n    /**\r\n     * The version of the CID.\r\n     *\r\n     * @type {CIDVersion}\r\n     */\r\n    this.version = version;\r\n\r\n    if (typeof codec === 'number') {\r\n      codec = codecInts[codec];\r\n    }\r\n\r\n    /**\r\n     * The codec of the CID.\r\n     *\r\n     * @type {string}\r\n     */\r\n    this.codec = codec;\r\n\r\n    /**\r\n     * The multihash of the CID.\r\n     *\r\n     * @type {Uint8Array}\r\n     */\r\n    this.multihash = multihash;\r\n\r\n    /**\r\n     * Multibase name as string.\r\n     *\r\n     * @deprecated\r\n     * @type {string}\r\n     */\r\n    this.multibaseName = multibaseName || (version === 0 ? 'base58btc' : 'base32');\r\n\r\n    CID.validateCID(this);\r\n  }\r\n\r\n  /**\r\n   * The CID as a `Uint8Array`\r\n   *\r\n   * @returns {Uint8Array}\r\n   *\r\n   */\r\n  get bytes () {\r\n    // @ts-ignore\r\n    let bytes = this._bytes;\r\n\r\n    if (!bytes) {\r\n      if (this.version === 0) {\r\n        bytes = this.multihash;\r\n      } else if (this.version === 1) {\r\n        const codec = src$3.getCodeVarint(this.codec);\r\n        bytes = concat_1([\r\n          [1], codec, this.multihash\r\n        ], 1 + codec.byteLength + this.multihash.byteLength);\r\n      } else {\r\n        throw new Error('unsupported version')\r\n      }\r\n\r\n      // Cache this Uint8Array so it doesn't have to be recreated\r\n      Object.defineProperty(this, '_bytes', { value: bytes });\r\n    }\r\n\r\n    return bytes\r\n  }\r\n\r\n  /**\r\n   * The prefix of the CID.\r\n   *\r\n   * @returns {Uint8Array}\r\n   */\r\n  get prefix () {\r\n    const codec = src$3.getCodeVarint(this.codec);\r\n    const multihash = src$2.prefix(this.multihash);\r\n    const prefix = concat_1([\r\n      [this.version], codec, multihash\r\n    ], 1 + codec.byteLength + multihash.byteLength);\r\n\r\n    return prefix\r\n  }\r\n\r\n  /**\r\n   * The codec of the CID in its number form.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get code () {\r\n    return codecs[this.codec]\r\n  }\r\n\r\n  /**\r\n   * Convert to a CID of version `0`.\r\n   *\r\n   * @returns {CID}\r\n   */\r\n  toV0 () {\r\n    if (this.codec !== 'dag-pb') {\r\n      throw new Error('Cannot convert a non dag-pb CID to CIDv0')\r\n    }\r\n\r\n    const { name, length } = src$2.decode(this.multihash);\r\n\r\n    if (name !== 'sha2-256') {\r\n      throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\r\n    }\r\n\r\n    if (length !== 32) {\r\n      throw new Error('Cannot convert non 32 byte multihash CID to CIDv0')\r\n    }\r\n\r\n    return new CID(0, this.codec, this.multihash)\r\n  }\r\n\r\n  /**\r\n   * Convert to a CID of version `1`.\r\n   *\r\n   * @returns {CID}\r\n   */\r\n  toV1 () {\r\n    return new CID(1, this.codec, this.multihash)\r\n  }\r\n\r\n  /**\r\n   * Encode the CID into a string.\r\n   *\r\n   * @param {BaseNameOrCode} [base=this.multibaseName] - Base encoding to use.\r\n   * @returns {string}\r\n   */\r\n  toBaseEncodedString (base = this.multibaseName) {\r\n    // @ts-ignore non enumerable cache property\r\n    if (this.string && this.string.length !== 0 && base === this.multibaseName) {\r\n      // @ts-ignore non enumerable cache property\r\n      return this.string\r\n    }\r\n    let str;\r\n    if (this.version === 0) {\r\n      if (base !== 'base58btc') {\r\n        throw new Error('not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()')\r\n      }\r\n      str = src$2.toB58String(this.multihash);\r\n    } else if (this.version === 1) {\r\n      str = toString_1(src$1.encode(base, this.bytes));\r\n    } else {\r\n      throw new Error('unsupported version')\r\n    }\r\n    if (base === this.multibaseName) {\r\n      // cache the string value\r\n      Object.defineProperty(this, 'string', { value: str });\r\n    }\r\n    return str\r\n  }\r\n\r\n  /**\r\n   * CID(QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n)\r\n   *\r\n   * @returns {string}\r\n   */\r\n  [Symbol.for('nodejs.util.inspect.custom')] () {\r\n    return 'CID(' + this.toString() + ')'\r\n  }\r\n\r\n  /**\r\n   * Encode the CID into a string.\r\n   *\r\n   * @param {BaseNameOrCode} [base=this.multibaseName] - Base encoding to use.\r\n   * @returns {string}\r\n   */\r\n  toString (base) {\r\n    return this.toBaseEncodedString(base)\r\n  }\r\n\r\n  /**\r\n   * Serialize to a plain object.\r\n   *\r\n   * @returns {SerializedCID}\r\n   */\r\n  toJSON () {\r\n    return {\r\n      codec: this.codec,\r\n      version: this.version,\r\n      hash: this.multihash\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compare equality with another CID.\r\n   *\r\n   * @param {CID} other\r\n   * @returns {boolean}\r\n   */\r\n  equals (other) {\r\n    return this.codec === other.codec &&\r\n      this.version === other.version &&\r\n      equals_1(this.multihash, other.multihash)\r\n  }\r\n\r\n  /**\r\n   * Test if the given input is a valid CID object.\r\n   * Throws if it is not.\r\n   *\r\n   * @param {any} other - The other CID.\r\n   * @returns {void}\r\n   */\r\n  static validateCID (other) {\r\n    const errorMsg = cidUtil.checkCIDComponents(other);\r\n    if (errorMsg) {\r\n      throw new Error(errorMsg)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if object is a CID instance\r\n   *\r\n   * @param {any} value\r\n   * @returns {value is CID}\r\n   */\r\n  static isCID (value) {\r\n    return value instanceof CID || Boolean(value && value[symbol])\r\n  }\r\n}\r\n\r\nCID.codecs = codecs;\r\n\r\nvar src$4 = CID;\r\n\r\nvar encode_1$1 = encode$3;\r\n\r\nvar MSB$2 = 0x80\r\n  , REST$2 = 0x7F\r\n  , MSBALL$1 = ~REST$2\r\n  , INT$1 = Math.pow(2, 31);\r\n\r\nfunction encode$3(num, out, offset) {\r\n  out = out || [];\r\n  offset = offset || 0;\r\n  var oldOffset = offset;\r\n\r\n  while(num >= INT$1) {\r\n    out[offset++] = (num & 0xFF) | MSB$2;\r\n    num /= 128;\r\n  }\r\n  while(num & MSBALL$1) {\r\n    out[offset++] = (num & 0xFF) | MSB$2;\r\n    num >>>= 7;\r\n  }\r\n  out[offset] = num | 0;\r\n  \r\n  encode$3.bytes = offset - oldOffset + 1;\r\n  \r\n  return out\r\n}\r\n\r\nvar decode$3 = read$1;\r\n\r\nvar MSB$3 = 0x80\r\n  , REST$3 = 0x7F;\r\n\r\nfunction read$1(buf, offset) {\r\n  var res    = 0\r\n    , offset = offset || 0\r\n    , shift  = 0\r\n    , counter = offset\r\n    , b\r\n    , l = buf.length;\r\n\r\n  do {\r\n    if (counter >= l) {\r\n      read$1.bytes = 0;\r\n      throw new RangeError('Could not decode varint')\r\n    }\r\n    b = buf[counter++];\r\n    res += shift < 28\r\n      ? (b & REST$3) << shift\r\n      : (b & REST$3) * Math.pow(2, shift);\r\n    shift += 7;\r\n  } while (b >= MSB$3)\r\n\r\n  read$1.bytes = counter - offset;\r\n\r\n  return res\r\n}\r\n\r\nvar N1$1 = Math.pow(2,  7);\r\nvar N2$1 = Math.pow(2, 14);\r\nvar N3$1 = Math.pow(2, 21);\r\nvar N4$1 = Math.pow(2, 28);\r\nvar N5$1 = Math.pow(2, 35);\r\nvar N6$1 = Math.pow(2, 42);\r\nvar N7$1 = Math.pow(2, 49);\r\nvar N8$1 = Math.pow(2, 56);\r\nvar N9$1 = Math.pow(2, 63);\r\n\r\nvar length$1 = function (value) {\r\n  return (\r\n    value < N1$1 ? 1\r\n  : value < N2$1 ? 2\r\n  : value < N3$1 ? 3\r\n  : value < N4$1 ? 4\r\n  : value < N5$1 ? 5\r\n  : value < N6$1 ? 6\r\n  : value < N7$1 ? 7\r\n  : value < N8$1 ? 8\r\n  : value < N9$1 ? 9\r\n  :              10\r\n  )\r\n};\r\n\r\nvar varint$1 = {\r\n    encode: encode_1$1\r\n  , decode: decode$3\r\n  , encodingLength: length$1\r\n};\r\n\r\nvar convert = Convert;\r\n\r\n// converts (serializes) addresses\r\nfunction Convert (proto, a) {\r\n  if (a instanceof Uint8Array) {\r\n    return Convert.toString(proto, a)\r\n  } else {\r\n    return Convert.toBytes(proto, a)\r\n  }\r\n}\r\n\r\nConvert.toString = function convertToString (proto, buf) {\r\n  proto = protocolsTable(proto);\r\n  switch (proto.code) {\r\n    case 4: // ipv4\r\n    case 41: // ipv6\r\n      return bytes2ip(buf)\r\n\r\n    case 6: // tcp\r\n    case 273: // udp\r\n    case 33: // dccp\r\n    case 132: // sctp\r\n      return bytes2port(buf)\r\n\r\n    case 53: // dns\r\n    case 54: // dns4\r\n    case 55: // dns6\r\n    case 56: // dnsaddr\r\n    case 400: // unix\r\n    case 777: // memory\r\n      return bytes2str(buf)\r\n\r\n    case 421: // ipfs\r\n      return bytes2mh(buf)\r\n    case 444: // onion\r\n      return bytes2onion(buf)\r\n    case 445: // onion3\r\n      return bytes2onion(buf)\r\n    default:\r\n      return toString_1(buf, 'base16') // no clue. convert to hex\r\n  }\r\n};\r\n\r\nConvert.toBytes = function convertToBytes (proto, str) {\r\n  proto = protocolsTable(proto);\r\n  switch (proto.code) {\r\n    case 4: // ipv4\r\n      return ip2bytes(str)\r\n    case 41: // ipv6\r\n      return ip2bytes(str)\r\n\r\n    case 6: // tcp\r\n    case 273: // udp\r\n    case 33: // dccp\r\n    case 132: // sctp\r\n      return port2bytes(parseInt(str, 10))\r\n\r\n    case 53: // dns\r\n    case 54: // dns4\r\n    case 55: // dns6\r\n    case 56: // dnsaddr\r\n    case 400: // unix\r\n    case 777: // memory\r\n      return str2bytes(str)\r\n\r\n    case 421: // ipfs\r\n      return mh2bytes(str)\r\n    case 444: // onion\r\n      return onion2bytes(str)\r\n    case 445: // onion3\r\n      return onion32bytes(str)\r\n    default:\r\n      return fromString_1(str, 'base16') // no clue. convert from hex\r\n  }\r\n};\r\n\r\nfunction ip2bytes (ipString) {\r\n  if (!ip$1.isIP(ipString)) {\r\n    throw new Error('invalid ip address')\r\n  }\r\n  return ip$1.toBytes(ipString)\r\n}\r\n\r\nfunction bytes2ip (ipBuff) {\r\n  const ipString = ip$1.toString(ipBuff);\r\n  if (!ipString || !ip$1.isIP(ipString)) {\r\n    throw new Error('invalid ip address')\r\n  }\r\n  return ipString\r\n}\r\n\r\nfunction port2bytes (port) {\r\n  const buf = new ArrayBuffer(2);\r\n  const view = new DataView(buf);\r\n  view.setUint16(0, port);\r\n\r\n  return new Uint8Array(buf)\r\n}\r\n\r\nfunction bytes2port (buf) {\r\n  const view = new DataView(buf.buffer);\r\n  return view.getUint16(0)\r\n}\r\n\r\nfunction str2bytes (str) {\r\n  const buf = fromString_1(str);\r\n  const size = Uint8Array.from(varint$1.encode(buf.length));\r\n  return concat_1([size, buf], size.length + buf.length)\r\n}\r\n\r\nfunction bytes2str (buf) {\r\n  const size = varint$1.decode(buf);\r\n  buf = buf.slice(varint$1.decode.bytes);\r\n\r\n  if (buf.length !== size) {\r\n    throw new Error('inconsistent lengths')\r\n  }\r\n\r\n  return toString_1(buf)\r\n}\r\n\r\nfunction mh2bytes (hash) {\r\n  // the address is a varint prefixed multihash string representation\r\n  const mh = new src$4(hash).multihash;\r\n  const size = Uint8Array.from(varint$1.encode(mh.length));\r\n  return concat_1([size, mh], size.length + mh.length)\r\n}\r\n\r\nfunction bytes2mh (buf) {\r\n  const size = varint$1.decode(buf);\r\n  const address = buf.slice(varint$1.decode.bytes);\r\n\r\n  if (address.length !== size) {\r\n    throw new Error('inconsistent lengths')\r\n  }\r\n\r\n  return toString_1(address, 'base58btc')\r\n}\r\n\r\nfunction onion2bytes (str) {\r\n  const addr = str.split(':');\r\n  if (addr.length !== 2) {\r\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\r\n  }\r\n  if (addr[0].length !== 16) {\r\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion address.')\r\n  }\r\n\r\n  // onion addresses do not include the multibase prefix, add it before decoding\r\n  const buf = src$1.decode('b' + addr[0]);\r\n\r\n  // onion port number\r\n  const port = parseInt(addr[1], 10);\r\n  if (port < 1 || port > 65536) {\r\n    throw new Error('Port number is not in range(1, 65536)')\r\n  }\r\n  const portBuf = port2bytes(port);\r\n  return concat_1([buf, portBuf], buf.length + portBuf.length)\r\n}\r\n\r\nfunction onion32bytes (str) {\r\n  const addr = str.split(':');\r\n  if (addr.length !== 2) {\r\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\r\n  }\r\n  if (addr[0].length !== 56) {\r\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion3 address.')\r\n  }\r\n  // onion addresses do not include the multibase prefix, add it before decoding\r\n  const buf = src$1.decode('b' + addr[0]);\r\n\r\n  // onion port number\r\n  const port = parseInt(addr[1], 10);\r\n  if (port < 1 || port > 65536) {\r\n    throw new Error('Port number is not in range(1, 65536)')\r\n  }\r\n  const portBuf = port2bytes(port);\r\n  return concat_1([buf, portBuf], buf.length + portBuf.length)\r\n}\r\n\r\nfunction bytes2onion (buf) {\r\n  const addrBytes = buf.slice(0, buf.length - 2);\r\n  const portBytes = buf.slice(buf.length - 2);\r\n  const addr = toString_1(addrBytes, 'base32');\r\n  const port = bytes2port(portBytes);\r\n  return addr + ':' + port\r\n}\r\n\r\n// export codec\r\nvar codec = {\r\n  stringToStringTuples,\r\n  stringTuplesToString,\r\n\r\n  tuplesToStringTuples,\r\n  stringTuplesToTuples,\r\n\r\n  bytesToTuples,\r\n  tuplesToBytes,\r\n\r\n  bytesToString,\r\n  stringToBytes,\r\n\r\n  fromString: fromString$1,\r\n  fromBytes,\r\n  validateBytes,\r\n  isValidBytes,\r\n  cleanPath,\r\n\r\n  ParseError,\r\n  protoFromTuple,\r\n\r\n  sizeForAddr\r\n};\r\n\r\n// string -> [[str name, str addr]... ]\r\nfunction stringToStringTuples (str) {\r\n  const tuples = [];\r\n  const parts = str.split('/').slice(1); // skip first empty elem\r\n  if (parts.length === 1 && parts[0] === '') {\r\n    return []\r\n  }\r\n\r\n  for (let p = 0; p < parts.length; p++) {\r\n    const part = parts[p];\r\n    const proto = protocolsTable(part);\r\n\r\n    if (proto.size === 0) {\r\n      tuples.push([part]);\r\n      continue\r\n    }\r\n\r\n    p++; // advance addr part\r\n    if (p >= parts.length) {\r\n      throw ParseError('invalid address: ' + str)\r\n    }\r\n\r\n    // if it's a path proto, take the rest\r\n    if (proto.path) {\r\n      tuples.push([\r\n        part,\r\n        // TODO: should we need to check each path part to see if it's a proto?\r\n        // This would allow for other protocols to be added after a unix path,\r\n        // however it would have issues if the path had a protocol name in the path\r\n        cleanPath(parts.slice(p).join('/'))\r\n      ]);\r\n      break\r\n    }\r\n\r\n    tuples.push([part, parts[p]]);\r\n  }\r\n\r\n  return tuples\r\n}\r\n\r\n// [[str name, str addr]... ] -> string\r\nfunction stringTuplesToString (tuples) {\r\n  const parts = [];\r\n  tuples.map(tup => {\r\n    const proto = protoFromTuple(tup);\r\n    parts.push(proto.name);\r\n    if (tup.length > 1) {\r\n      parts.push(tup[1]);\r\n    }\r\n  });\r\n\r\n  return cleanPath(parts.join('/'))\r\n}\r\n\r\n// [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\r\nfunction stringTuplesToTuples (tuples) {\r\n  return tuples.map(tup => {\r\n    if (!Array.isArray(tup)) {\r\n      tup = [tup];\r\n    }\r\n    const proto = protoFromTuple(tup);\r\n    if (tup.length > 1) {\r\n      return [proto.code, convert.toBytes(proto.code, tup[1])]\r\n    }\r\n    return [proto.code]\r\n  })\r\n}\r\n\r\n// [[int code, Uint8Array]... ] -> [[str name, str addr]... ]\r\nfunction tuplesToStringTuples (tuples) {\r\n  return tuples.map(tup => {\r\n    const proto = protoFromTuple(tup);\r\n    if (tup.length > 1) {\r\n      return [proto.code, convert.toString(proto.code, tup[1])]\r\n    }\r\n    return [proto.code]\r\n  })\r\n}\r\n\r\n// [[int code, Uint8Array ]... ] -> Uint8Array\r\nfunction tuplesToBytes (tuples) {\r\n  return fromBytes(concat_1(tuples.map(tup => {\r\n    const proto = protoFromTuple(tup);\r\n    let buf = Uint8Array.from(varint$1.encode(proto.code));\r\n\r\n    if (tup.length > 1) {\r\n      buf = concat_1([buf, tup[1]]); // add address buffer\r\n    }\r\n\r\n    return buf\r\n  })))\r\n}\r\n\r\nfunction sizeForAddr (p, addr) {\r\n  if (p.size > 0) {\r\n    return p.size / 8\r\n  } else if (p.size === 0) {\r\n    return 0\r\n  } else {\r\n    const size = varint$1.decode(addr);\r\n    return size + varint$1.decode.bytes\r\n  }\r\n}\r\n\r\n// Uint8Array -> [[int code, Uint8Array ]... ]\r\nfunction bytesToTuples (buf) {\r\n  const tuples = [];\r\n  let i = 0;\r\n  while (i < buf.length) {\r\n    const code = varint$1.decode(buf, i);\r\n    const n = varint$1.decode.bytes;\r\n\r\n    const p = protocolsTable(code);\r\n\r\n    const size = sizeForAddr(p, buf.slice(i + n));\r\n\r\n    if (size === 0) {\r\n      tuples.push([code]);\r\n      i += n;\r\n      continue\r\n    }\r\n\r\n    const addr = buf.slice(i + n, i + n + size);\r\n\r\n    i += (size + n);\r\n\r\n    if (i > buf.length) { // did not end _exactly_ at buffer.length\r\n      throw ParseError('Invalid address Uint8Array: ' + toString_1(buf, 'base16'))\r\n    }\r\n\r\n    // ok, tuple seems good.\r\n    tuples.push([code, addr]);\r\n  }\r\n\r\n  return tuples\r\n}\r\n\r\n// Uint8Array -> String\r\nfunction bytesToString (buf) {\r\n  const a = bytesToTuples(buf);\r\n  const b = tuplesToStringTuples(a);\r\n  return stringTuplesToString(b)\r\n}\r\n\r\n// String -> Uint8Array\r\nfunction stringToBytes (str) {\r\n  str = cleanPath(str);\r\n  const a = stringToStringTuples(str);\r\n  const b = stringTuplesToTuples(a);\r\n\r\n  return tuplesToBytes(b)\r\n}\r\n\r\n// String -> Uint8Array\r\nfunction fromString$1 (str) {\r\n  return stringToBytes(str)\r\n}\r\n\r\n// Uint8Array -> Uint8Array\r\nfunction fromBytes (buf) {\r\n  const err = validateBytes(buf);\r\n  if (err) throw err\r\n  return Uint8Array.from(buf) // copy\r\n}\r\n\r\nfunction validateBytes (buf) {\r\n  try {\r\n    bytesToTuples(buf); // try to parse. will throw if breaks\r\n  } catch (err) {\r\n    return err\r\n  }\r\n}\r\n\r\nfunction isValidBytes (buf) {\r\n  return validateBytes(buf) === undefined\r\n}\r\n\r\nfunction cleanPath (str) {\r\n  return '/' + str.trim().split('/').filter(a => a).join('/')\r\n}\r\n\r\nfunction ParseError (str) {\r\n  return new Error('Error parsing address: ' + str)\r\n}\r\n\r\nfunction protoFromTuple (tup) {\r\n  const proto = protocolsTable(tup[0]);\r\n  return proto\r\n}\r\n\r\nfunction withIs(Class, { className, symbolName }) {\r\n    const symbol = Symbol.for(symbolName);\r\n\r\n    const ClassIsWrapper = {\r\n        // The code below assigns the class wrapper to an object to trick\r\n        // JavaScript engines to show the name of the extended class when\r\n        // logging an instances.\r\n        // We are assigning an anonymous class (class wrapper) to the object\r\n        // with key `className` to keep the correct name.\r\n        // If this is not supported it falls back to logging `ClassIsWrapper`.\r\n        [className]: class extends Class {\r\n            constructor(...args) {\r\n                super(...args);\r\n                Object.defineProperty(this, symbol, { value: true });\r\n            }\r\n\r\n            get [Symbol.toStringTag]() {\r\n                return className;\r\n            }\r\n        },\r\n    }[className];\r\n\r\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\r\n\r\n    return ClassIsWrapper;\r\n}\r\n\r\nfunction withIsProto(Class, { className, symbolName, withoutNew }) {\r\n    const symbol = Symbol.for(symbolName);\r\n\r\n    /* eslint-disable object-shorthand */\r\n    const ClassIsWrapper = {\r\n        [className]: function (...args) {\r\n            if (withoutNew && !(this instanceof ClassIsWrapper)) {\r\n                return new ClassIsWrapper(...args);\r\n            }\r\n\r\n            const _this = Class.call(this, ...args) || this;\r\n\r\n            if (_this && !_this[symbol]) {\r\n                Object.defineProperty(_this, symbol, { value: true });\r\n            }\r\n\r\n            return _this;\r\n        },\r\n    }[className];\r\n    /* eslint-enable object-shorthand */\r\n\r\n    ClassIsWrapper.prototype = Object.create(Class.prototype);\r\n    ClassIsWrapper.prototype.constructor = ClassIsWrapper;\r\n\r\n    Object.defineProperty(ClassIsWrapper.prototype, Symbol.toStringTag, {\r\n        get() {\r\n            return className;\r\n        },\r\n    });\r\n\r\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\r\n\r\n    return ClassIsWrapper;\r\n}\r\n\r\nvar classIs = withIs;\r\nvar proto = withIsProto;\r\nclassIs.proto = proto;\r\n\r\nfunction assign(obj, props) {\r\n    for (const key in props) {\r\n        Object.defineProperty(obj, key, {\r\n            value: props[key],\r\n            enumerable: true,\r\n            configurable: true,\r\n        });\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nfunction createError(err, code, props) {\r\n    if (!err || typeof err === 'string') {\r\n        throw new TypeError('Please pass an Error to err-code');\r\n    }\r\n\r\n    if (!props) {\r\n        props = {};\r\n    }\r\n\r\n    if (typeof code === 'object') {\r\n        props = code;\r\n        code = undefined;\r\n    }\r\n\r\n    if (code != null) {\r\n        props.code = code;\r\n    }\r\n\r\n    try {\r\n        return assign(err, props);\r\n    } catch (_) {\r\n        props.message = err.message;\r\n        props.stack = err.stack;\r\n\r\n        const ErrClass = function () {};\r\n\r\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\r\n\r\n        return assign(new ErrClass(), props);\r\n    }\r\n}\r\n\r\nvar errCode = createError;\r\n\r\nvar src$5 = createCommonjsModule(function (module, exports) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\r\n\r\n\r\n\r\nconst resolvers = new Map();\r\n\r\n/**\r\n * Creates a [multiaddr](https://github.com/multiformats/multiaddr) from\r\n * a Uint8Array, String or another Multiaddr instance\r\n * public key.\r\n *\r\n * @class Multiaddr\r\n * @param {(string | Uint8Array | Multiaddr)} addr - If String or Uint8Array, needs to adhere\r\n * to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\r\n * @example\r\n * Multiaddr('/ip4/127.0.0.1/tcp/4001')\r\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\r\n */\r\nconst Multiaddr = classIs.proto(function (addr) {\r\n  if (!(this instanceof Multiaddr)) {\r\n    return new Multiaddr(addr)\r\n  }\r\n\r\n  // default\r\n  if (addr == null) {\r\n    addr = '';\r\n  }\r\n\r\n  if (addr instanceof Uint8Array) {\r\n    /**\r\n     * @type {Uint8Array} - The raw bytes representing this multiaddress\r\n     */\r\n    this.bytes = codec.fromBytes(addr);\r\n  } else if (typeof addr === 'string' || addr instanceof String) {\r\n    if (addr.length > 0 && addr.charAt(0) !== '/') {\r\n      throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`)\r\n    }\r\n    this.bytes = codec.fromString(addr);\r\n  } else if (addr.bytes && addr.protos && addr.protoCodes) { // Multiaddr\r\n    this.bytes = codec.fromBytes(addr.bytes); // validate + copy buffer\r\n  } else {\r\n    throw new Error('addr must be a string, Buffer, or another Multiaddr')\r\n  }\r\n}, { className: 'Multiaddr', symbolName: '@multiformats/js-multiaddr/multiaddr' });\r\n\r\n/**\r\n * Returns Multiaddr as a String\r\n *\r\n * @returns {string}\r\n * @example\r\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\r\n * // '/ip4/127.0.0.1/tcp/4001'\r\n */\r\nMultiaddr.prototype.toString = function toString () {\r\n  return codec.bytesToString(this.bytes)\r\n};\r\n\r\n/**\r\n * Returns Multiaddr as a JSON encoded object\r\n *\r\n * @returns {string}\r\n * @example\r\n * JSON.stringify(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\r\n * // '/ip4/127.0.0.1/tcp/4001'\r\n */\r\nMultiaddr.prototype.toJSON = Multiaddr.prototype.toString;\r\n\r\n/**\r\n * Returns Multiaddr as a convinient options object to be used with net.createConnection\r\n *\r\n * @returns {{family: string, host: string, transport: string, port: number}}\r\n * @example\r\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\r\n * // { family: 'ipv4', host: '127.0.0.1', transport: 'tcp', port: 4001 }\r\n */\r\nMultiaddr.prototype.toOptions = function toOptions () {\r\n  const opts = {};\r\n  const parsed = this.toString().split('/');\r\n  opts.family = parsed[1] === 'ip4' ? 'ipv4' : 'ipv6';\r\n  opts.host = parsed[2];\r\n  opts.transport = parsed[3];\r\n  opts.port = parseInt(parsed[4]);\r\n  return opts\r\n};\r\n\r\n/**\r\n * Returns Multiaddr as a human-readable string.\r\n * For post Node.js v10.0.0.\r\n * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\r\n *\r\n * @returns {string}\r\n * @example\r\n * console.log(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\r\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\r\n */\r\nMultiaddr.prototype[inspect] = function inspectCustom () {\r\n  return '<Multiaddr ' +\r\n    toString_1(this.bytes, 'base16') + ' - ' +\r\n    codec.bytesToString(this.bytes) + '>'\r\n};\r\n\r\n/**\r\n * Returns Multiaddr as a human-readable string.\r\n * Fallback for pre Node.js v10.0.0.\r\n * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\r\n *\r\n * @returns {string}\r\n * @example\r\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').inspect()\r\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\r\n */\r\nMultiaddr.prototype.inspect = function inspect () {\r\n  return '<Multiaddr ' +\r\n    toString_1(this.bytes, 'base16') + ' - ' +\r\n    codec.bytesToString(this.bytes) + '>'\r\n};\r\n\r\n/**\r\n * @typedef {object} protocol\r\n * @property {number} code\r\n * @property {number} size\r\n * @property {string} name\r\n * @property {boolean} [resolvable]\r\n * @property {boolean} [path]\r\n */\r\n\r\n/**\r\n * Returns the protocols the Multiaddr is defined with, as an array of objects, in\r\n * left-to-right order. Each object contains the protocol code, protocol name,\r\n * and the size of its address space in bits.\r\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\r\n *\r\n * @returns {protocol[]} protocols - All the protocols the address is composed of\r\n * @example\r\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\r\n * // [ { code: 4, size: 32, name: 'ip4' },\r\n * //   { code: 6, size: 16, name: 'tcp' } ]\r\n */\r\nMultiaddr.prototype.protos = function protos () {\r\n  return this.protoCodes().map(code => Object.assign({}, protocolsTable(code)))\r\n};\r\n\r\n/**\r\n * Returns the codes of the protocols in left-to-right order.\r\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\r\n *\r\n * @returns {Array<number>} protocol codes\r\n * @example\r\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\r\n * // [ 4, 6 ]\r\n */\r\nMultiaddr.prototype.protoCodes = function protoCodes () {\r\n  const codes = [];\r\n  const buf = this.bytes;\r\n  let i = 0;\r\n  while (i < buf.length) {\r\n    const code = varint$1.decode(buf, i);\r\n    const n = varint$1.decode.bytes;\r\n\r\n    const p = protocolsTable(code);\r\n    const size = codec.sizeForAddr(p, buf.slice(i + n));\r\n\r\n    i += (size + n);\r\n    codes.push(code);\r\n  }\r\n\r\n  return codes\r\n};\r\n\r\n/**\r\n * Returns the names of the protocols in left-to-right order.\r\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\r\n *\r\n * @returns {Array.<string>} protocol names\r\n * @example\r\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\r\n * // [ 'ip4', 'tcp' ]\r\n */\r\nMultiaddr.prototype.protoNames = function protoNames () {\r\n  return this.protos().map(proto => proto.name)\r\n};\r\n\r\n/**\r\n * Returns a tuple of parts\r\n *\r\n * @returns {[number, Uint8Array][]} tuples\r\n * @example\r\n * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").tuples()\r\n * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\r\n */\r\nMultiaddr.prototype.tuples = function tuples () {\r\n  return codec.bytesToTuples(this.bytes)\r\n};\r\n\r\n/**\r\n * Returns a tuple of string/number parts\r\n * - tuples[][0] = code of protocol\r\n * - tuples[][1] = contents of address\r\n *\r\n * @returns {[number, string|number][]} tuples\r\n * @example\r\n * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").stringTuples()\r\n * // [ [ 4, '127.0.0.1' ], [ 6, 4001 ] ]\r\n */\r\nMultiaddr.prototype.stringTuples = function stringTuples () {\r\n  const t = codec.bytesToTuples(this.bytes);\r\n  return codec.tuplesToStringTuples(t)\r\n};\r\n\r\n/**\r\n * Encapsulates a Multiaddr in another Multiaddr\r\n *\r\n * @param {Multiaddr} addr - Multiaddr to add into this Multiaddr\r\n * @returns {Multiaddr}\r\n * @example\r\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\r\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\r\n *\r\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\r\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\r\n *\r\n * const mh3 = mh1.encapsulate(mh2)\r\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\r\n *\r\n * mh3.toString()\r\n * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\r\n */\r\nMultiaddr.prototype.encapsulate = function encapsulate (addr) {\r\n  addr = Multiaddr(addr);\r\n  return Multiaddr(this.toString() + addr.toString())\r\n};\r\n\r\n/**\r\n * Decapsulates a Multiaddr from another Multiaddr\r\n *\r\n * @param {Multiaddr} addr - Multiaddr to remove from this Multiaddr\r\n * @returns {Multiaddr}\r\n * @example\r\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\r\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\r\n *\r\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\r\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\r\n *\r\n * const mh3 = mh1.encapsulate(mh2)\r\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\r\n *\r\n * mh3.decapsulate(mh2).toString()\r\n * // '/ip4/8.8.8.8/tcp/1080'\r\n */\r\nMultiaddr.prototype.decapsulate = function decapsulate (addr) {\r\n  addr = addr.toString();\r\n  const s = this.toString();\r\n  const i = s.lastIndexOf(addr);\r\n  if (i < 0) {\r\n    throw new Error('Address ' + this + ' does not contain subaddress: ' + addr)\r\n  }\r\n  return Multiaddr(s.slice(0, i))\r\n};\r\n\r\n/**\r\n * A more reliable version of `decapsulate` if you are targeting a\r\n * specific code, such as 421 (the `p2p` protocol code). The last index of the code\r\n * will be removed from the `Multiaddr`, and a new instance will be returned.\r\n * If the code is not present, the original `Multiaddr` is returned.\r\n *\r\n * @param {number} code - The code of the protocol to decapsulate from this Multiaddr\r\n * @returns {Multiaddr}\r\n * @example\r\n * const addr = Multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\r\n * // <Multiaddr 0400... - /ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC>\r\n *\r\n * addr.decapsulateCode(421).toString()\r\n * // '/ip4/0.0.0.0/tcp/8080'\r\n *\r\n * Multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\r\n * // '/ip4/127.0.0.1/tcp/8080'\r\n */\r\nMultiaddr.prototype.decapsulateCode = function decapsulateCode (code) {\r\n  const tuples = this.tuples();\r\n  for (let i = tuples.length - 1; i >= 0; i--) {\r\n    if (tuples[i][0] === code) {\r\n      return Multiaddr(codec.tuplesToBytes(tuples.slice(0, i)))\r\n    }\r\n  }\r\n  return this\r\n};\r\n\r\n/**\r\n * Extract the peerId if the multiaddr contains one\r\n *\r\n * @returns {string | null} peerId - The id of the peer or null if invalid or missing from the ma\r\n * @example\r\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\r\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string>\r\n *\r\n * // should return QmValidBase58string or null if the id is missing or invalid\r\n * const peerId = mh1.getPeerId()\r\n */\r\nMultiaddr.prototype.getPeerId = function getPeerId () {\r\n  let b58str = null;\r\n  try {\r\n    const tuples = this.stringTuples().filter((tuple) => {\r\n      if (tuple[0] === protocolsTable.names.ipfs.code) {\r\n        return true\r\n      }\r\n    });\r\n\r\n    // Get the last id\r\n    b58str = tuples.pop()[1];\r\n    // Get multihash, unwrap from CID if needed\r\n    b58str = toString_1(new src$4(b58str).multihash, 'base58btc');\r\n  } catch (e) {\r\n    b58str = null;\r\n  }\r\n\r\n  return b58str\r\n};\r\n\r\n/**\r\n * Extract the path if the multiaddr contains one\r\n *\r\n * @returns {string | null} path - The path of the multiaddr, or null if no path protocol is present\r\n * @example\r\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock')\r\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock>\r\n *\r\n * // should return utf8 string or null if the id is missing or invalid\r\n * const path = mh1.getPath()\r\n */\r\nMultiaddr.prototype.getPath = function getPath () {\r\n  let path = null;\r\n  try {\r\n    path = this.stringTuples().filter((tuple) => {\r\n      const proto = protocolsTable(tuple[0]);\r\n      if (proto.path) {\r\n        return true\r\n      }\r\n    })[0][1];\r\n  } catch (e) {\r\n    path = null;\r\n  }\r\n\r\n  return path\r\n};\r\n\r\n/**\r\n * Checks if two Multiaddrs are the same\r\n *\r\n * @param {Multiaddr} addr\r\n * @returns {Bool}\r\n * @example\r\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\r\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\r\n *\r\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\r\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\r\n *\r\n * mh1.equals(mh1)\r\n * // true\r\n *\r\n * mh1.equals(mh2)\r\n * // false\r\n */\r\nMultiaddr.prototype.equals = function equals (addr) {\r\n  return equals_1(this.bytes, addr.bytes)\r\n};\r\n\r\n/**\r\n * Resolve multiaddr if containing resolvable hostname.\r\n *\r\n * @returns {Promise<Array<Multiaddr>>}\r\n * @example\r\n * Multiaddr.resolvers.set('dnsaddr', resolverFunction)\r\n * const mh1 = Multiaddr('/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb')\r\n * const resolvedMultiaddrs = await mh1.resolve()\r\n * // [\r\n * //   <Multiaddr 04934b5353060fa1a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/4001/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\r\n * //   <Multiaddr 04934b53530601bbde03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/443/wss/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\r\n * //   <Multiaddr 04934b535391020fa1cc03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/udp/4001/quic/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>\r\n * // ]\r\n */\r\nMultiaddr.prototype.resolve = async function resolve () {\r\n  const resolvableProto = this.protos().find((p) => p.resolvable);\r\n\r\n  // Multiaddr is not resolvable?\r\n  if (!resolvableProto) {\r\n    return [this]\r\n  }\r\n\r\n  const resolver = resolvers.get(resolvableProto.name);\r\n  if (!resolver) {\r\n    throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER')\r\n  }\r\n\r\n  const addresses = await resolver(this);\r\n  return addresses.map(a => Multiaddr(a))\r\n};\r\n\r\n/**\r\n * Gets a Multiaddrs node-friendly address object. Note that protocol information\r\n * is left out: in Node (and most network systems) the protocol is unknowable\r\n * given only the address.\r\n *\r\n * Has to be a ThinWaist Address, otherwise throws error\r\n *\r\n * @returns {{family: string, address: string, port: number}}\r\n * @throws {Error} Throws error if Multiaddr is not a Thin Waist address\r\n * @example\r\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\r\n * // {family: 'IPv4', address: '127.0.0.1', port: '4001'}\r\n */\r\nMultiaddr.prototype.nodeAddress = function nodeAddress () {\r\n  const codes = this.protoCodes();\r\n  const names = this.protoNames();\r\n  const parts = this.toString().split('/').slice(1);\r\n\r\n  if (parts.length < 4) {\r\n    throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}\".')\r\n  } else if (codes[0] !== 4 && codes[0] !== 41 && codes[0] !== 54 && codes[0] !== 55) {\r\n    throw new Error(`no protocol with name: \"'${names[0]}'\". Must have a valid family name: \"{ip4, ip6, dns4, dns6}\".`)\r\n  } else if (parts[2] !== 'tcp' && parts[2] !== 'udp') {\r\n    throw new Error(`no protocol with name: \"'${names[1]}'\". Must have a valid transport protocol: \"{tcp, udp}\".`)\r\n  }\r\n\r\n  return {\r\n    family: (codes[0] === 41 || codes[0] === 55) ? 6 : 4,\r\n    address: parts[1], // ip addr\r\n    port: parseInt(parts[3]) // tcp or udp port\r\n  }\r\n};\r\n\r\n/**\r\n * Creates a Multiaddr from a node-friendly address object\r\n *\r\n * @param {{family: string, address: string, port: number}} addr\r\n * @param {string} transport\r\n * @returns {Multiaddr} multiaddr\r\n * @throws {Error} Throws error if addr is not truthy\r\n * @throws {Error} Throws error if transport is not truthy\r\n * @example\r\n * Multiaddr.fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\r\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\r\n */\r\nMultiaddr.fromNodeAddress = function fromNodeAddress (addr, transport) {\r\n  if (!addr) throw new Error('requires node address object')\r\n  if (!transport) throw new Error('requires transport protocol')\r\n  let ip;\r\n  switch (addr.family) {\r\n    case 'IPv4':\r\n      ip = 'ip4';\r\n      break\r\n    case 'IPv6':\r\n      ip = 'ip6';\r\n      break\r\n    default:\r\n      throw Error(`Invalid addr family. Got '${addr.family}' instead of 'IPv4' or 'IPv6'`)\r\n  }\r\n  return Multiaddr('/' + [ip, addr.address, transport, addr.port].join('/'))\r\n};\r\n\r\n// TODO find a better example, not sure about it's good enough\r\n/**\r\n * Returns if a Multiaddr is a Thin Waist address or not.\r\n *\r\n * Thin Waist is if a Multiaddr adheres to the standard combination of:\r\n *\r\n * `{IPv4, IPv6}/{TCP, UDP}`\r\n *\r\n * @param {Multiaddr} [addr] - Defaults to using `this` instance\r\n * @returns {boolean} isThinWaistAddress\r\n * @example\r\n * const mh1 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\r\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\r\n * const mh2 = Multiaddr('/ip4/192.168.2.1/tcp/5001')\r\n * // <Multiaddr 04c0a80201061389 - /ip4/192.168.2.1/tcp/5001>\r\n * const mh3 = mh1.encapsulate(mh2)\r\n * // <Multiaddr 047f000001060fa104c0a80201061389 - /ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001>\r\n * mh1.isThinWaistAddress()\r\n * // true\r\n * mh2.isThinWaistAddress()\r\n * // true\r\n * mh3.isThinWaistAddress()\r\n * // false\r\n */\r\nMultiaddr.prototype.isThinWaistAddress = function isThinWaistAddress (addr) {\r\n  const protos = (addr || this).protos();\r\n\r\n  if (protos.length !== 2) {\r\n    return false\r\n  }\r\n\r\n  if (protos[0].code !== 4 && protos[0].code !== 41) {\r\n    return false\r\n  }\r\n  if (protos[1].code !== 6 && protos[1].code !== 273) {\r\n    return false\r\n  }\r\n  return true\r\n};\r\n\r\n/**\r\n * Object containing table, names and codes of all supported protocols.\r\n * To get the protocol values from a Multiaddr, you can use\r\n * [`.protos()`](#multiaddrprotos),\r\n * [`.protoCodes()`](#multiaddrprotocodes) or\r\n * [`.protoNames()`](#multiaddrprotonames)\r\n *\r\n * @instance\r\n * @returns {{table: Array, names: Object, codes: Object}}\r\n *\r\n */\r\nMultiaddr.protocols = protocolsTable;\r\n\r\n/**\r\n * Returns if something is a Multiaddr that is a name\r\n *\r\n * @param {Multiaddr} addr\r\n * @returns {Bool} isName\r\n */\r\nMultiaddr.isName = function isName (addr) {\r\n  if (!Multiaddr.isMultiaddr(addr)) {\r\n    return false\r\n  }\r\n\r\n  // if a part of the multiaddr is resolvable, then return true\r\n  return addr.protos().some((proto) => proto.resolvable)\r\n};\r\n\r\n/**\r\n * Returns an array of multiaddrs, by resolving the multiaddr that is a name\r\n *\r\n * @async\r\n * @param {Multiaddr} addr\r\n * @returns {Multiaddr[]}\r\n */\r\nMultiaddr.resolve = function resolve (addr) {\r\n  if (!Multiaddr.isMultiaddr(addr) || !Multiaddr.isName(addr)) {\r\n    return Promise.reject(Error('not a valid name'))\r\n  }\r\n\r\n  /*\r\n   * Needs more consideration from spec design:\r\n   *   - what to return\r\n   *   - how to achieve it in the browser?\r\n   */\r\n  return Promise.reject(new Error('not implemented yet'))\r\n};\r\n\r\nMultiaddr.resolvers = resolvers;\r\nmodule.exports = Multiaddr;\r\n});\r\n\r\nsrc$5.protocols.codes[406] = {\r\n    code: 406,\r\n    size: -1,\r\n    name: 'thread',\r\n    resolvable: false,\r\n    path: false,\r\n};\r\nsrc$5.protocols.names['thread'] = {\r\n    code: 406,\r\n    size: -1,\r\n    name: 'thread',\r\n    resolvable: false,\r\n    path: false,\r\n};\r\nsrc$5.protocols.table.push([406, -1, 'thead']);\r\n\r\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nfunction thread2bytes(str) {\r\n    const buf = ThreadID.fromString(str).toBytes();\r\n    const size = varint.encode(buf.length);\r\n    return Uint8Array.from([...size, ...buf]);\r\n}\r\nfunction bytes2thread(buf) {\r\n    const size = varint.decode(buf);\r\n    buf = buf.slice(varint.decode.bytes);\r\n    if (buf.length !== size) {\r\n        throw new Error('inconsistent lengths');\r\n    }\r\n    return ThreadID.fromBytes(buf).toString();\r\n}\r\nfunction toString$2(prt, buf) {\r\n    const proto = src$5.protocols(prt);\r\n    switch (proto.code) {\r\n        case 406:\r\n            return bytes2thread(buf);\r\n        default:\r\n            return convert.toString(prt, buf);\r\n    }\r\n}\r\nfunction toBytes$1(prt, str) {\r\n    const proto = src$5.protocols(prt);\r\n    switch (proto.code) {\r\n        case 406:\r\n            return thread2bytes(str);\r\n        default:\r\n            return convert.toBytes(prt, str);\r\n    }\r\n}\r\n\r\n/* eslint-disable @typescript-eslint/no-use-before-define */\r\n// string -> [[str name, str addr]... ]\r\nfunction stringToStringTuples$1(str) {\r\n    const tuples = [];\r\n    const parts = str.split('/').slice(1); // skip first empty elem\r\n    if (parts.length === 1 && parts[0] === '') {\r\n        return [];\r\n    }\r\n    for (let p = 0; p < parts.length; p++) {\r\n        const part = parts[p];\r\n        const proto = src$5.protocols(part);\r\n        if (proto.size === 0) {\r\n            tuples.push([part]);\r\n            continue;\r\n        }\r\n        p++; // advance addr part\r\n        if (p >= parts.length) {\r\n            throw ParseError$1('invalid address: ' + str);\r\n        }\r\n        // if it's a path proto, take the rest\r\n        if (proto.path) {\r\n            tuples.push([\r\n                part,\r\n                // TODO: should we need to check each path part to see if it's a proto?\r\n                // This would allow for other protocols to be added after a unix path,\r\n                // however it would have issues if the path had a protocol name in the path\r\n                cleanPath$1(parts.slice(p).join('/')),\r\n            ]);\r\n            break;\r\n        }\r\n        tuples.push([part, parts[p]]);\r\n    }\r\n    return tuples;\r\n}\r\n// [[str name, str addr]... ] -> string\r\nfunction stringTuplesToString$1(tuples) {\r\n    const parts = [];\r\n    tuples.map((tup) => {\r\n        const proto = protoFromTuple$1(tup);\r\n        parts.push(proto.name);\r\n        if (tup.length > 1) {\r\n            parts.push(tup[1]);\r\n        }\r\n    });\r\n    return cleanPath$1(parts.join('/'));\r\n}\r\n// [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\r\nfunction stringTuplesToTuples$1(tuples) {\r\n    return tuples.map((tup) => {\r\n        if (!Array.isArray(tup)) {\r\n            tup = [tup];\r\n        }\r\n        const proto = protoFromTuple$1(tup);\r\n        if (tup.length > 1) {\r\n            return [proto.code, toBytes$1(proto.code, tup[1])];\r\n        }\r\n        return [proto.code];\r\n    });\r\n}\r\n// [[int code, Uint8Array]... ] -> [[str name, str addr]... ]\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nfunction tuplesToStringTuples$1(tuples) {\r\n    return tuples.map((tup) => {\r\n        const proto = protoFromTuple$1(tup);\r\n        if (tup.length > 1) {\r\n            return [proto.code, toString$2(proto.code, tup[1])];\r\n        }\r\n        return [proto.code];\r\n    });\r\n}\r\n// [[int code, Uint8Array ]... ] -> Uint8Array\r\nfunction tuplesToBytes$1(tuples) {\r\n    return fromBytes$1(new Uint8Array(tuples.flatMap((tup) => {\r\n        const proto = protoFromTuple$1(tup);\r\n        let buf = Uint8Array.from(varint.encode(proto.code));\r\n        if (tup.length > 1) {\r\n            buf = new Uint8Array([...buf, ...tup[1]]); // add address bytes\r\n        }\r\n        return [...buf];\r\n    })));\r\n}\r\nfunction sizeForAddr$1(p, addr) {\r\n    if (p.size > 0) {\r\n        return p.size / 8;\r\n    }\r\n    else if (p.size === 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        const size = varint.decode(addr);\r\n        return size + varint.decode.bytes;\r\n    }\r\n}\r\n// Uint8Array -> [[int code, Uint8Array ]... ]\r\nfunction bytesToTuples$1(buf) {\r\n    const tuples = [];\r\n    let i = 0;\r\n    while (i < buf.length) {\r\n        const code = varint.decode(buf, i);\r\n        const n = varint.decode.bytes;\r\n        const p = src$5.protocols(code);\r\n        const size = sizeForAddr$1(p, buf.slice(i + n));\r\n        if (size === 0) {\r\n            tuples.push([code]);\r\n            i += n;\r\n            continue;\r\n        }\r\n        const addr = buf.slice(i + n, i + n + size);\r\n        i += size + n;\r\n        if (i > buf.length) {\r\n            // did not end _exactly_ at buf.length\r\n            throw ParseError$1('Invalid address Uint8Array');\r\n        }\r\n        // ok, tuple seems good.\r\n        tuples.push([code, addr]);\r\n    }\r\n    return tuples;\r\n}\r\n// Uint8Array -> String\r\nfunction bytesToString$1(buf) {\r\n    const a = bytesToTuples$1(buf);\r\n    const b = tuplesToStringTuples$1(a);\r\n    return stringTuplesToString$1(b);\r\n}\r\n// String -> Uint8Array\r\nfunction stringToBytes$1(str) {\r\n    str = cleanPath$1(str);\r\n    const a = stringToStringTuples$1(str);\r\n    const b = stringTuplesToTuples$1(a);\r\n    return tuplesToBytes$1(b);\r\n}\r\n// String -> Uint8Array\r\nfunction fromString$2(str) {\r\n    return stringToBytes$1(str);\r\n}\r\n// Uint8Array -> Uint8Array\r\nfunction fromBytes$1(buf) {\r\n    const err = validateBytes$1(buf);\r\n    if (err)\r\n        throw err;\r\n    return Uint8Array.from(buf); // copy\r\n}\r\nfunction validateBytes$1(buf) {\r\n    try {\r\n        bytesToTuples$1(buf); // try to parse. will throw if breaks\r\n    }\r\n    catch (err) {\r\n        return err;\r\n    }\r\n}\r\nfunction cleanPath$1(str) {\r\n    return ('/' +\r\n        str\r\n            .trim()\r\n            .split('/')\r\n            .filter((a) => a)\r\n            .join('/'));\r\n}\r\nfunction ParseError$1(str) {\r\n    return new Error('Error parsing address: ' + str);\r\n}\r\nfunction protoFromTuple$1(tup) {\r\n    const proto = src$5.protocols(tup[0]);\r\n    return proto;\r\n}\r\n\r\nfunction bytesFromAddr(addr) {\r\n    // default\r\n    if (addr == null) {\r\n        addr = '';\r\n    }\r\n    let bytes = new Uint8Array(0);\r\n    if (addr instanceof Uint8Array) {\r\n        bytes = fromBytes$1(addr);\r\n    }\r\n    else if (typeof addr === 'string') {\r\n        if (addr.length > 0 && addr.charAt(0) !== '/') {\r\n            throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\r\n        }\r\n        bytes = fromString$2(addr);\r\n    }\r\n    else if (addr.bytes && addr.protos && addr.protoCodes) {\r\n        // Multiaddr\r\n        bytes = fromBytes$1(addr.bytes); // validate + copy bytes\r\n    }\r\n    else {\r\n        throw new Error('addr must be a string, Uint8Array, or another Multiaddr');\r\n    }\r\n    return bytes;\r\n}\r\nfunction stringFromBytes(bytes) {\r\n    return bytesToString$1(bytes);\r\n}\r\nfunction bytesToTuples$2(bytes) {\r\n    const t = bytesToTuples$1(bytes);\r\n    return tuplesToStringTuples$1(t);\r\n}\r\nfunction bytesToOptions(bytes) {\r\n    const parsed = stringFromBytes(bytes).split('/');\r\n    const opts = {\r\n        family: parsed[1] === 'ip4' ? 'ipv4' : 'ipv6',\r\n        host: parsed[2],\r\n        transport: parsed[3],\r\n        port: parseInt(parsed[4]),\r\n    };\r\n    return opts;\r\n}\r\n\r\nexport { bytesFromAddr, bytesToOptions, bytesToTuples$2 as bytesToTuples, stringFromBytes };\r\n"]},"metadata":{},"sourceType":"module"}