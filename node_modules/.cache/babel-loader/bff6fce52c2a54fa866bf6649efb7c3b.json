{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { onDropToUpload } from \"../../common/upload\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bucketKey: props.location.query.bucketKey,\n      buckets: props.location.query.buckets,\n      links: props.location.query.links\n    };\n  }\n\n  componentWillMount() {\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(MyDropZone, {\n      bucketKey: this.state.bucketKey,\n      buckets: this.state.buckets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction MyDropZone(props) {\n  _s();\n\n  const bucketKey = props.bucketKey;\n  const buckets = props.buckets;\n  const onDrop = useCallback(acceptedFiles => {\n    onDropToUpload(acceptedFiles, buckets, bucketKey);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"\\u4E0A\\u4F20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyDropZone, \"G+iBbt33sf7OqOHflSjhXFbwx/Q=\", false, function () {\n  return [useDropzone];\n});\n\n_c = MyDropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyDropZone\");","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js"],"names":["React","useCallback","useDropzone","onDropToUpload","Button","DashboardPage","Component","constructor","props","state","bucketKey","location","query","buckets","links","componentWillMount","loading","document","getElementById","style","display","render","MyDropZone","onDrop","acceptedFiles","getRootProps","getInputProps"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,SAAQC,cAAR,QAA6B,qBAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,OAAO,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAEF,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBF,SADvB;AAETG,MAAAA,OAAO,EAAEL,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,OAFrB;AAGTC,MAAAA,KAAK,EAAEN,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBE;AAHnB,KAAb;AAKH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,QAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAd;AACAF,IAAAA,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWC,SAAlC;AAA6C,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWI;AAAjE;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAnB8C;;AAsBnD,SAASS,UAAT,CAAoBd,KAApB,EAA2B;AAAA;;AACtB,QAAME,SAAS,GAAGF,KAAK,CAACE,SAAxB;AACA,QAAMG,OAAO,GAAGL,KAAK,CAACK,OAAtB;AAED,QAAMU,MAAM,GAAGtB,WAAW,CAACuB,aAAa,IAAI;AACxCrB,IAAAA,cAAc,CAACqB,aAAD,EAAeX,OAAf,EAAuBH,SAAvB,CAAd;AACH,GAFyB,EAEvB,EAFuB,CAA1B;AAGA,QAAM;AAACe,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAgCxB,WAAW,CAAC;AAACqB,IAAAA;AAAD,GAAD,CAAjD;AAEA,sBACI,oBAASE,YAAY,EAArB;AAAA,4BACI,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAE,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAnBQJ,U;UAOiCpB,W;;;KAPjCoB,U","sourcesContent":["import * as React from \"react\";\nimport {useCallback} from \"react\";\nimport {useDropzone} from \"react-dropzone\";\nimport {onDropToUpload} from \"../../common/upload\";\nimport Button from \"@material-ui/core/Button\";\n\nexport class DashboardPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bucketKey: props.location.query.bucketKey,\n            buckets: props.location.query.buckets,\n            links: props.location.query.links,\n        }\n    }\n\n    componentWillMount() {\n        let loading = document.getElementById('loader');\n        loading.style.display = 'none';\n    }\n\n    render() {\n        return (\n            <MyDropZone bucketKey={this.state.bucketKey} buckets={this.state.buckets}/>\n        );\n    }\n}\n\nfunction MyDropZone(props) {\n     const bucketKey = props.bucketKey;\n     const buckets = props.buckets;\n\n    const onDrop = useCallback(acceptedFiles => {\n        onDropToUpload(acceptedFiles,buckets,bucketKey);\n    }, [])\n    const {getRootProps, getInputProps} = useDropzone({onDrop})\n\n    return (\n        <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            <div>\n                <Button variant=\"contained\" color={\"secondary\"}>\n                    上传\n                </Button>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}