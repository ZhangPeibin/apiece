{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/components/bucketzone/BucketZone.js\";\nimport * as React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { getCurrentBucketZone } from \"../../common/bucket\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ArrowRightAlt } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BucketZone(props) {\n  const bucketRoots = props.roots;\n  const currentBucketPath = getCurrentBucketZone();\n\n  if (bucketRoots == null || bucketRoots.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this);\n  } else {\n    let views = [];\n    bucketRoots.forEach(function (value) {\n      if (value.name === currentBucketPath) {\n        views.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justify: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowRightAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: 'spacecontentselect',\n              children: value.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            light: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 28\n        }, this));\n      } else {\n        views.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'spacecontent',\n            children: value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            light: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 28\n        }, this));\n      }\n    });\n    return views;\n  }\n}\n_c = BucketZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"BucketZone\");","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/components/bucketzone/BucketZone.js"],"names":["React","Divider","getCurrentBucketZone","Grid","ArrowRightAlt","BucketZone","props","bucketRoots","roots","currentBucketPath","length","views","forEach","value","name","push"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAAQC,oBAAR,QAAmC,qBAAnC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEtC,QAAMC,WAAW,GAAGD,KAAK,CAACE,KAA1B;AAEA,QAAMC,iBAAiB,GAAGP,oBAAoB,EAA9C;;AAEA,MAAIK,WAAW,IAAI,IAAf,IAAuBA,WAAW,CAACG,MAAZ,KAAuB,CAAlD,EAAqD;AACjD,wBAAQ;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAFD,MAEO;AACH,QAAIC,KAAK,GAAG,EAAZ;AACAJ,IAAAA,WAAW,CAACK,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACjC,UAAGA,KAAK,CAACC,IAAN,KAAeL,iBAAlB,EAAoC;AAChCE,QAAAA,KAAK,CAACI,IAAN,eAAW;AAAA,kCACP,QAAC,IAAD;AACI,YAAA,SAAS,MADb;AACc,YAAA,SAAS,EAAC,KADxB;AACgC,YAAA,OAAO,EAAC,YADxC;AAAA,oCAEI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAM,cAAA,SAAS,EAAE,oBAAjB;AAAA,wBAAwCF,KAAK,CAACC;AAA9C;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADO,eAMP,QAAC,OAAD;AAAS,YAAA,KAAK;AAAd;AAAA;AAAA;AAAA;AAAA,kBANO;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAX;AAQH,OATD,MASK;AACDH,QAAAA,KAAK,CAACI,IAAN,eAAW;AAAA,kCACP;AAAM,YAAA,SAAS,EAAE,cAAjB;AAAA,sBAAkCF,KAAK,CAACC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADO,eAEP,QAAC,OAAD;AAAS,YAAA,KAAK;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFO;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAX;AAIH;AACJ,KAhBD;AAiBA,WAAOH,KAAP;AACH;AACJ;KA7BuBN,U","sourcesContent":["import * as React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {getCurrentBucketZone} from \"../../common/bucket\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {ArrowRightAlt} from \"@material-ui/icons\";\n\nexport default function BucketZone(props) {\n\n    const bucketRoots = props.roots;\n\n    const currentBucketPath = getCurrentBucketZone();\n\n    if (bucketRoots == null || bucketRoots.length === 0) {\n        return (<div/>)\n    } else {\n        let views = [];\n        bucketRoots.forEach(function (value) {\n            if(value.name === currentBucketPath){\n                views.push(<div>\n                    <Grid\n                        container direction=\"row\"   justify=\"flex-start\">\n                        <ArrowRightAlt/>\n                        <span className={'spacecontentselect'}>{value.name}</span>\n                    </Grid>\n                    <Divider light/>\n                </div>)\n            }else{\n                views.push(<div>\n                    <span className={'spacecontent'}>{value.name}</span>\n                    <Divider light/>\n                </div>)\n            }\n        });\n        return views;\n    }\n}"]},"metadata":{},"sourceType":"module"}