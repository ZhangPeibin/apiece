{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js\";\nimport * as React from \"react\";\nimport './Dashboard.css';\nimport { getLocalUserIdentity } from \"../../common/user\";\nimport { getBucketKey } from \"../../common/bucket\";\nimport CustomizedDropZone from \"../../components/CustomizedDropZone/CustomizedDropZone\";\nimport { getFileIndex, storeIndex } from \"../../common/FileIndex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fileUploadCallback = async data => {\n      this.state.index.paths.forEach();\n      this.setState({\n        index: { ...this.state.index,\n          paths: [...this.state.index.paths, data],\n          counts: this.state.index.counts + 1\n        }\n      });\n      await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n    };\n\n    if (props.location.query != null) {\n      this.state = {\n        bucketKey: props.location.query.bucketKey,\n        buckets: props.location.query.buckets,\n        links: props.location.query.links\n      };\n    }\n  }\n\n  async componentWillMount() {\n    if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\n      const userIdentity = await getLocalUserIdentity();\n\n      if (userIdentity != null) {\n        const {\n          bucketKey,\n          buckets\n        } = await getBucketKey(userIdentity);\n        this.setState({\n          bucketKey: bucketKey,\n          buckets: buckets\n        });\n      } else {\n        this.props.history.push({\n          pathname: \"/mnemonic\"\n        });\n      }\n    }\n\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n    const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n\n    if (index) {\n      this.setState({\n        index: index\n      });\n    }\n  }\n\n  render() {\n    if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(CustomizedDropZone, {\n      bucketKey: this.state.bucketKey,\n      buckets: this.state.buckets,\n      callback: this.fileUploadCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js"],"names":["React","getLocalUserIdentity","getBucketKey","CustomizedDropZone","getFileIndex","storeIndex","DashboardPage","Component","constructor","props","fileUploadCallback","data","state","index","paths","forEach","setState","counts","buckets","bucketKey","location","query","links","componentWillMount","userIdentity","history","push","pathname","loading","document","getElementById","style","display","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,iBAAP;AACA,SACIC,oBADJ,QAEO,mBAFP;AAGA,SAAQC,YAAR,QAA2B,qBAA3B;AACA,OAAOC,kBAAP,MAA+B,wDAA/B;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,wBAAvC;;AAEA,OAAO,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA6CnBC,kBA7CmB,GA6CE,MAAOC,IAAP,IAAgB;AACjC,WAAKC,KAAL,CAAWC,KAAX,CAAiBC,KAAjB,CAAuBC,OAAvB;AACA,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,EACH,GAAG,KAAKD,KAAL,CAAWC,KADX;AAEHC,UAAAA,KAAK,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiBC,KAArB,EAA4BH,IAA5B,CAFJ;AAGHM,UAAAA,MAAM,EAAE,KAAKL,KAAL,CAAWC,KAAX,CAAiBI,MAAjB,GAAwB;AAH7B;AADG,OAAd;AAOA,YAAMZ,UAAU,CAAC,KAAKO,KAAL,CAAWC,KAAZ,EAAmB,KAAKD,KAAL,CAAWM,OAA9B,EAAuC,KAAKN,KAAL,CAAWO,SAAlD,CAAhB;AACH,KAvDkB;;AAEf,QAAGV,KAAK,CAACW,QAAN,CAAeC,KAAf,IAAsB,IAAzB,EAA8B;AAC1B,WAAKT,KAAL,GAAa;AACTO,QAAAA,SAAS,EAAEV,KAAK,CAACW,QAAN,CAAeC,KAAf,CAAqBF,SADvB;AAETD,QAAAA,OAAO,EAAET,KAAK,CAACW,QAAN,CAAeC,KAAf,CAAqBH,OAFrB;AAGTI,QAAAA,KAAK,EAAEb,KAAK,CAACW,QAAN,CAAeC,KAAf,CAAqBC;AAHnB,OAAb;AAKH;AACJ;;AAEuB,QAAlBC,kBAAkB,GAAG;AACvB,QAAI,KAAKX,KAAL,IAAY,IAAZ,IAAoB,KAAKA,KAAL,CAAWO,SAAX,IAAwB,IAA5C,IAAoD,KAAKP,KAAL,CAAWM,OAAX,IAAsB,IAA9E,EAAoF;AAChF,YAAMM,YAAY,GAAG,MAAOvB,oBAAoB,EAAhD;;AACA,UAAIuB,YAAY,IAAI,IAApB,EAA0B;AACtB,cAAM;AAACL,UAAAA,SAAD;AAAYD,UAAAA;AAAZ,YAAuB,MAAMhB,YAAY,CAACsB,YAAD,CAA/C;AACA,aAAKR,QAAL,CAAc;AACVG,UAAAA,SAAS,EAACA,SADA;AAEVD,UAAAA,OAAO,EAACA;AAFE,SAAd;AAIH,OAND,MAMO;AACH,aAAKT,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAxB;AACH;AACJ;;AACD,QAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAd;AACAF,IAAAA,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACA,UAAMnB,KAAK,GAAG,MAAMT,YAAY,CAAC,KAAKQ,KAAL,CAAWM,OAAZ,EAAoB,KAAKN,KAAL,CAAWO,SAA/B,CAAhC;;AACA,QAAGN,KAAH,EAAS;AACL,WAAKG,QAAL,CAAc;AACVH,QAAAA,KAAK,EAACA;AADI,OAAd;AAGH;AACJ;;AAEDoB,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKrB,KAAL,IAAY,IAAZ,IAAoB,KAAKA,KAAL,CAAWM,OAAX,IAAsB,IAA1C,IAAkD,KAAKN,KAAL,CAAWO,SAAX,IAAuB,IAA5E,EAAiF;AAC7E,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI,QAAC,kBAAD;AAAoB,MAAA,SAAS,EAAE,KAAKP,KAAL,CAAWO,SAA1C;AACoB,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWM,OADxC;AAEoB,MAAA,QAAQ,EAAE,KAAKR;AAFnC;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA5C8C","sourcesContent":["import * as React from \"react\";\nimport './Dashboard.css'\nimport {\n    getLocalUserIdentity,\n} from \"../../common/user\";\nimport {getBucketKey} from \"../../common/bucket\";\nimport CustomizedDropZone from \"../../components/CustomizedDropZone/CustomizedDropZone\";\nimport {getFileIndex, storeIndex} from \"../../common/FileIndex\";\n\nexport class DashboardPage extends React.Component {\n    constructor(props) {\n        super(props);\n        if(props.location.query!=null){\n            this.state = {\n                bucketKey: props.location.query.bucketKey,\n                buckets: props.location.query.buckets,\n                links: props.location.query.links,\n            }\n        }\n    }\n\n    async componentWillMount() {\n        if (this.state==null || this.state.bucketKey == null || this.state.buckets == null) {\n            const userIdentity = await  getLocalUserIdentity();\n            if (userIdentity != null) {\n                const {bucketKey, buckets} = await getBucketKey(userIdentity);\n                this.setState({\n                    bucketKey:bucketKey,\n                    buckets:buckets,\n                })\n            } else {\n                this.props.history.push({pathname: \"/mnemonic\"});\n            }\n        }\n        let loading = document.getElementById('loader');\n        loading.style.display = 'none';\n        const index = await getFileIndex(this.state.buckets,this.state.bucketKey);\n        if(index){\n            this.setState({\n                index:index\n            })\n        }\n    }\n\n    render() {\n        if(this.state==null || this.state.buckets == null || this.state.bucketKey ==null){\n            return <div/>\n        }\n        return (\n            <CustomizedDropZone bucketKey={this.state.bucketKey}\n                                buckets={this.state.buckets}\n                                callback={this.fileUploadCallback}/>\n        );\n    }\n\n    fileUploadCallback = async (data) => {\n        this.state.index.paths.forEach()\n        this.setState({\n            index: {\n                ...this.state.index,\n                paths: [...this.state.index.paths, data],\n                counts: this.state.index.counts+1\n            },\n        });\n        await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}