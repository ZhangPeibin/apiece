{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/apiece/src/views/dashborad/Dashboard.js\";\nimport * as React from \"react\";\nimport './Dashboard.css';\nimport { getLocalUserIdentity } from \"../../common/user\";\nimport { bucketList, deleteBucket, deleteBucketZone, getBucketKey, getBucketKeyByBucketRoot, removeBucketPath, setCurrentBucketZone } from \"../../common/bucket\";\nimport { getFileIndex, storeIndex } from \"../../common/FileIndex\";\nimport CustomizedDropZone from \"../../components/CustomizedDropZone/CustomizedDropZone\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport FileZone from \"../../components/FileZone/FileZone\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport DashboardHeader from \"../../components/comps/DashboardHeader\";\nimport { isFileDocument, isFileImage, isFileOther, isFileVideo } from \"../../common/fileutil\";\nimport Sidebar from \"../../components/Sidebar\";\nimport { onDropToUpload } from \"../../common/upload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4)\n  }\n});\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nexport const ALL_FILES = \"ALL FILES\";\nexport const IMAGE = \"IMAGE\";\nexport const VIDEO = \"VIDEO\";\nexport const DOCUMENT = \"DOCUMENT\";\nexport const OTHER = \"OTHER\";\n\nclass DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onDrop = acceptedFiles => {\n      onDropToUpload(acceptedFiles, this.state.buckets, this.state.bucketKey, async function (data) {\n        let dataAlreadyInPaths = false;\n        this.state.index.paths.forEach(function (element) {\n          if (element['cid'] === data['cid']) {\n            dataAlreadyInPaths = true;\n          }\n        });\n\n        if (!dataAlreadyInPaths) {\n          this.setState({\n            index: { ...this.state.index,\n              paths: [...this.state.index.paths, data],\n              counts: this.state.index.counts + 1\n            }\n          });\n          this.filterFile(this.state.currentType);\n          await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n        }\n      });\n    };\n\n    this.search = value => {\n      if (value) {\n        const searchResult = this.state.copyIndex.paths.filter(val => val['name'].match(value));\n        this.setState({\n          copyIndex: { ...this.state.index,\n            paths: searchResult,\n            counts: searchResult.length\n          }\n        });\n      } else {\n        this.filterFile(this.state.currentType);\n      }\n    };\n\n    this.filterFile = value => {\n      const fileType = value;\n\n      if (fileType === ALL_FILES) {\n        this.setState({\n          copyIndex: this.state.index\n        });\n      } else if (fileType === IMAGE) {\n        let copyBucketRoots = [];\n        this.state.index.paths.forEach(function (value) {\n          if (isFileImage(value['type'])) {\n            copyBucketRoots.push(value);\n          }\n        });\n        this.setState({\n          copyIndex: { ...this.state.index,\n            paths: copyBucketRoots,\n            counts: copyBucketRoots.length\n          }\n        });\n      } else if (fileType === VIDEO) {\n        let copyBucketRoots = [];\n        this.state.index.paths.forEach(function (value) {\n          if (isFileVideo(value['type'])) {\n            copyBucketRoots.push(value);\n          }\n        });\n        this.setState({\n          copyIndex: { ...this.state.index,\n            paths: copyBucketRoots,\n            counts: copyBucketRoots.length\n          }\n        });\n      } else if (fileType === DOCUMENT) {\n        let copyBucketRoots = [];\n        this.state.index.paths.forEach(function (value) {\n          if (isFileDocument(value['type'])) {\n            copyBucketRoots.push(value);\n          }\n        });\n        this.setState({\n          copyIndex: { ...this.state.index,\n            paths: copyBucketRoots,\n            counts: copyBucketRoots.length\n          }\n        });\n      } else {\n        let copyBucketRoots = [];\n        this.state.index.paths.forEach(function (value) {\n          if (isFileOther(value['type'])) {\n            copyBucketRoots.push(value);\n          }\n        });\n        this.setState({\n          copyIndex: { ...this.state.index,\n            paths: copyBucketRoots,\n            counts: copyBucketRoots.length\n          }\n        });\n      }\n    };\n\n    this.changeFileType = value => {\n      this.setState({\n        currentType: value\n      });\n      this.filterFile(value);\n    };\n\n    this.exit = () => {\n      localStorage.clear();\n      this.props.history.replace({\n        pathname: \"/landing\"\n      });\n    };\n\n    this.deleteFiles = async value => {\n      const buckets = this.state.buckets;\n      const bucketKey = this.state.bucketKey;\n      const fileIndex = value;\n\n      if (fileIndex != null) {\n        this.setState({\n          backDropTips: \"Delete Files ...\"\n        });\n        this.backDropToggle(true);\n        let cids = [];\n        fileIndex.forEach(async function (value) {\n          cids.push(value.cid);\n          await removeBucketPath(buckets, bucketKey, value.path);\n        });\n        let copyIndexPaths = this.state.index.paths;\n        this.state.index.paths.forEach(function (element, index) {\n          if (cids.indexOf(element['cid']) !== -1) {\n            if (index === 0) {\n              copyIndexPaths.shift();\n            } else if (index === copyIndexPaths.length - 1) {\n              copyIndexPaths.pop();\n            } else {\n              copyIndexPaths.splice(index, 1);\n            }\n          }\n        });\n        this.setState({\n          index: { ...this.state.index,\n            paths: [...copyIndexPaths],\n            counts: copyIndexPaths.length\n          }\n        });\n        this.filterFile(this.state.currentType);\n        await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n        this.setState({\n          backDropTips: \"Change Bucket ...\"\n        });\n        this.backDropToggle(false);\n      }\n    };\n\n    this.backDropToggle = value => {\n      this.setState({\n        backDropOpen: value\n      });\n    };\n\n    this.handleBackDropClose = () => {\n      this.backDropToggle(false);\n    };\n\n    this.changeBucket = async value => {\n      this.setState({\n        changeBucket: value,\n        changeSpaceDialogOpen: true\n      });\n    };\n\n    this.folderInputChange = folderName => {\n      this.setState({\n        folderName: folderName.target.value\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        dialogOpen: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        dialogOpen: false\n      });\n    };\n\n    this.handleChangeSpaceClose = () => {\n      this.setState({\n        changeSpaceDialogOpen: false\n      });\n    };\n\n    this.deleteBucketConfirm = async () => {\n      this.setState({\n        changeSpaceDialogOpen: true,\n        bucketDialogTips: \"Delete this space ?\",\n        isChangeBucket: false\n      });\n    };\n\n    this.handleChangeSpaceConfirm = async () => {\n      if (this.state.isChangeBucket) {\n        const value = this.state.changeBucket;\n        this.handleChangeSpaceClose();\n\n        if (value != null) {\n          this.backDropToggle(true);\n          const userIdentity = await getLocalUserIdentity();\n          const {\n            bucketKey,\n            buckets\n          } = await getBucketKeyByBucketRoot(userIdentity, value);\n          this.setState({\n            bucketKey: bucketKey,\n            buckets: buckets\n          });\n          setCurrentBucketZone(value);\n          const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n\n          if (index) {\n            this.setState({\n              index: index\n            });\n            this.filterFile(ALL_FILES);\n          }\n\n          this.backDropToggle(false);\n        }\n      } else {\n        this.handleChangeSpaceClose();\n        await this.deleteBucket();\n      }\n    };\n\n    this.handleConfirm = async () => {\n      this.setState({\n        dialogOpen: false\n      });\n      const folderName = this.state.folderName; // const path = `${'/'}${folderName}${'/'}${'.seed'}`;\n      // await this.state.buckets.pushPath(this.state.bucketKey, path, new Uint8Array(128))\n\n      const response = await this.state.buckets.create(folderName);\n      this.setState({\n        bucketRoots: [...this.state.bucketRoots, response.root]\n      });\n    };\n\n    this.newFolder = data => {\n      this.handleClickOpen();\n    };\n\n    this.fileSelectCallback = data => {\n      this.setState({\n        checked: data\n      });\n    };\n\n    this.deleteBucket = async () => {\n      this.backDropToggle(true);\n\n      if (this.state.bucketRoots.length === 1) {\n        return;\n      }\n\n      await deleteBucket(this.state.buckets, this.state.bucketKey);\n      const bucketRoots = await bucketList(this.state.buckets);\n      deleteBucketZone();\n      this.setState({\n        changeBucket: bucketRoots[0],\n        bucketRoots: bucketRoots,\n        isChangeBucket: true\n      });\n      await this.handleChangeSpaceConfirm();\n    };\n\n    if (props.location.query != null) {\n      this.state = {\n        bucketKey: props.location.query.bucketKey,\n        buckets: props.location.query.buckets,\n        links: props.location.query.links,\n        dialogOpen: false,\n        changeSpaceDialogOpen: false,\n        backDropOpen: false,\n        backDropTips: \"Change Bucket ...\"\n      };\n    }\n  }\n\n  async componentWillMount() {\n    this.setState({\n      bucketDialogTips: \"Use this space ?\",\n      isChangeBucket: true,\n      currentType: ALL_FILES\n    });\n\n    if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\n      const userIdentity = await getLocalUserIdentity();\n\n      if (userIdentity != null) {\n        const {\n          bucketKey,\n          buckets\n        } = await getBucketKey(userIdentity);\n        this.setState({\n          bucketKey: bucketKey,\n          buckets: buckets\n        });\n      } else {\n        this.props.history.push({\n          pathname: \"/\"\n        });\n        return;\n      }\n    }\n\n    const bucketRoots = await bucketList(this.state.buckets);\n    this.setState({\n      bucketRoots: bucketRoots\n    });\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n    const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n\n    if (index) {\n      this.setState({\n        index: index\n      });\n      this.filterFile(ALL_FILES);\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n\n    if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n            loginOut: this.exit,\n            changeFileType: this.changeFileType,\n            currentFileType: this.state.currentType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative md:ml-64\",\n            children: [/*#__PURE__*/_jsxDEV(DashboardHeader, {\n              search: this.search,\n              roots: this.state.bucketRoots,\n              changeBucketCallBack: this.changeBucket,\n              onDrop: this.onDrop.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actionarea\",\n              children: [/*#__PURE__*/_jsxDEV(CustomizedDropZone, {\n                newFolder: this.newFolder,\n                checked: this.state.checked,\n                deleteFiles: this.deleteFiles,\n                deleteBucket: this.deleteBucketConfirm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FileZone, {\n                index: this.state.copyIndex,\n                callback: this.fileSelectCallback\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Dialog, {\n              open: this.state.dialogOpen,\n              onClose: this.handleClose,\n              \"aria-labelledby\": \"form-dialog-title\",\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                id: \"form-dialog-title\",\n                children: \"New Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n                  children: \"Please enter the folder name, for better use, Please enter English.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  onChange: this.folderInputChange,\n                  autoFocus: true,\n                  margin: \"dense\",\n                  id: \"name\",\n                  label: \"Folder Name\",\n                  type: \"text\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.handleClose,\n                  color: \"primary\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.handleConfirm.bind(this),\n                  color: \"primary\",\n                  children: \"Confirm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n              open: this.state.changeSpaceDialogOpen,\n              onClose: this.handleChangeSpaceClose,\n              \"aria-labelledby\": \"alert-dialog-title\",\n              \"aria-describedby\": \"alert-dialog-description\",\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                id: \"alert-dialog-title\",\n                children: this.state.bucketDialogTips\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n                  id: \"alert-dialog-description\",\n                  children: \"This is a confirmation popup, if you sure, just click confirm.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.handleChangeSpaceClose,\n                  color: \"primary\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.handleChangeSpaceConfirm,\n                  color: \"primary\",\n                  children: \"Confirm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n        className: classes.backdrop,\n        open: this.state.backDropOpen,\n        onClick: this.handleBackDropClose,\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"  \\xA0\\xA0 \", this.state.backDropTips]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles, {\n  withTheme: true\n})(DashboardPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/Users/wiki/code/apiece/src/views/dashborad/Dashboard.js"],"names":["React","getLocalUserIdentity","bucketList","deleteBucket","deleteBucketZone","getBucketKey","getBucketKeyByBucketRoot","removeBucketPath","setCurrentBucketZone","getFileIndex","storeIndex","CustomizedDropZone","Dialog","DialogTitle","DialogActions","FileZone","DialogContent","DialogContentText","TextField","Button","MuiAlert","Backdrop","CircularProgress","withStyles","DashboardHeader","isFileDocument","isFileImage","isFileOther","isFileVideo","Sidebar","onDropToUpload","useStyles","theme","backdrop","zIndex","drawer","color","fab","position","bottom","spacing","right","Alert","props","ALL_FILES","IMAGE","VIDEO","DOCUMENT","OTHER","DashboardPage","Component","constructor","onDrop","acceptedFiles","state","buckets","bucketKey","data","dataAlreadyInPaths","index","paths","forEach","element","setState","counts","filterFile","currentType","search","value","searchResult","copyIndex","filter","val","match","length","fileType","copyBucketRoots","push","changeFileType","exit","localStorage","clear","history","replace","pathname","deleteFiles","fileIndex","backDropTips","backDropToggle","cids","cid","path","copyIndexPaths","indexOf","shift","pop","splice","backDropOpen","handleBackDropClose","changeBucket","changeSpaceDialogOpen","folderInputChange","folderName","target","handleClickOpen","dialogOpen","handleClose","handleChangeSpaceClose","deleteBucketConfirm","bucketDialogTips","isChangeBucket","handleChangeSpaceConfirm","userIdentity","handleConfirm","response","create","bucketRoots","root","newFolder","fileSelectCallback","checked","location","query","links","componentWillMount","loading","document","getElementById","style","display","render","classes","bind","withTheme"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport './Dashboard.css'\nimport {getLocalUserIdentity,} from \"../../common/user\";\nimport {\n    bucketList,\n    deleteBucket,\n    deleteBucketZone,\n    getBucketKey,\n    getBucketKeyByBucketRoot,\n    removeBucketPath,\n    setCurrentBucketZone\n} from \"../../common/bucket\";\nimport {getFileIndex, storeIndex} from \"../../common/FileIndex\";\nimport CustomizedDropZone from \"../../components/CustomizedDropZone/CustomizedDropZone\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport FileZone from \"../../components/FileZone/FileZone\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport DashboardHeader from \"../../components/comps/DashboardHeader\";\nimport {isFileDocument, isFileImage, isFileOther, isFileVideo} from \"../../common/fileutil\";\nimport Sidebar from \"../../components/Sidebar\";\nimport {onDropToUpload} from \"../../common/upload\";\n\nconst useStyles = theme => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(4),\n        right: theme.spacing(4),\n    }\n});\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport const ALL_FILES = \"ALL FILES\"\nexport const IMAGE = \"IMAGE\"\nexport const VIDEO = \"VIDEO\"\nexport const DOCUMENT = \"DOCUMENT\"\nexport const OTHER = \"OTHER\"\n\n\nclass DashboardPage extends React.Component {\n    constructor(props) {\n        super(props);\n        if (props.location.query != null) {\n            this.state = {\n                bucketKey: props.location.query.bucketKey,\n                buckets: props.location.query.buckets,\n                links: props.location.query.links,\n                dialogOpen: false,\n                changeSpaceDialogOpen: false,\n                backDropOpen: false,\n                backDropTips: \"Change Bucket ...\"\n            }\n        }\n    }\n\n\n    async componentWillMount() {\n        this.setState({\n                bucketDialogTips: \"Use this space ?\",\n                isChangeBucket: true,\n                currentType: ALL_FILES\n            }\n        );\n\n        if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\n            const userIdentity = await getLocalUserIdentity();\n            if (userIdentity != null) {\n                const {bucketKey, buckets} = await getBucketKey(userIdentity);\n                this.setState({\n                    bucketKey: bucketKey,\n                    buckets: buckets,\n                })\n            } else {\n                this.props.history.push({pathname: \"/\"});\n                return;\n            }\n        }\n\n        const bucketRoots = await bucketList(this.state.buckets);\n        this.setState({\n            bucketRoots: bucketRoots\n        });\n\n        let loading = document.getElementById('loader');\n        loading.style.display = 'none';\n        const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n        if (index) {\n            this.setState({\n                index: index,\n            })\n            this.filterFile(ALL_FILES);\n        }\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\n            return <div/>\n        }\n        return (\n            <div className=\"h-screen bg-white\">\n                <div className=\"h-screen\">\n                    <div>\n                        <Sidebar loginOut={this.exit}\n                                 changeFileType={this.changeFileType}\n                                 currentFileType={this.state.currentType}/>\n                        <div className=\"relative md:ml-64\">\n                            <DashboardHeader search={this.search}\n                                             roots={this.state.bucketRoots}\n                                             changeBucketCallBack={this.changeBucket}\n                                             onDrop={this.onDrop.bind(this)}/>\n                            <div className=\"actionarea\">\n                                <CustomizedDropZone\n                                    newFolder={this.newFolder}\n                                    checked={this.state.checked}\n                                    deleteFiles={this.deleteFiles}\n                                    deleteBucket={this.deleteBucketConfirm}/>\n                                <FileZone index={this.state.copyIndex} callback={this.fileSelectCallback}/>\n                            </div>\n                        </div>\n                        <div>\n                            <Dialog open={this.state.dialogOpen} onClose={this.handleClose}\n                                    aria-labelledby=\"form-dialog-title\">\n                                <DialogTitle id=\"form-dialog-title\">New Folder</DialogTitle>\n                                <DialogContent>\n                                    <DialogContentText>\n                                        Please enter the folder name, for better use, Please enter English.\n                                    </DialogContentText>\n                                    <TextField\n                                        onChange={this.folderInputChange}\n                                        autoFocus\n                                        margin=\"dense\"\n                                        id=\"name\"\n                                        label=\"Folder Name\"\n                                        type=\"text\"\n                                        fullWidth\n                                    />\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose} color=\"primary\">\n                                        Cancel\n                                    </Button>\n                                    <Button onClick={this.handleConfirm.bind(this)} color=\"primary\">\n                                        Confirm\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n\n                            <Dialog\n                                open={this.state.changeSpaceDialogOpen}\n                                onClose={this.handleChangeSpaceClose}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                            >\n                                <DialogTitle id=\"alert-dialog-title\">{this.state.bucketDialogTips}</DialogTitle>\n                                <DialogContent>\n                                    <DialogContentText id=\"alert-dialog-description\">\n                                        This is a confirmation popup, if you sure, just click confirm.\n                                    </DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleChangeSpaceClose} color=\"primary\">\n                                        Cancel\n                                    </Button>\n                                    <Button onClick={this.handleChangeSpaceConfirm} color=\"primary\">\n                                        Confirm\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        </div>\n                    </div>\n\n                    {/*<Alert className={'tips mb-8'} severity=\"info\">*/}\n                    {/*    <AlertTitle>Don't save important data to IPFS without local backup</AlertTitle>*/}\n                    {/*    Although we are using official reliable IPFS nodes,*/}\n                    {/*    we can't guarantee 100% reliability. For important data, a <strong>local backup</strong> should still be stored </Alert>*/}\n\n                </div>\n\n                <Backdrop className={classes.backdrop} open={this.state.backDropOpen}\n                          onClick={this.handleBackDropClose}>\n                    <CircularProgress color=\"inherit\"/>\n                    <h2>  &nbsp;&nbsp; {this.state.backDropTips}</h2>\n                </Backdrop>\n            </div>\n        );\n    }\n\n    onDrop = (acceptedFiles) => {\n        onDropToUpload(acceptedFiles, this.state.buckets, this.state.bucketKey, async function (data) {\n            let dataAlreadyInPaths = false;\n            this.state.index.paths.forEach(function (element) {\n                if (element['cid'] === data['cid']) {\n                    dataAlreadyInPaths = true;\n                }\n            });\n            if (!dataAlreadyInPaths) {\n                this.setState({\n                    index: {\n                        ...this.state.index,\n                        paths: [...this.state.index.paths, data],\n                        counts: this.state.index.counts + 1\n                    },\n                });\n                this.filterFile(this.state.currentType)\n                await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n            }\n        });\n    };\n    search = (value) => {\n        if (value) {\n            const searchResult = this.state.copyIndex.paths.filter(val => val['name'].match(value));\n            this.setState({\n                copyIndex: {\n                    ...this.state.index,\n                    paths: searchResult,\n                    counts: searchResult.length\n                }\n            })\n        } else {\n            this.filterFile(this.state.currentType)\n        }\n    }\n\n    filterFile = (value) => {\n        const fileType = value;\n        if (fileType === ALL_FILES) {\n            this.setState({\n                copyIndex: this.state.index\n            })\n        } else if (fileType === IMAGE) {\n            let copyBucketRoots = []\n            this.state.index.paths.forEach(function (value) {\n                if (isFileImage(value['type'])) {\n                    copyBucketRoots.push(value)\n                }\n            })\n            this.setState({\n                copyIndex: {\n                    ...this.state.index,\n                    paths: copyBucketRoots,\n                    counts: copyBucketRoots.length\n                }\n            })\n        } else if (fileType === VIDEO) {\n            let copyBucketRoots = []\n            this.state.index.paths.forEach(function (value) {\n                if (isFileVideo(value['type'])) {\n                    copyBucketRoots.push(value)\n                }\n            })\n            this.setState({\n                copyIndex: {\n                    ...this.state.index,\n                    paths: copyBucketRoots,\n                    counts: copyBucketRoots.length\n                }\n            })\n        } else if (fileType === DOCUMENT) {\n            let copyBucketRoots = []\n            this.state.index.paths.forEach(function (value) {\n                if (isFileDocument(value['type'])) {\n                    copyBucketRoots.push(value)\n                }\n            })\n            this.setState({\n                copyIndex: {\n                    ...this.state.index,\n                    paths: copyBucketRoots,\n                    counts: copyBucketRoots.length\n                }\n            })\n        } else {\n            let copyBucketRoots = []\n            this.state.index.paths.forEach(function (value) {\n                if (isFileOther(value['type'])) {\n                    copyBucketRoots.push(value)\n                }\n            })\n            this.setState({\n                copyIndex: {\n                    ...this.state.index,\n                    paths: copyBucketRoots,\n                    counts: copyBucketRoots.length\n                }\n            })\n        }\n    };\n\n    changeFileType = (value) => {\n        this.setState({\n            currentType: value\n        })\n        this.filterFile(value);\n    }\n\n    exit = () => {\n        localStorage.clear();\n        this.props.history.replace({pathname: \"/landing\"})\n    };\n\n    deleteFiles = async (value) => {\n        const buckets = this.state.buckets;\n        const bucketKey = this.state.bucketKey;\n        const fileIndex = value;\n        if (fileIndex != null) {\n            this.setState({\n                backDropTips: \"Delete Files ...\"\n            });\n            this.backDropToggle(true);\n            let cids = [];\n            fileIndex.forEach(async function (value) {\n                cids.push(value.cid);\n                await removeBucketPath(buckets, bucketKey, value.path);\n            });\n            let copyIndexPaths = this.state.index.paths;\n            this.state.index.paths.forEach(function (element, index) {\n                if (cids.indexOf(element['cid']) !== -1) {\n                    if (index === 0) {\n                        copyIndexPaths.shift();\n                    } else if (index === copyIndexPaths.length - 1) {\n                        copyIndexPaths.pop();\n                    } else {\n                        copyIndexPaths.splice(index, 1);\n                    }\n                }\n            });\n            this.setState({\n                index: {\n                    ...this.state.index,\n                    paths: [...copyIndexPaths],\n                    counts: copyIndexPaths.length\n                },\n            })\n            this.filterFile(this.state.currentType)\n\n            await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n            this.setState({\n                backDropTips: \"Change Bucket ...\"\n            });\n            this.backDropToggle(false);\n        }\n    };\n\n    backDropToggle = (value) => {\n        this.setState({\n            backDropOpen: value\n        })\n    };\n\n    handleBackDropClose = () => {\n        this.backDropToggle(false);\n    };\n\n    changeBucket = async (value) => {\n        this.setState({\n            changeBucket: value,\n            changeSpaceDialogOpen: true\n        })\n    };\n\n    folderInputChange = (folderName) => {\n        this.setState({\n            folderName: folderName.target.value\n        })\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n                dialogOpen: true\n            }\n        );\n    };\n\n    handleClose = () => {\n        this.setState({\n                dialogOpen: false\n            }\n        );\n    };\n\n    handleChangeSpaceClose = () => {\n        this.setState({\n                changeSpaceDialogOpen: false\n            }\n        );\n    };\n\n    deleteBucketConfirm = async () => {\n        this.setState({\n            changeSpaceDialogOpen: true,\n            bucketDialogTips: \"Delete this space ?\",\n            isChangeBucket: false\n        })\n    };\n\n    handleChangeSpaceConfirm = async () => {\n        if (this.state.isChangeBucket) {\n            const value = this.state.changeBucket;\n            this.handleChangeSpaceClose();\n            if (value != null) {\n                this.backDropToggle(true);\n                const userIdentity = await getLocalUserIdentity();\n                const {bucketKey, buckets} = await getBucketKeyByBucketRoot(userIdentity, value);\n                this.setState({\n                    bucketKey: bucketKey,\n                    buckets: buckets,\n                });\n                setCurrentBucketZone(value);\n                const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n                if (index) {\n                    this.setState({\n                        index: index\n                    })\n                    this.filterFile(ALL_FILES)\n                }\n                this.backDropToggle(false);\n            }\n        } else {\n            this.handleChangeSpaceClose();\n            await this.deleteBucket();\n        }\n    };\n\n    handleConfirm = async () => {\n        this.setState({\n                dialogOpen: false\n            }\n        );\n        const folderName = this.state.folderName;\n        // const path = `${'/'}${folderName}${'/'}${'.seed'}`;\n        // await this.state.buckets.pushPath(this.state.bucketKey, path, new Uint8Array(128))\n        const response = await this.state.buckets.create(folderName);\n        this.setState({\n            bucketRoots: [...this.state.bucketRoots, response.root]\n        })\n    };\n\n    newFolder = (data) => {\n        this.handleClickOpen();\n    };\n\n    fileSelectCallback = (data) => {\n        this.setState({\n            checked: data\n        });\n    };\n\n    deleteBucket = async () => {\n        this.backDropToggle(true);\n        if (this.state.bucketRoots.length === 1) {\n            return;\n        }\n        await deleteBucket(this.state.buckets, this.state.bucketKey);\n        const bucketRoots = await bucketList(this.state.buckets);\n        deleteBucketZone();\n        this.setState({\n            changeBucket: bucketRoots[0],\n            bucketRoots: bucketRoots,\n            isChangeBucket: true\n        });\n        await this.handleChangeSpaceConfirm();\n    };\n}\n\nexport default withStyles(useStyles, {withTheme: true})(DashboardPage);\n"]},"metadata":{},"sourceType":"module"}