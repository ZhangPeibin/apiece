{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/views/userIdentity/UserIdentity.js\";\nimport * as React from \"react\";\nimport '../../index.css';\nimport { createSeedByMnemonic, saveLocalUserIdentity, userIdentityFromSeed } from \"../../common/user\";\nimport { bucketLinks, getBucketKey } from \"../../common/bucket\";\nimport { Buckets, PushPathResult, KeyInfo, PrivateKey, WithKeyInfoOptions } from '@textile/hub';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class UserIdentityPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (this.props.location.query == null) {\n      this.props.history.push({\n        pathname: \"/mnemonic/page\"\n      });\n    } else {\n      this.state = {\n        userIdentity: this.props.location.query.userIdentity,\n        seed: null\n      };\n    }\n  }\n\n  async componentWillMount() {\n    if (this.state == null || this.state.userIdentity == null) {\n      this.props.history.push({\n        pathname: \"/mnemonic/page\"\n      });\n      return;\n    }\n\n    const seed = createSeedByMnemonic(this.state.userIdentity);\n    const userIdentity = userIdentityFromSeed(seed);\n    saveLocalUserIdentity(userIdentity.toString());\n    const {\n      bucketKey,\n      buckets\n    } = await getBucketKey(userIdentity);\n    const links = await bucketLinks(buckets, bucketKey);\n    const query = {\n      bucketKey: bucketKey,\n      buckets: buckets,\n      links: links\n    };\n    this.props.history.push({\n      pathname: \"/dashBoard\",\n      query: query\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        id: \"loader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loadingtext\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"loadingh5\",\n          children: \"\\u521B\\u5EFA\\u60A8\\u7684\\u7A7A\\u95F4\\u4E2D\\uFF0C\\u53EF\\u80FD\\u9700\\u8981\\u7B49\\u5F85\\u4E00\\u4F1A...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/views/userIdentity/UserIdentity.js"],"names":["React","createSeedByMnemonic","saveLocalUserIdentity","userIdentityFromSeed","bucketLinks","getBucketKey","Buckets","PushPathResult","KeyInfo","PrivateKey","WithKeyInfoOptions","UserIdentityPage","Component","constructor","props","location","query","history","push","pathname","state","userIdentity","seed","componentWillMount","toString","bucketKey","buckets","links","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,iBAAP;AACA,SAAQC,oBAAR,EAA8BC,qBAA9B,EAAqDC,oBAArD,QAAgF,mBAAhF;AACA,SAAQC,WAAR,EAAqBC,YAArB,QAAwC,qBAAxC;AACA,SAASC,OAAT,EAAkBC,cAAlB,EAAkCC,OAAlC,EAA2CC,UAA3C,EAAuDC,kBAAvD,QAAiF,cAAjF;;AAEA,OAAO,MAAMC,gBAAN,SAA+BX,KAAK,CAACY,SAArC,CAA8C;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AACA,QAAG,KAAKA,KAAL,CAAWC,QAAX,CAAoBC,KAApB,IAA2B,IAA9B,EAAmC;AAC/B,WAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB;AAAEC,QAAAA,QAAQ,EAAC;AAAX,OAAxB;AACH,KAFD,MAEK;AACD,WAAKC,KAAL,GAAa;AACTC,QAAAA,YAAY,EAAC,KAAKP,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0BK,YAD9B;AAETC,QAAAA,IAAI,EAAC;AAFI,OAAb;AAIH;AACJ;;AAEwB,QAAlBC,kBAAkB,GAAG;AACvB,QAAI,KAAKH,KAAL,IAAc,IAAd,IAAsB,KAAKA,KAAL,CAAWC,YAAX,IAA2B,IAArD,EAA2D;AACvD,WAAKP,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAxB;AACA;AACH;;AACD,UAAMG,IAAI,GAAGrB,oBAAoB,CAAC,KAAKmB,KAAL,CAAWC,YAAZ,CAAjC;AACA,UAAMA,YAAY,GAAGlB,oBAAoB,CAACmB,IAAD,CAAzC;AACApB,IAAAA,qBAAqB,CAACmB,YAAY,CAACG,QAAb,EAAD,CAArB;AACA,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAuB,MAAMrB,YAAY,CAACgB,YAAD,CAA/C;AACA,UAAMM,KAAK,GAAG,MAAMvB,WAAW,CAACsB,OAAD,EAASD,SAAT,CAA/B;AACA,UAAMT,KAAK,GAAG;AACVS,MAAAA,SAAS,EAACA,SADA;AAEVC,MAAAA,OAAO,EAACA,OAFE;AAGVC,MAAAA,KAAK,EAACA;AAHI,KAAd;AAKA,SAAKb,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB;AAACC,MAAAA,QAAQ,EAAE,YAAX;AAAwBH,MAAAA,KAAK,EAAGA;AAAhC,KAAxB;AACH;;AAEFY,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,EAAE,EAAC,QAA3B;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAI,UAAA,SAAS,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAhDgD","sourcesContent":["import * as React from \"react\";\nimport '../../index.css'\nimport {createSeedByMnemonic, saveLocalUserIdentity, userIdentityFromSeed} from \"../../common/user\";\nimport {bucketLinks, getBucketKey} from \"../../common/bucket\";\nimport { Buckets, PushPathResult, KeyInfo, PrivateKey, WithKeyInfoOptions } from '@textile/hub'\n\nexport class UserIdentityPage extends React.Component{\n    constructor(props){\n        super(props);\n        if(this.props.location.query==null){\n            this.props.history.push({ pathname:\"/mnemonic/page\"});\n        }else{\n            this.state = {\n                userIdentity:this.props.location.query.userIdentity,\n                seed:null\n            };\n        }\n    }\n\n     async componentWillMount() {\n         if (this.state == null || this.state.userIdentity == null) {\n             this.props.history.push({pathname: \"/mnemonic/page\"});\n             return;\n         }\n         const seed = createSeedByMnemonic(this.state.userIdentity);\n         const userIdentity = userIdentityFromSeed(seed);\n         saveLocalUserIdentity(userIdentity.toString());\n         const {bucketKey, buckets} = await getBucketKey(userIdentity);\n         const links = await bucketLinks(buckets,bucketKey);\n         const query = {\n             bucketKey:bucketKey,\n             buckets:buckets,\n             links:links,\n         };\n         this.props.history.push({pathname: \"/dashBoard\",query : query})\n     }\n\n    render() {\n        return (\n            <div>\n                <div className=\"loader\" id=\"loader\">\n                    <div className=\"square\"/>\n                    <div className=\"square\"/>\n                    <div className=\"square\"/>\n                    <div className=\"square\"/>\n                    <div className=\"square\"/>\n                </div>\n                <div className=\"loadingtext\">\n                    <h6 className={\"loadingh5\"}>\n                        创建您的空间中，可能需要等待一会...\n                    </h6>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}