{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useCallback } from \"react\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { onDropToUpload } from \"../../common/upload\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport './Dashboard.css';\nimport { getLocalUserIdentity } from \"../../common/user\";\nimport { getBucketKey } from \"../../common/bucket\";\nimport Dropzone from \"react-dropzone\";\nimport CustomizedInputBase from \"../../components/CustomizedInputBase/CustomizedInputBase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props.location.query != null) {\n      this.state = {\n        bucketKey: props.location.query.bucketKey,\n        buckets: props.location.query.buckets,\n        links: props.location.query.links\n      };\n    }\n  }\n\n  async componentWillMount() {\n    if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\n      const userIdentity = await getLocalUserIdentity();\n\n      if (userIdentity != null) {\n        const {\n          bucketKey,\n          buckets\n        } = await getBucketKey(userIdentity);\n        this.setState({\n          bucketKey: bucketKey,\n          buckets: buckets\n        });\n      } else {\n        this.props.history.push({\n          pathname: \"/mnemonic\"\n        });\n      }\n    }\n\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n  }\n\n  render() {\n    if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(CustomizedInputBase, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyDropZone, {\n        className: \"dropzone\",\n        bucketKey: this.state.bucketKey,\n        buckets: this.state.buckets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction MyDropZone(props) {\n  _s();\n\n  const bucketKey = props.bucketKey;\n  const buckets = props.buckets;\n  const onDrop = useCallback(acceptedFiles => {\n    onDropToUpload(acceptedFiles, buckets, bucketKey);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: onDrop,\n      multiple: true,\n      children: ({\n        getRootProps,\n        getInputProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropzone\",\n        ...getRootProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 40\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyDropZone, \"jxJjeNCcTCma4EZ46I3/YMvQ3sw=\");\n\n_c = MyDropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyDropZone\");","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js"],"names":["React","useCallback","CloudUploadIcon","onDropToUpload","Button","Paper","getLocalUserIdentity","getBucketKey","Dropzone","CustomizedInputBase","DashboardPage","Component","constructor","props","location","query","state","bucketKey","buckets","links","componentWillMount","userIdentity","setState","history","push","pathname","loading","document","getElementById","style","display","render","MyDropZone","onDrop","acceptedFiles","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {useCallback} from \"react\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\nimport {onDropToUpload} from \"../../common/upload\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport './Dashboard.css'\nimport {\n    getLocalUserIdentity,\n} from \"../../common/user\";\nimport {getBucketKey} from \"../../common/bucket\";\nimport Dropzone from \"react-dropzone\";\nimport CustomizedInputBase from \"../../components/CustomizedInputBase/CustomizedInputBase\";\n\nexport class DashboardPage extends React.Component {\n    constructor(props) {\n        super(props);\n        if(props.location.query!=null){\n            this.state = {\n                bucketKey: props.location.query.bucketKey,\n                buckets: props.location.query.buckets,\n                links: props.location.query.links,\n            }\n        }\n    }\n\n    async componentWillMount() {\n        if (this.state==null || this.state.bucketKey == null || this.state.buckets == null) {\n            const userIdentity = await  getLocalUserIdentity();\n            if (userIdentity != null) {\n                const {bucketKey, buckets} = await getBucketKey(userIdentity);\n                this.setState({\n                    bucketKey:bucketKey,\n                    buckets:buckets,\n                })\n            } else {\n                this.props.history.push({pathname: \"/mnemonic\"});\n            }\n        }\n        let loading = document.getElementById('loader');\n        loading.style.display = 'none';\n    }\n\n    render() {\n        if(this.state==null || this.state.buckets == null || this.state.bucketKey ==null){\n            return <div/>\n        }\n        return (\n            <Paper className='paper'>\n                <CustomizedInputBase/>\n                <MyDropZone className='dropzone' bucketKey={this.state.bucketKey} buckets={this.state.buckets}/>\n            </Paper>\n        );\n    }\n}\n\nfunction MyDropZone(props) {\n     const bucketKey = props.bucketKey;\n     const buckets = props.buckets;\n\n    const onDrop = useCallback(acceptedFiles => {\n        onDropToUpload(acceptedFiles,buckets,bucketKey);\n    }, [])\n\n    return (\n        <div>\n            <Dropzone\n                onDrop={onDrop}\n                multiple={true}\n            >\n                {({getRootProps, getInputProps}) => (\n                    <div className=\"dropzone\" {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <Button\n                            variant=\"contained\"\n                            color={\"secondary\"}\n                            startIcon={<CloudUploadIcon/>}>\n                            <span>Upload</span>\n                        </Button>\n                    </div>\n                )}\n            </Dropzone>\n        </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}