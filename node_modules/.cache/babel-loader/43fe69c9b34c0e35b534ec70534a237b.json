{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/components/bucketzone/BucketZone.js\";\nimport Divider from \"@material-ui/core/Divider\";\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BucketZone(props) {\n  const bucketRoots = props.roots;\n  return bucketRoots == null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 15\n  }, this) : bucketRoots.forEach(function (root) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'spacetitle',\n        children: \"Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        light: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }, this);\n  });\n}\n_c = BucketZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"BucketZone\");","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/components/bucketzone/BucketZone.js"],"names":["Divider","React","BucketZone","props","bucketRoots","roots","forEach","root"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,2BAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEtC,QAAMC,WAAW,GAAGD,KAAK,CAACE,KAA1B;AAEA,SACID,WAAW,IAAI,IAAf,gBACM;AAAA;AAAA;AAAA;AAAA,UADN,GAGIA,WAAW,CAACE,OAAZ,CAAoB,UAAUC,IAAV,EAAgB;AAChC,wBACI;AAAA,8BACI;AAAM,QAAA,SAAS,EAAE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,OAAD;AAAS,QAAA,KAAK;AAAd;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPD,CAJR;AAcH;KAlBuBL,U","sourcesContent":["import Divider from \"@material-ui/core/Divider\";\nimport * as React from \"react\";\n\nexport default function BucketZone(props) {\n\n    const bucketRoots = props.roots;\n\n    return (\n        bucketRoots == null ? (\n             (<div/>)\n        ) : (\n            bucketRoots.forEach(function (root) {\n                return (\n                    <div>\n                        <span className={'spacetitle'}>Spaces</span>\n                        <Divider light/>\n                    </div>\n                )\n            })\n        )\n    );\n}"]},"metadata":{},"sourceType":"module"}