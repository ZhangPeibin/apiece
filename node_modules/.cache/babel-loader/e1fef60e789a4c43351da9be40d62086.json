{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js\";\nimport * as React from \"react\";\nimport './Dashboard.css';\nimport { getLocalUserIdentity } from \"../../common/user\";\nimport { bucketList, getBucketKey } from \"../../common/bucket\";\nimport { getFileIndex, storeIndex } from \"../../common/FileIndex\";\nimport CustomizedDropZone from \"../../components/CustomizedDropZone/CustomizedDropZone\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Header from \"../../components/Header/Header\";\nimport FileZone from \"../../components/FileZone/FileZone\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport BucketZone from \"../../components/bucketzone/BucketZone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.folderInputChange = folderName => {\n      this.setState({\n        folderName: folderName.target.value\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        dialogOpen: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        dialogOpen: false\n      });\n    };\n\n    this.handleConfirm = async () => {\n      this.setState({\n        dialogOpen: false\n      });\n      const folderName = this.state.folderName; // const path = `${'/'}${folderName}${'/'}${'.seed'}`;\n      // await this.state.buckets.pushPath(this.state.bucketKey, path, new Uint8Array(128))\n\n      const response = await this.state.buckets.create(folderName);\n      this.setState({\n        bucketRoots: [...this.state.bucketRoots, response.root]\n      });\n    };\n\n    this.newFolder = data => {\n      this.handleClickOpen();\n    };\n\n    this.fileSelectCallback = data => {\n      this.setState({\n        checked: data\n      });\n    };\n\n    this.fileUploadCallback = async data => {\n      let dataAlreadyInPaths = false;\n      this.state.index.paths.forEach(function (element) {\n        if (element['cid'] === data['cid']) {\n          dataAlreadyInPaths = true;\n        }\n      });\n\n      if (!dataAlreadyInPaths) {\n        this.setState({\n          index: { ...this.state.index,\n            paths: [...this.state.index.paths, data],\n            counts: this.state.index.counts + 1\n          }\n        });\n        await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n      }\n    };\n\n    if (props.location.query != null) {\n      this.state = {\n        bucketKey: props.location.query.bucketKey,\n        buckets: props.location.query.buckets,\n        links: props.location.query.links,\n        dialogOpen: false\n      };\n    }\n  }\n\n  async componentWillMount() {\n    if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\n      const userIdentity = await getLocalUserIdentity();\n\n      if (userIdentity != null) {\n        const {\n          bucketKey,\n          buckets\n        } = await getBucketKey(userIdentity);\n        this.setState({\n          bucketKey: bucketKey,\n          buckets: buckets\n        });\n      } else {\n        this.props.history.push({\n          pathname: \"/\"\n        });\n      }\n    }\n\n    const bucketRoots = await bucketList(this.state.buckets);\n    this.setState({\n      bucketRoots: bucketRoots\n    });\n    let loading = document.getElementById('loader');\n    loading.style.display = 'none';\n    const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n\n    if (index) {\n      this.setState({\n        index: index\n      });\n    }\n  }\n\n  render() {\n    if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          color: \"transparent\",\n          brand: \"Store Data \\xB7 Reshape Privacy\",\n          fixed: true,\n          changeColorOnScroll: {\n            height: 400,\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          className: 'leftCard',\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'spacetitle',\n            children: \"Spaces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            light: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(BucketZone, {\n            roots: this.state.bucketRoots\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(CustomizedDropZone, {\n            bucketKey: this.state.bucketKey,\n            buckets: this.state.buckets,\n            callback: this.fileUploadCallback,\n            newFolder: this.newFolder,\n            checked: this.state.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FileZone, {\n            index: this.state.index,\n            callback: this.fileSelectCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Dialog, {\n          open: this.state.dialogOpen,\n          onClose: this.handleClose,\n          \"aria-labelledby\": \"form-dialog-title\",\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"form-dialog-title\",\n            children: \"New Folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"Please enter the folder name, for better use, please enter English.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: this.folderInputChange,\n              autoFocus: true,\n              margin: \"dense\",\n              id: \"name\",\n              label: \"Folder Name\",\n              type: \"text\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.handleClose,\n              color: \"primary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.handleConfirm.bind(this),\n              color: \"primary\",\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/wiki/code/filecoin/private.storage/src/views/dashborad/Dashboard.js"],"names":["React","getLocalUserIdentity","bucketList","getBucketKey","getFileIndex","storeIndex","CustomizedDropZone","Dialog","DialogTitle","DialogActions","Header","FileZone","DialogContent","DialogContentText","TextField","Button","Paper","Grid","Divider","BucketZone","DashboardPage","Component","constructor","props","folderInputChange","folderName","setState","target","value","handleClickOpen","dialogOpen","handleClose","handleConfirm","state","response","buckets","create","bucketRoots","root","newFolder","data","fileSelectCallback","checked","fileUploadCallback","dataAlreadyInPaths","index","paths","forEach","element","counts","bucketKey","location","query","links","componentWillMount","userIdentity","history","push","pathname","loading","document","getElementById","style","display","render","height","color","bind"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport './Dashboard.css'\nimport {getLocalUserIdentity,} from \"../../common/user\";\nimport {bucketList, getBucketKey} from \"../../common/bucket\";\nimport {getFileIndex, storeIndex} from \"../../common/FileIndex\";\nimport CustomizedDropZone from \"../../components/CustomizedDropZone/CustomizedDropZone\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Header from \"../../components/Header/Header\";\nimport FileZone from \"../../components/FileZone/FileZone\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport BucketZone from \"../../components/bucketzone/BucketZone\";\n\nexport class DashboardPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (props.location.query != null) {\n            this.state = {\n                bucketKey: props.location.query.bucketKey,\n                buckets: props.location.query.buckets,\n                links: props.location.query.links,\n                dialogOpen: false,\n            }\n        }\n    }\n\n    async componentWillMount() {\n        if (this.state == null || this.state.bucketKey == null || this.state.buckets == null) {\n            const userIdentity = await getLocalUserIdentity();\n            if (userIdentity != null) {\n                const {bucketKey, buckets} = await getBucketKey(userIdentity);\n                this.setState({\n                    bucketKey: bucketKey,\n                    buckets: buckets,\n                })\n            } else {\n                this.props.history.push({pathname: \"/\"});\n            }\n        }\n\n        const bucketRoots = await bucketList(this.state.buckets);\n        this.setState({\n            bucketRoots:bucketRoots\n        });\n\n        let loading = document.getElementById('loader');\n        loading.style.display = 'none';\n        const index = await getFileIndex(this.state.buckets, this.state.bucketKey);\n        if (index) {\n            this.setState({\n                index: index\n            })\n        }\n    }\n\n    render() {\n        if (this.state == null || this.state.buckets == null || this.state.bucketKey == null) {\n            return <div/>\n        }\n        return (\n            <div>\n                <div>\n                    <Header\n                        color=\"transparent\"\n                        brand=\"Store Data · Reshape Privacy\"\n                        fixed\n                        changeColorOnScroll={{\n                            height: 400,\n                            color: \"white\",\n                        }}\n                    />\n                </div>\n                <Grid\n                    container\n                    direction=\"row\"   justify=\"flex-start\">\n                    <Paper className={'leftCard'}>\n                        <span className={'spacetitle'}>Spaces</span>\n                        <Divider light />\n                        <BucketZone roots={this.state.bucketRoots}/>\n                    </Paper>\n                    <Grid direction=\"column\">\n                        <CustomizedDropZone bucketKey={this.state.bucketKey}\n                                            buckets={this.state.buckets}\n                                            callback={this.fileUploadCallback}\n                                            newFolder={this.newFolder}\n                                            checked={this.state.checked}/>\n                        <FileZone index={this.state.index} callback={this.fileSelectCallback}/>\n                    </Grid>\n                </Grid>\n\n\n                <div>\n                    <Dialog open={this.state.dialogOpen} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">New Folder</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Please enter the folder name, for better use, please enter English.\n                            </DialogContentText>\n                            <TextField\n                                onChange={this.folderInputChange}\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Folder Name\"\n                                type=\"text\"\n                                fullWidth\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={this.handleConfirm.bind(this)} color=\"primary\">\n                                Confirm\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            </div>\n        );\n    }\n\n    folderInputChange = (folderName) => {\n        this.setState({\n            folderName: folderName.target.value\n        })\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n                dialogOpen: true\n            }\n        );\n    };\n\n    handleClose = () => {\n        this.setState({\n                dialogOpen: false\n            }\n        );\n    };\n\n    handleConfirm = async () => {\n        this.setState({\n                dialogOpen: false\n            }\n        );\n        const folderName = this.state.folderName;\n        // const path = `${'/'}${folderName}${'/'}${'.seed'}`;\n        // await this.state.buckets.pushPath(this.state.bucketKey, path, new Uint8Array(128))\n        const response = await this.state.buckets.create(folderName);\n        this.setState({\n            bucketRoots: [...this.state.bucketRoots, response.root]\n        })\n    };\n\n    newFolder = (data) => {\n        this.handleClickOpen();\n    };\n\n    fileSelectCallback = (data) => {\n        this.setState({\n            checked: data\n        });\n    };\n\n    fileUploadCallback = async (data) => {\n        let dataAlreadyInPaths = false;\n        this.state.index.paths.forEach(function (element) {\n            if (element['cid'] === data['cid']) {\n                dataAlreadyInPaths = true;\n            }\n        });\n        if (!dataAlreadyInPaths) {\n            this.setState({\n                index: {\n                    ...this.state.index,\n                    paths: [...this.state.index.paths, data],\n                    counts: this.state.index.counts + 1\n                },\n            });\n            await storeIndex(this.state.index, this.state.buckets, this.state.bucketKey);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}