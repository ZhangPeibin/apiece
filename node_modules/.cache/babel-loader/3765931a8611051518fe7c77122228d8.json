{"ast":null,"code":"var _jsxFileName = \"/Users/wiki/code/apiece/src/components/FileZone/FileZone.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { FileIndex } from \"../../common/Types\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginLeft: '32px',\n    marginBottom: '32px',\n    padding: '2px 4px',\n    paddingRight: '16px',\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  listItem: {\n    height: 40\n  },\n  checkboxlistlabelname: {\n    width: '100%px'\n  },\n  listDate: {\n    width: 400,\n    alignItems: \"left\"\n  },\n  modified: {\n    width: 400,\n    alignItems: \"left\"\n  }\n}));\nexport default function FileZone(props) {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  let allSelect = false; // @ts-ignore\n\n  const index = props.index;\n  const fileSelectCallback = props.callback;\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      allSelect = false;\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    fileSelectCallback(newChecked);\n  };\n\n  const allToggle = event => {\n    const currentChecked = event.target.checked;\n    allSelect = currentChecked;\n    const newChecked = [...checked];\n    index.paths.map(value => {\n      const elementIndex = newChecked.indexOf(value);\n\n      if (currentChecked) {\n        if (elementIndex === -1) {\n          newChecked.push(value);\n        }\n      } else {\n        if (elementIndex !== -1) {\n          newChecked.splice(elementIndex, 1);\n        }\n      }\n    });\n    setChecked(newChecked);\n    fileSelectCallback(newChecked);\n  };\n\n  const handleItemClick = value => {\n    const cid = value['cid'];\n    const url = \"https://hub.textile.io/ipfs/\" + cid;\n    window.open(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      className: classes.listItem,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: allToggle,\n          edge: \"start\",\n          disableRipple: true,\n          inputProps: {\n            'aria-labelledby': 'all_check'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        className: \"w-full\",\n        primary: `Name`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        className: classes.listDate,\n        primary: `Size`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        className: classes.modified,\n        primary: `Last Modified`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      component: \"li\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), index == null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 34\n    }, this) : index.paths.map(value => {\n      const labelId = `checkbox-list-label-${value}`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        className: classes.listItem,\n        role: undefined,\n        dense: true,\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            color: \"secondary\",\n            onChange: handleToggle(value),\n            edge: \"start\",\n            checked: allSelect || checked.indexOf(value) !== -1,\n            tabIndex: -1,\n            disableRipple: true,\n            inputProps: {\n              'aria-labelledby': labelId\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          onClick: event => handleItemClick(value),\n          className: \"w-full\",\n          id: labelId,\n          primary: value['name']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          onClick: event => handleItemClick(value),\n          className: classes.listDate,\n          primary: getFileSize(value['size'])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          onClick: event => handleItemClick(value),\n          className: classes.modified,\n          primary: value['date']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }, this)]\n      }, value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileZone, \"0P6TPVieeX2xLOlLWo+X1BtKHIc=\", false, function () {\n  return [useStyles];\n});\n\n_c = FileZone;\n\nfunction getFileSize(limit) {\n  var size = \"\";\n\n  if (limit < 0.1 * 1024) {\n    //小于0.1KB，则转化成B\n    size = limit.toFixed(2) + \"B\";\n  } else if (limit < 0.1 * 1024 * 1024) {\n    //小于0.1MB，则转化成KB\n    size = (limit / 1024).toFixed(2) + \"KB\";\n  } else if (limit < 0.1 * 1024 * 1024 * 1024) {\n    //小于0.1GB，则转化成MB\n    size = (limit / (1024 * 1024)).toFixed(2) + \"MB\";\n  } else {\n    //其他转化成GB\n    size = (limit / (1024 * 1024 * 1024)).toFixed(2) + \"GB\";\n  }\n\n  var sizeStr = size + \"\"; //转成字符串\n\n  var index = sizeStr.indexOf(\".\"); //获取小数点处的索引\n\n  var dou = sizeStr.substr(index + 1, 2); //获取小数点后两位的值\n\n  if (dou == \"00\") {\n    //判断后两位是否为00，如果是则删除00\n    return sizeStr.substring(0, index) + sizeStr.substr(index + 3, 2);\n  }\n\n  return size;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FileZone\");","map":{"version":3,"sources":["/Users/wiki/code/apiece/src/components/FileZone/FileZone.js"],"names":["React","makeStyles","List","ListItem","ListItemIcon","ListItemText","Checkbox","FileIndex","Divider","useStyles","theme","root","marginLeft","marginBottom","padding","paddingRight","width","backgroundColor","palette","background","paper","listItem","height","checkboxlistlabelname","listDate","alignItems","modified","FileZone","props","classes","checked","setChecked","useState","allSelect","index","fileSelectCallback","callback","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","allToggle","event","currentChecked","target","paths","map","elementIndex","handleItemClick","cid","url","window","open","labelId","undefined","getFileSize","limit","size","toFixed","sizeStr","dou","substr","substring"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {FileIndex} from \"../../common/Types\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginLeft: '32px',\n        marginBottom:'32px',\n        padding: '2px 4px',\n        paddingRight: '16px',\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    listItem: {\n        height: 40\n    },\n    checkboxlistlabelname: {\n        width: '100%px',\n    },\n    listDate: {\n        width: 400,\n        alignItems: \"left\",\n    },\n    modified: {\n        width: 400,\n        alignItems: \"left\",\n    }\n\n}));\n\nexport default function FileZone(props) {\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState([]);\n    let allSelect = false;\n    // @ts-ignore\n    const index: FileIndex = props.index;\n    const fileSelectCallback = props.callback;\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            allSelect = false;\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n        fileSelectCallback(newChecked)\n    };\n\n    const allToggle = (event) => {\n        const currentChecked = event.target.checked;\n        allSelect = currentChecked;\n        const newChecked = [...checked];\n        index.paths.map((value) => {\n            const elementIndex = newChecked.indexOf(value);\n            if (currentChecked) {\n                if (elementIndex === -1) {\n                    newChecked.push(value)\n                }\n            } else {\n                if (elementIndex !== -1) {\n                    newChecked.splice(elementIndex, 1)\n                }\n            }\n        });\n        setChecked(newChecked);\n        fileSelectCallback(newChecked)\n    };\n\n    const handleItemClick = (value) => {\n        const cid = value['cid'];\n        const url = \"https://hub.textile.io/ipfs/\"+cid;\n        window.open(url)\n    }\n\n    return (\n        <List className={classes.root}>\n            <ListItem className={classes.listItem}>\n                <ListItemIcon>\n                    <Checkbox\n                        onChange={allToggle}\n                        edge=\"start\"\n                        disableRipple\n                        inputProps={{'aria-labelledby': 'all_check'}}\n                    />\n                </ListItemIcon>\n                <ListItemText className=\"w-full\" primary={`Name`}/>\n                <ListItemText className={classes.listDate} primary={`Size`}/>\n                <ListItemText className={classes.modified} primary={`Last Modified`}/>\n            </ListItem>\n            <Divider component=\"li\"/>\n\n            {\n                index == null ? (<div/>) :\n                    index.paths.map((value) => {\n                        const labelId = `checkbox-list-label-${value}`;\n                        return (\n                            <ListItem\n                                className={classes.listItem} key={value} role={undefined} dense button>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        color={\"secondary\"}\n                                        onChange={handleToggle(value)}\n                                        edge=\"start\"\n                                        checked={allSelect || checked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{'aria-labelledby': labelId}}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText\n                                    onClick={(event)=>handleItemClick(value)}\n                                    className=\"w-full\" id={labelId}\n                                              primary={value['name']}/>\n                                <ListItemText\n                                    onClick={(event)=>handleItemClick(value)}\n                                    className={classes.listDate}\n                                    primary={getFileSize(value['size'])}/>\n                                <ListItemText\n                                    onClick={(event)=>handleItemClick(value)}\n                                    className={classes.modified} primary={value['date']}/>\n                            </ListItem>\n                        );\n                    })}\n        </List>\n    );\n}\n\nfunction getFileSize(limit) {\n    var size = \"\";\n    if (limit < 0.1 * 1024) {                            //小于0.1KB，则转化成B\n        size = limit.toFixed(2) + \"B\"\n    } else if (limit < 0.1 * 1024 * 1024) {            //小于0.1MB，则转化成KB\n        size = (limit / 1024).toFixed(2) + \"KB\"\n    } else if (limit < 0.1 * 1024 * 1024 * 1024) {        //小于0.1GB，则转化成MB\n        size = (limit / (1024 * 1024)).toFixed(2) + \"MB\"\n    } else {                                            //其他转化成GB\n        size = (limit / (1024 * 1024 * 1024)).toFixed(2) + \"GB\"\n    }\n\n    var sizeStr = size + \"\";                        //转成字符串\n    var index = sizeStr.indexOf(\".\");                    //获取小数点处的索引\n    var dou = sizeStr.substr(index + 1, 2)            //获取小数点后两位的值\n    if (dou == \"00\") {                                //判断后两位是否为00，如果是则删除00\n        return sizeStr.substring(0, index) + sizeStr.substr(index + 3, 2)\n    }\n    return size;\n}\n"]},"metadata":{},"sourceType":"module"}